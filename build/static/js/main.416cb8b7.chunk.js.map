{"version":3,"sources":["components/Relations/Relations.module.scss","components/Panel/Panel.module.scss","components/Hint/Hint.module.scss","components/App/App.module.scss","components/Completions/Completions.module.scss","components/Entities/Entities.module.scss","components/SideColumn/SideColumn.module.scss","components/Waveform/Waveform.module.scss","components/TextHighlight/TextHighlight.module.scss","interfaces/object/TextRegion/TextRegion.module.scss","components/Segment/Segment.module.scss","core/Registry.js","core/Requests.js","utils/unique.js","core/Helpers.js","core/Tree.js","utils/utilities.js","utils/colors.js","utils/date.js","utils/index.js","utils/debounce.js","utils/styles.js","components/Completions/Completions.js","components/Hint/Hint.js","components/Controls/Controls.js","components/Panel/Panel.js","components/Settings/Settings.js","components/Debug.js","components/Node.js","components/Relations/Relations.js","components/Entities/Entities.js","components/Entity/Entity.js","components/SideColumn/SideColumn.js","core/Types.js","interfaces/visual/View.js","core/Template.js","interfaces/mixins/ProcessAttrs.js","interfaces/visual/Table.js","interfaces/visual/Header.js","interfaces/visual/HyperText.js","components/Dialog/Dialog.js","interfaces/visual/Dialog.js","interfaces/object/Audio.js","components/Waveform/Waveform.js","interfaces/mixins/Regions.js","interfaces/mixins/Normalization.js","interfaces/control/Label.js","interfaces/mixins/SelectedModel.js","interfaces/control/Labels.js","interfaces/control/Rating.js","interfaces/object/AudioRegion.js","interfaces/object/AudioPlus.js","interfaces/control/Rectangle.js","interfaces/control/RectangleLabels.js","interfaces/object/RectRegion.js","interfaces/object/PolygonPoint.js","interfaces/control/Polygon.js","interfaces/control/PolygonLabels.js","interfaces/object/PolygonRegion.js","interfaces/object/Image.js","components/TextHighlight/Range.js","components/TextNode/TextNode.js","components/TextHighlight/Node.js","components/TextHighlight/UrlNode.js","components/TextHighlight/EmojiNode.js","components/TextHighlight/TextHighlight.js","interfaces/object/TextRegion.js","interfaces/object/Text.js","interfaces/control/Choice.js","components/Choice/Choice.js","interfaces/control/Choices.js","interfaces/object/TextAreaRegion.js","interfaces/control/TextArea.js","interfaces/control/List.js","interfaces/control/Ranker.js","components/Segment/Segment.js","components/App/App.js","serviceWorker.js","stores/TaskStore.js","core/TimeTraveller.js","core/Hotkey.js","stores/RelationStore.js","stores/RegionStore.js","stores/CompletionStore.js","stores/AppStore.js","env/prod.js","env/config-development.js","env/dev.js","index.js","components/Entity/Entity.module.scss","components/Controls/Controls.module.scss","components/Dialog/Dialog.module.scss"],"names":["module","exports","block","section","section__blocks","delete","container","main","pushable","hide-dd-icon","drag-handle","noselect","common-container","functional-buttons","editor-side-column","editor","menu","content","buttons","item","card","progress","wave","state","Registry","_Registry","Object","classCallCheck","this","tags","models","views","views_models","tag","model","view","push","name","values","modelName","Error","keys","join","wrapperRequest","url","method","headers","body","window","fetch","credentials","then","response","res","status","json","Requests","fetcher","Accept","poster","Content-Type","remover","patch","guidGenerator","nanoid","cloneNode","node","snapshot","getSnapshot","getType","create","objectSpread","id","restoreNewsnapshot","fromModel","renderItem","el","View","getViewByModel","react_default","a","createElement","key","Tree","cloneReactTree","items","attrs","clone","children","React","Children","forEach","child","props","moreProps","cloneElement","renderChildren","length","map","treeToModel","html","buildData","data","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","attr","value","err","return","attrsToProps","nodeName","htmlSelfClosingTags","split","newData","i","edsplit","editSelfClosingTags","replace","document","parse5","parseFragment","root","childNodes","addNode","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","chld","findInterface","tree","fn","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","findParentOfType","obj","classes","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","c","p","getParentOfType","filterChildrenOfType","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_step6","_iterator6","cssConverter","style","firstIndexOfColon","result","attributes","indexOf","substring","x","toUpperCase","isString","String","isStringEmpty","isStringJSON","JSON","parse","e","getUrl","text","stringToTest","slice","match","exec","toTimeString","ms","Date","toUTCString","colorNames","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgrey","lightgreen","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","hexToRGBA","hex","opacity","r","g","b","parseInt","concat","colorToRGBA","alpha","toLowerCase","convertToRGBA","charAt","stringToColor","str","hash","charCodeAt","color","toString","substr","msToHMS","seconds","hours","Math","floor","prettyDate","time","test","date","diff","getTime","day_diff","isNaN","ceil","utils","Checkers","Colors","UDate","debounce","func","wait","immediate","timeout","context","args","arguments","callNow","clearTimeout","setTimeout","apply","styleToProp","styles","filter","trim","reduce","styleObj","defineProperty","Completion","observer","_ref","store","List","Item","backgroundColor","selected","padding","onClick","ev","completionStore","selectCompletion","Content","Header","as","pk","Description","createdAgo","Utils","createdDate","createdBy","className","es_button","type","preventDefault","deleteCompletion","honeypot","removeHoneypot","ghost","setHoneypot","Completions","title","bodyStyle","divided","relaxed","savedCompletions","Component","Hint","localClass","data-copy","copy","inject","taskInformation","submitButton","skipButton","task","settings","enableHotkeys","enableTooltips","Hint_Hint","wrapper","hasInterface","skipTask","skip","icon","sendTask","submit","history","canUndo","undo","canRedo","redo","reset","setPrelabeling","display","resetPrelabeling","showingDescription","closeDescription","openDescription","toggleSettings","modal","visible","showingSettings","footer","onCancel","es_checkbox","defaultChecked","onChange","toggleHotkeys","toggleTooltips","DebugComponent","_this2","self","completion","Button","basic","setState","stringify","toJSON","serializeCompletion","deserializeCompletion","addInitialCompletion","project","resetState","addTask","addGeneratedCompletion","markLoading","traverseTree","updateValue","Form","TextArea","target","Node","click","getRoot","regionStore","unselectAll","selectRegion","textDecorationLine","textDecorationStyle","href","start","toFixed","end","_value","w","width","scaleX","y","height","scaleY","NodeMinimal","_ref2","react","Relation","rl","isValidReference","node1","node2","onMouseOver","toggleHighlight","onMouseOut","Node_NodeMinimal","deleteRelation","relations","relationStore","Relations_Relation","Entities","regions","paddingLeft","deleteAllRegions","region","toggleHightlight","RenderStates","_render","s","element","labels","getSelectedNames","bgColor","getSelectedColor","getSelectedString","states","highlightedNode","normalization","cursor","deleteNormalization","Entity_RenderStates","button","startRelationMode","setNormalizationMode","unselectRegion","deleteRegion","normalizationMode","marginTop","onSubmit","setNormalization","normInput","Input","setNormInput","placeholder","Entity","Relations","oneOf","arr","types","union","dispatcher","sn","find","val","getModelByTag","Types","unionArray","maybeNull","array","allModelsTypes","modelsArr","results","isType","nt","getParentOfTypeString","parent","getParent","Array","isArray","_loop","v","_ret","TagAttrs","optional","string","backgroundcolor","margin","Model","identifier","ViewModel","compose","HtxView","marginRight","addTag","variableNotation","variable","_index","is","runTemplate","options","re","reExp","code","add","line","js","index","Function","console","error","message","ProcessAttrsMixin","actions","dataObj","size","TableModel","HtxTable","Table","celled","collapsing","Body","k","Row","Cell","Subheader","number","underline","boolean","HeaderModel","HtxHeader","typography","Title","level","fromStateJSON","choices","names","get","from_name","HyperTextActions","HyperTextModel","HtxHyperTextView","dangerouslySetInnerHTML","__html","DialogView","hint","selectedStyle","bg","block_selected","background","maxWidth","Replica","DialogActions","DialogModel","HtxDialogView","empty","ind","Dialog_DialogView","flexFlow","maxHeight","overflowY","paddingRight","divider","dashed","AudioModel","HtxAudioView","controls","src","HtxAudio","formatTimeCallback","pxPerSec","Number","minutes","secondsStr","round","timeInterval","primaryLabelInterval","secondaryLabelInterval","Waveform","_this","possibleConstructorReturn","getPrototypeOf","call","playing","pos","colors","waveColor","progressColor","$el","ReactDOM","findDOMNode","$waveform","querySelector","RegionsPlugin","dragSelection","slop","wavesurfer","WaveSurfer","backend","plugins","TimelinePlugin","primaryColor","secondaryColor","primaryFontColor","secondaryFontColor","CursorPlugin","showTime","load","on","reg","_region","onMouseLeave","addRegion","onUpdateEnd","play","slider","oninput","zoom","onCreate","handlePlay","onLoad","RegionsMixin","highlighted","setHighlightedNode","relationMode","stopRelationMode","onClickRegion","addRelation","deleteNodeRelation","setHighlight","NormalizationMixin","alias","hotkey","showalias","aliasstyle","selectedcolor","toggleSelected","sel","shouldBeUnselected","markSelected","onHotKey","LabelModel","HtxLabelView","SelectedModelMixin","selectedLabels","isSelected","findLabel","joinstr","toname","choice","enumeration","selectionstyle","pid","toStateJSON","to_name","l","label","LabelsModel","HtxLabels","marginBottom","justifyContent","alignItems","maxrating","rating","handleRate","increaseValue","RatingModel","HtxRating","Rating","defaultRating","maxRating","onRate","clearable","fontSize","AudioPlusModel","regionbg","selectedregionbg","buildTree","source","_ws_region","update","border","beforeDestroy","remove","list","AudioRegionModel","haszoom","rangeValue","toNames","activeStates","findRegion","_ws","setRangeValue","ws_region","find_r","clonedStates","ws","wsCreated","Waveform_Waveform","playPause","min","max","HtxAudioPlus","fillcolor","strokewidth","strokecolor","canrotate","hasStates","RectangleModel","rectanglelabels","Composition","RectangleLabelsModel","HtxRectangleLabels","rotation","wp","hp","sw","sh","coordstype","ImageModel","setSelected","coordsInside","rx","ry","rw","rh","setPosition","setScale","addState","setFill","fill","updateImageSize","from","stageWidth","stageHeight","RectRegionModel","HtxRectangle","wwidth","wheight","onChangedPosition","naturalWidth","naturalHeight","h","ReactKonva","assign","onTransformEnd","t","getAttr","onDragEnd","dragBoundFunc","stage","_stageRef","draggable","PolygonPoint","init_x","init_y","afterCreate","movePoint","_movePoint","handleMouseOverStartPoint","closed","points","setX","setY","scale","small","medium","large","setMouseOverStartPoint","handleMouseOutStartPoint","PolygonPointView","stroke","startPointAttr","hitStrokeWidth","dragOpts","mouseOverStartPoint","onDragStart","onDragMove","radius","strokeWidth","dragOnTop","pointsize","pointstyle","PolygonModel","polygonlabels","PolygonLabelsModel","HtxPolygonLabels","fromName","isCW","linePoints","flatten","flat","toFlatten","findPolyOutline","left","acc","loc","right","top","bottom","inside","vs","j","xi","yi","xj","yj","readOnlyError","addPoint","closePoly","_addPoint","insertPoint","insertIdx","splice","canClose","p1","p2","_self$parent","perc_w","perc_h","perc_points","PolygonRegionModel","HtxPolygon","redraw","setDragMode","setActivePolygon","cancelBubble","resize","maxwidth","integer","selectedShape","safeReference","activePolygon","shapes","controlButton","controlButtonType","poly","updateIE","_ev$target","_setStageRef","ref","_deleteSelectedShape","destroy","shape","_addShape","onImageClick","_addRect","_addPoly","rectstrokecolor","wx","evt","offsetX","wy","offsetY","__addRect","rect","parseFloat","dragMode","shapeModel","TransformerComponent","checkNode","transformer","getStage","selectedShapeName","detach","getLayer","batchDraw","selectedNode","findOne","attachTo","resizeEnabled","rotateEnabled","anchorSize","HtxImageView","handleDblClick","handleOnClick","handleStageMouseDown","_this$props","divStyle","onDblClick","onMouseDown","Image_TransformerComponent","HtxImage","Range","TextNode","data-position","position","overlap","keyNode","HtxTextNode","range","highlightStyle","charIndex","getRangeKey","getKey","getStyle","overlapItem","includes","reduceRight","TextNode_TextNode","UrlNode","wordWrap","EmojiNode","TextHighlight","dismissMouseUp","ranges","onMouseOverHighlightedWord","nl","char","arrOverlap","toConsumableArray","TextHighlight_EmojiNode","TextHighlight_UrlNode","enabled","getSelection","selectionContents","getRangeAt","cloneRange","cloneContents","virtualDiv","appendChild","elementsWithSup","getElementsByTagName","innerText","selection","createRange","startContainer","parentNode","dataset","endContainer","startContainerPosition","endContainerPosition","rangeObj","onTextHighlighted","event","mouseEvent","bind","letterGroup","textCharIndex","rangeRenderer","isEmoji","getUrlNode","getEmojiNode","getLetterNode","lastRange","newText","getRange","emojiRegex","getNode","rangeCharIndex","getRanges","onMouseUp","onMouseEnter","onDoubleClick","TextModel","highlightStates","TextRegionModel","RegionState","localState","selectedString","outline","data-hint","HtxTextRegion","labelColor","markStyle","borderRadius","regionStates","TextRegion_RegionState","hover","selelectwithoutlabel","hidden","adjustselection","selectionenabled","_addRegion","params","m","HtxTextView","components_TextHighlight_TextHighlight","adjustSelection","renderRegion","HtxText","isCheckbox","ChoicesModel","ChoiceModel","HtxChoice","cStyle","Checkbox","checked","Radio","showinline","HtxChoices","Group","inline","grouped","TextAreaModel","TextAreaRegionModel","HtxTextAreaRegion","Message","allowSubmit","maxsubmissions","submissionsNum","showSubmit","num","setValue","addText","beforeSend","deleteText","HtxTextArea","ListItemModel","idx","setBG","setIdx","axis","lockaxis","elementvalue","elementtag","sortedhighlightcolor","setUpdate","vals","moveItems","oldIndex","newIndex","arrayMove","ranked","sort","weights","item_weight","ListModel","DragHandle","sortableHandle","isMobileDevice","orientation","navigator","userAgent","SortableText","SortableElement","classNames","image","alt","audio","userSelect","SortableList","SortableContainer","_ref3","HtxListView","_ref4","onSortEnd","HtxList","RankerItemModel","sortable","RankerModel","Ranker_DragHandle","Ranker_SortableText","HtxRankerView","Ranker_SortableList","HtxRanker","Segment","App","_Component","inherits","createClass","es_result","spin","isLoading","renderLoader","noTask","renderNothingToLabel","labeledSuccess","renderSuccess","currentCompletion","renderNoCompletion","Settings","index_module","Panel","Segment_Segment","description","Controls","components_Completions_Completions","SideColumn","Boolean","location","hostname","TaskStore","identifierNumber","app","Utilities","TimeTraveller","frozen","undoIdx","targetPath","createdIdx","isFrozen","frozenIdx","targetStore","snapshotDisposer","skipNextUndoState","freeze","addUndoState","ss","resolvePath","getEnv","onSnapshot","applySnapshot","set","_hotkeys_map","Hotkey","addKey","keymaster","unbindAll","_i","_Object$keys","unbind","makeComb","combs","comb","hasOwnProperty","setScope","scope","reference","findRelations","nodesRelated","from_id","to_id","deserializeRelation","unhighlightAll","toISOString","RelationStore","RegionStore","HtxObjectModel","reinitHistory","_updateServerState","_relationObj","cb","visitNode","toModel","completions","was_generated","_deleteCompletion","flow","regenerator_default","mark","wrap","_context","prev","sent","t0","stop","destroyCompletion","addCompletion","completionModel","config","expert","firstName","lastName","addSavedCompletion","created_ago","created_username","UserStore","SettingsModel","enablePanelHotkeys","togglePanelHotkeys","Task","taskID","interfaces","CompletionStore","projectID","debug","alert","post","setDescription","loadTask","_loadTask","_context2","Response","abrupt","was_cancelled","comp","_context3","_context4","loading","initializeStore","generatedCompletions","configEnv","default","meta","accuracy","created_at","updated_at","is_labeled","exposed","gptc","ner","texta","model_version","score","bbox","image_url","completed_by","cda","dialog","dialoga","getData","T","search","editorInterfaces","templateData","enviroment","getState","rootElement","getElementById","innerHTML","marginLeft","taskData","editorAppConfig","expertData","debugEditor","preRender","explore","AppStore","log","Htx","render","components_App_App","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.416cb8b7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"Relations_block__3Oopf\",\"section\":\"Relations_section__2WXtQ\",\"section__blocks\":\"Relations_section__blocks__3JVyw\",\"delete\":\"Relations_delete__2Eyc8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Panel_container__Qb4xi\",\"block\":\"Panel_block__3mBJh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Hint_main__ZDhzi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pushable\":\"App_pushable__2_dds\",\"hide-dd-icon\":\"App_hide-dd-icon__QwL78\",\"drag-handle\":\"App_drag-handle__3_W4W\",\"noselect\":\"App_noselect__2aaVW\",\"common-container\":\"App_common-container__qkml1\",\"functional-buttons\":\"App_functional-buttons__1KMBb\",\"editor-side-column\":\"App_editor-side-column__2Tmm3\",\"editor\":\"App_editor__l2dha\",\"menu\":\"App_menu__1BSd3\",\"content\":\"App_content__1ym7D\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttons\":\"Completions_buttons__1Egvo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Entities_item__3oFPp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"SideColumn_card__2KVRh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"progress\":\"Waveform_progress__1GLjz\",\"wave\":\"Waveform_wave__yPehs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"TextHighlight_block__z4O-f\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"state\":\"TextRegion_state__wi_ws\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pushable\":\"Segment_pushable__2gVkh\",\"hide-dd-icon\":\"Segment_hide-dd-icon__1KuoO\",\"drag-handle\":\"Segment_drag-handle__2sVHi\",\"noselect\":\"Segment_noselect__qWi_T\",\"common-container\":\"Segment_common-container__EQ4YQ\",\"functional-buttons\":\"Segment_functional-buttons__1u8fS\",\"editor-side-column\":\"Segment_editor-side-column__2M4Dc\",\"block\":\"Segment_block__3-nF9\"};","/**\n * Class for register View\n */\nclass _Registry {\n  constructor() {\n    this.tags = [];\n    this.models = {};\n    this.views = {};\n    this.views_models = {};\n  }\n\n  addTag(tag, model, view) {\n    this.tags.push(tag);\n    this.models[tag] = model;\n    this.views[tag] = view;\n    this.views_models[model.name] = view;\n  }\n\n  modelsArr() {\n    return Object.values(this.models);\n  }\n\n  getViewByModel(modelName) {\n    const view = this.views_models[modelName];\n\n    if (!view) throw new Error(\"No view for model: \" + modelName);\n\n    return view;\n  }\n\n  getViewByTag(tag) {\n    return this.views[tag];\n  }\n\n  getModelByTag(tag) {\n    const model = this.models[tag];\n\n    if (!model) {\n      const models = Object.keys(this.models);\n      throw new Error(\"No model registered for tag: \" + tag + \"\\nAvailable models:\\n\\t\" + models.join(\"\\n\\t\"));\n    }\n\n    return model;\n  }\n}\n\nconst Registry = new _Registry();\n\nexport default Registry;\n","const handleResponse = res => {\n  if (res.status !== 200 || res.status !== 201) {\n    return res;\n  } else {\n    return res.json();\n  }\n};\n\nconst wrapperRequest = (url, method, headers, body) => {\n  return window\n    .fetch(url, {\n      method: method,\n      headers: headers,\n      credentials: \"include\",\n      body: body,\n    })\n    .then(response => handleResponse(response));\n};\n\nconst fetcher = url => {\n  return wrapperRequest(url, \"GET\", { Accept: \"application/json\" });\n};\n\nconst poster = (url, body) => {\n  return wrapperRequest(url, \"POST\", { Accept: \"application/json\", \"Content-Type\": \"application/json\" }, body);\n};\n\nconst patch = (url, body) => {\n  return wrapperRequest(\n    url,\n    \"PATCH\",\n    {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n    },\n    body,\n  );\n};\n\nconst remover = (url, body) => {\n  return wrapperRequest(\n    url,\n    \"DELETE\",\n    {\n      \"Content-Type\": \"application/json\",\n    },\n    body,\n  );\n};\n\nexport default { fetcher, poster, remover, patch };\n","import nanoid from \"nanoid\";\n\n/**\n * Unique hash generator\n */\nexport function guidGenerator() {\n  const uniqueID = nanoid(10);\n  return uniqueID;\n}\n","import { getType, getSnapshot } from \"mobx-state-tree\";\nimport { guidGenerator } from \"../utils/unique\";\n\n/**\n * TODO: refactor\n */\nexport { guidGenerator };\n\n/**\n * Helper function to detect HTX Component\n * @param {any} component\n * @param {string} name\n * @returns {boolean}\n */\nexport function isHtx(component, name) {\n  return typeof component.type === \"function\" && component.type.name === \"Htx\" + name;\n}\n\n/**\n * Clone node with new ID\n * @param {*} node\n */\nexport function cloneNode(node) {\n  const snapshot = getSnapshot(node);\n  const snapshotRandomId = getType(node).create({\n    ...snapshot,\n    id: guidGenerator(),\n  });\n  return snapshotRandomId;\n}\n\n/**\n *\n * @param {*} fromModel\n */\nexport function restoreNewsnapshot(fromModel) {\n  const snapshot = getSnapshot(fromModel);\n\n  /**\n   * Need to modify ID\n   */\n  const modifySnapshot = getType(fromModel).create({\n    ...snapshot,\n    id: guidGenerator(),\n  });\n\n  /**\n   * Update state\n   */\n  return modifySnapshot;\n}\n","import React from \"react\";\nimport { getType, getParentOfType } from \"mobx-state-tree\";\nimport parse5 from \"parse5\";\n\nimport Registry from \"./Registry\";\nimport { guidGenerator } from \"./Helpers\";\n\n/**\n * Clone React Tree\n * @param {*} items\n * @param {*} attrs\n */\nfunction cloneReactTree(items, attrs) {\n  let clone = null;\n  clone = function(children) {\n    const res = [];\n\n    React.Children.forEach(children, function(child) {\n      let el;\n\n      if (child.props) {\n        let moreProps = {};\n\n        if (typeof attrs === \"function\") {\n          moreProps = attrs(child);\n        } else if (typeof attrs === \"object\") {\n          moreProps = attrs;\n        }\n\n        el = React.cloneElement(child, moreProps, clone(child.props.children));\n      } else {\n        el = child;\n      }\n\n      res.push(el);\n    });\n\n    return res;\n  };\n\n  return clone(items);\n}\n\n/**\n * Function to convert CSS string to object\n * @param {string} style\n * @returns {object}\n */\nfunction cssConverter(style) {\n  let result = {},\n    attributes = style.split(\";\"),\n    firstIndexOfColon,\n    i,\n    key,\n    value;\n\n  for (i = 0; i < attributes.length; i++) {\n    firstIndexOfColon = attributes[i].indexOf(\":\");\n    key = attributes[i].substring(0, firstIndexOfColon);\n    value = attributes[i].substring(firstIndexOfColon + 1);\n\n    key = key.replace(/ /g, \"\");\n    if (key.length < 1) {\n      continue;\n    }\n\n    if (value[0] === \" \") {\n      value = value.substring(1);\n    }\n\n    if (value[value.length - 1] === \" \") {\n      value = value.substring(0, value.length - 1);\n    }\n\n    var ukey = key.replace(/(-.)/g, x => x[1].toUpperCase());\n\n    result[ukey] = value;\n  }\n\n  return result;\n}\n\n/**\n *\n * @param {*} attrs\n */\nfunction attrsToProps(attrs) {\n  const props = {};\n\n  if (!attrs) return props;\n\n  for (let attr of attrs) {\n    props[attr.name] = attr.value;\n  }\n\n  // if (props[\"style\"]) {\n  //     props[\"style\"] = cssConverter(props[\"style\"]);\n  // }\n\n  return props;\n}\n\n/**\n *\n * @param {*} html\n */\nfunction treeToModel(html) {\n  /**\n   * Remove all line breaks from a string\n   * @param {string}\n   * @returns {string}\n   */\n  function removeAllBreaks(data) {\n    return data.replace(/(\\r\\n|\\n|\\r)/gm, \"\");\n  }\n\n  /**\n   * Edit all self closing tags from XML View\n   * TODO: Fix bug: if the value of <Choice /> or another tag contains \"/>\" function return error\n   * @param {string} data\n   * @returns {string}\n   */\n  function editSelfClosingTags(data) {\n    let split = data.split(\"/>\");\n    let newData = \"\";\n\n    for (let i = 0; i < split.length - 1; i++) {\n      let edsplit = split[i].split(\"<\");\n      newData += split[i] + \"></\" + edsplit[edsplit.length - 1].split(\" \")[0] + \">\";\n    }\n\n    return newData + split[split.length - 1];\n  }\n\n  /**\n   * Generate new node\n   * @param {object} node\n   */\n  function addNode(node) {\n    if (!node) return null;\n\n    const res = [];\n\n    for (let chld of node.childNodes) {\n      if (chld.nodeName !== \"#text\") {\n        const data = buildData(chld);\n        const children = addNode(chld);\n\n        if (children) {\n          if (typeof children === \"string\") data[\"value\"] = children;\n          else data.children = children;\n        }\n\n        res.push(data);\n      }\n    }\n\n    return res.length === 0 ? null : res;\n  }\n\n  /**\n   * Generate obj with main data\n   */\n  function buildData(node) {\n    const data = attrsToProps(node.attrs);\n\n    data[\"id\"] = guidGenerator();\n    data[\"type\"] = node.nodeName;\n\n    if (data[\"type\"] === \"img\") data[\"type\"] = \"image\";\n\n    return data;\n  }\n\n  const htmlWithotBreaks = removeAllBreaks(html);\n  const htmlSelfClosingTags = editSelfClosingTags(htmlWithotBreaks);\n  const document = parse5.parseFragment(htmlSelfClosingTags);\n  const root = buildData(document.childNodes[0]);\n  root.children = addNode(document.childNodes[0]);\n  return root;\n}\n\n/**\n * Render items of tree\n * @param {*} el\n */\nfunction renderItem(el) {\n  const View = Registry.getViewByModel(getType(el).name);\n\n  if (!View) {\n    throw new Error(\"No view for model:\" + getType(el).name);\n  }\n\n  return <View key={guidGenerator()} item={el} />;\n}\n\n/**\n *\n * @param {*} item\n */\nfunction renderChildren(item) {\n  if (item && item.children && item.children.length) {\n    return item.children.map(el => {\n      return renderItem(el);\n    });\n  } else {\n    return null;\n  }\n}\n\n/**\n *\n * @param {*} name\n * @param {*} tree\n */\nfunction findInterface(name, tree) {\n  let fn;\n  fn = function(node) {\n    if (getType(node).name === name) return node;\n\n    if (node.children) {\n      for (let chld of node.children) {\n        const res = fn(chld);\n        if (res) return res;\n      }\n    }\n  };\n\n  return fn(tree);\n}\n\n/**\n *\n * @param {*} obj\n * @param {*} classes\n */\nfunction findParentOfType(obj, classes) {\n  for (let c of classes) {\n    try {\n      const p = getParentOfType(obj, c);\n      if (p) return p;\n    } catch (err) {}\n  }\n\n  return null;\n}\n\n/**\n *\n * @param {*} obj\n * @param {*} classes\n */\nfunction filterChildrenOfType(obj, classes) {\n  const res = [];\n\n  let fn;\n  fn = function(node) {\n    for (let c of classes) {\n      if (getType(node).name === c) res.push(node);\n    }\n\n    if (node.children) {\n      for (let chld of node.children) {\n        fn(chld);\n      }\n    }\n  };\n\n  fn(obj);\n\n  return res;\n}\n\nexport default {\n  cloneReactTree,\n  renderItem,\n  renderChildren,\n  treeToModel,\n  findInterface,\n  findParentOfType,\n  filterChildrenOfType,\n  cssConverter,\n};\n","/**\n * Internal helper to check if parameter is a string\n * @param {*} value\n * @returns {boolean}\n */\nexport const isString = value => {\n  return typeof value === \"string\" || value instanceof String;\n};\n\n/**\n * Internal helper to check if string is empty\n * @param {*} value\n * @returns {boolean}\n */\nexport const isStringEmpty = value => {\n  if (!isString(value)) {\n    return false;\n  }\n\n  return value.length === 0;\n};\n\n/**\n * Internal helper to check if string is JSON\n * @param {string} value\n * @returns {boolean}\n */\nexport const isStringJSON = value => {\n  if (isString(value)) {\n    try {\n      JSON.parse(value);\n    } catch (e) {\n      return false;\n    }\n\n    return true;\n  }\n\n  return false;\n};\n\n/**\n * Check if text is url\n * @param {*} i\n * @param {*} text\n */\nexport function getUrl(i, text) {\n  const stringToTest = text.slice(i);\n  const myRegexp = /^(https?:\\/\\/(?:www\\.|(?!www))[^\\s\\.]+\\.[^\\s]{2,}|www\\.[^\\s]+\\.[^\\s]{2,})/g;\n  const match = myRegexp.exec(stringToTest);\n\n  return match && match.length ? match[1] : \"\";\n}\n\n/**\n * Convert MS to Time String\n * Example: 2000 -> 00:00:02\n * @param {number} ms\n * @returns {string}\n */\nexport function toTimeString(ms) {\n  if (typeof ms === \"number\") {\n    return new Date(ms).toUTCString().match(/(\\d\\d:\\d\\d:\\d\\d)/)[0];\n  }\n}\n","let colorNames = {\n  aliceblue: \"#f0f8ff\",\n  antiquewhite: \"#faebd7\",\n  aqua: \"#00ffff\",\n  aquamarine: \"#7fffd4\",\n  azure: \"#f0ffff\",\n  beige: \"#f5f5dc\",\n  bisque: \"#ffe4c4\",\n  black: \"#000000\",\n  blanchedalmond: \"#ffebcd\",\n  blue: \"#0000ff\",\n  blueviolet: \"#8a2be2\",\n  brown: \"#a52a2a\",\n  burlywood: \"#deb887\",\n  cadetblue: \"#5f9ea0\",\n  chartreuse: \"#7fff00\",\n  chocolate: \"#d2691e\",\n  coral: \"#ff7f50\",\n  cornflowerblue: \"#6495ed\",\n  cornsilk: \"#fff8dc\",\n  crimson: \"#dc143c\",\n  cyan: \"#00ffff\",\n  darkblue: \"#00008b\",\n  darkcyan: \"#008b8b\",\n  darkgoldenrod: \"#b8860b\",\n  darkgray: \"#a9a9a9\",\n  darkgreen: \"#006400\",\n  darkkhaki: \"#bdb76b\",\n  darkmagenta: \"#8b008b\",\n  darkolivegreen: \"#556b2f\",\n  darkorange: \"#ff8c00\",\n  darkorchid: \"#9932cc\",\n  darkred: \"#8b0000\",\n  darksalmon: \"#e9967a\",\n  darkseagreen: \"#8fbc8f\",\n  darkslateblue: \"#483d8b\",\n  darkslategray: \"#2f4f4f\",\n  darkturquoise: \"#00ced1\",\n  darkviolet: \"#9400d3\",\n  deeppink: \"#ff1493\",\n  deepskyblue: \"#00bfff\",\n  dimgray: \"#696969\",\n  dodgerblue: \"#1e90ff\",\n  firebrick: \"#b22222\",\n  floralwhite: \"#fffaf0\",\n  forestgreen: \"#228b22\",\n  fuchsia: \"#ff00ff\",\n  gainsboro: \"#dcdcdc\",\n  ghostwhite: \"#f8f8ff\",\n  gold: \"#ffd700\",\n  goldenrod: \"#daa520\",\n  gray: \"#808080\",\n  green: \"#008000\",\n  greenyellow: \"#adff2f\",\n  honeydew: \"#f0fff0\",\n  hotpink: \"#ff69b4\",\n  indianred: \"#cd5c5c\",\n  indigo: \"#4b0082\",\n  ivory: \"#fffff0\",\n  khaki: \"#f0e68c\",\n  lavender: \"#e6e6fa\",\n  lavenderblush: \"#fff0f5\",\n  lawngreen: \"#7cfc00\",\n  lemonchiffon: \"#fffacd\",\n  lightblue: \"#add8e6\",\n  lightcoral: \"#f08080\",\n  lightcyan: \"#e0ffff\",\n  lightgoldenrodyellow: \"#fafad2\",\n  lightgrey: \"#d3d3d3\",\n  lightgreen: \"#90ee90\",\n  lightpink: \"#ffb6c1\",\n  lightsalmon: \"#ffa07a\",\n  lightseagreen: \"#20b2aa\",\n  lightskyblue: \"#87cefa\",\n  lightslategray: \"#778899\",\n  lightsteelblue: \"#b0c4de\",\n  lightyellow: \"#ffffe0\",\n  lime: \"#00ff00\",\n  limegreen: \"#32cd32\",\n  linen: \"#faf0e6\",\n  magenta: \"#ff00ff\",\n  maroon: \"#800000\",\n  mediumaquamarine: \"#66cdaa\",\n  mediumblue: \"#0000cd\",\n  mediumorchid: \"#ba55d3\",\n  mediumpurple: \"#9370d8\",\n  mediumseagreen: \"#3cb371\",\n  mediumslateblue: \"#7b68ee\",\n  mediumspringgreen: \"#00fa9a\",\n  mediumturquoise: \"#48d1cc\",\n  mediumvioletred: \"#c71585\",\n  midnightblue: \"#191970\",\n  mintcream: \"#f5fffa\",\n  mistyrose: \"#ffe4e1\",\n  moccasin: \"#ffe4b5\",\n  navajowhite: \"#ffdead\",\n  navy: \"#000080\",\n  oldlace: \"#fdf5e6\",\n  olive: \"#808000\",\n  olivedrab: \"#6b8e23\",\n  orange: \"#ffa500\",\n  orangered: \"#ff4500\",\n  orchid: \"#da70d6\",\n  palegoldenrod: \"#eee8aa\",\n  palegreen: \"#98fb98\",\n  paleturquoise: \"#afeeee\",\n  palevioletred: \"#d87093\",\n  papayawhip: \"#ffefd5\",\n  peachpuff: \"#ffdab9\",\n  peru: \"#cd853f\",\n  pink: \"#ffc0cb\",\n  plum: \"#dda0dd\",\n  powderblue: \"#b0e0e6\",\n  purple: \"#800080\",\n  rebeccapurple: \"#663399\",\n  red: \"#ff0000\",\n  rosybrown: \"#bc8f8f\",\n  royalblue: \"#4169e1\",\n  saddlebrown: \"#8b4513\",\n  salmon: \"#fa8072\",\n  sandybrown: \"#f4a460\",\n  seagreen: \"#2e8b57\",\n  seashell: \"#fff5ee\",\n  sienna: \"#a0522d\",\n  silver: \"#c0c0c0\",\n  skyblue: \"#87ceeb\",\n  slateblue: \"#6a5acd\",\n  slategray: \"#708090\",\n  snow: \"#fffafa\",\n  springgreen: \"#00ff7f\",\n  steelblue: \"#4682b4\",\n  tan: \"#d2b48c\",\n  teal: \"#008080\",\n  thistle: \"#d8bfd8\",\n  tomato: \"#ff6347\",\n  turquoise: \"#40e0d0\",\n  violet: \"#ee82ee\",\n  wheat: \"#f5deb3\",\n  white: \"#ffffff\",\n  whitesmoke: \"#f5f5f5\",\n  yellow: \"#ffff00\",\n  yellowgreen: \"#9acd32\",\n};\n\n/**\n * Convert HEX to RGBA\n * @param {string} hex 3 digits + # or 6 digits + #\n * @param {number?} opacity From 0 to 1\n */\nexport function hexToRGBA(hex, opacity) {\n  let r = 0,\n    g = 0,\n    b = 0;\n\n  let a = 0.3;\n\n  if (opacity && typeof parseInt(opacity) === \"number\") {\n    a = opacity;\n  }\n\n  /**\n   * If HEX = 3\n   */\n  if (hex && hex.length === 4) {\n    r = \"0x\" + hex[1] + hex[1];\n    g = \"0x\" + hex[2] + hex[2];\n    b = \"0x\" + hex[3] + hex[3];\n\n    /**\n     * If HEX = 6\n     */\n  } else if (hex && hex.length === 7) {\n    r = \"0x\" + hex[1] + hex[2];\n    g = \"0x\" + hex[3] + hex[4];\n    b = \"0x\" + hex[5] + hex[6];\n  }\n\n  const result = `rgba(${+r}, ${+g}, ${+b}, ${a})`;\n\n  return result;\n}\n\n/**\n * Color to RGBA\n * @param {*} value\n */\nexport function colorToRGBA(value, alpha) {\n  if (typeof value === \"string\" && typeof colorNames[value.toLowerCase()] !== undefined) {\n    const hexColor = colorNames[value.toLowerCase()];\n    return hexToRGBA(hexColor, alpha);\n  }\n\n  return value;\n}\n\n/**\n * Convert color to RGB(A)\n * @param {*} value\n * @param {number} alpha\n */\nexport function convertToRGBA(value, alpha) {\n  if (value.charAt(0) === \"#\") {\n    return hexToRGBA(value, alpha);\n  } else {\n    return colorToRGBA(value, alpha);\n  }\n}\n\n/**\n * Convert string to HEX color\n * @param {string} str\n */\nexport function stringToColor(str) {\n  let hash = 0;\n\n  for (let i = 0; i < str.length; i++) {\n    hash = str.charCodeAt(i) + ((hash << 5) - hash);\n  }\n\n  let color = \"#\";\n\n  for (let i = 0; i < 3; i++) {\n    let value = (hash >> (i * 8)) & 0xff;\n    color += (\"00\" + value.toString(16)).substr(-2);\n  }\n\n  return color;\n}\n","function checkISO(value) {\n  let regExpISO = /\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d\\.\\d+([+-][0-2]\\d:[0-5]\\d|Z)/;\n\n  return regExpISO.test(value);\n}\n\n/**\n * Helper function to convert ms -> HHMMSS\n * @param {number} ms\n * @returns {string}\n */\nexport function msToHMS(ms) {\n  // 1- Convert to seconds:\n  var seconds = ms / 1000;\n  // 2- Extract hours:\n  var hours = parseInt(seconds / 3600); // 3,600 seconds in 1 hour\n  seconds = seconds % 3600; // seconds remaining after extracting hours\n  // 3- Extract minutes:\n  var minutes = parseInt(seconds / 60); // 60 seconds in 1 minute\n  // 4- Keep only seconds not extracted to minutes:\n  seconds = Math.floor(seconds); // % 60;\n\n  return hours + \":\" + minutes + \":\" + seconds;\n}\n\n/**\n * Helper function to pretty date\n */\nexport function prettyDate(time) {\n  if (typeof time !== \"string\" && !checkISO(time)) return;\n\n  let date = new Date((time || \"\").replace(/-/g, \"/\").replace(/[TZ]/g, \" \")),\n    diff = (new Date().getTime() - date.getTime()) / 1000,\n    day_diff = Math.floor(diff / 86400);\n\n  if (isNaN(day_diff) || day_diff < 0) return;\n\n  return (\n    (day_diff === 0 &&\n      ((diff < 60 && \"just now\") ||\n        (diff < 120 && \"1 minute ago\") ||\n        (diff < 3600 && Math.floor(diff / 60) + \" minutes ago\") ||\n        (diff < 7200 && \"1 hour ago\") ||\n        (diff < 86400 && Math.floor(diff / 3600) + \" hours ago\"))) ||\n    (day_diff === 1 && \"Yesterday\") ||\n    (day_diff < 7 && day_diff + \" days ago\") ||\n    (day_diff < 31 && Math.ceil(day_diff / 7) + \" weeks ago\") ||\n    day_diff + \" days ago\"\n  );\n}\n","import * as Checkers from \"./utilities\";\nimport * as Colors from \"./colors\";\nimport * as UDate from \"./date\";\nimport { guidGenerator } from \"./unique\";\nimport { debounce } from \"./debounce\";\nimport { styleToProp } from \"./styles\";\n\nexport default { Checkers, Colors, UDate, guidGenerator, debounce, styleToProp };\n","/**\n * Returns a function, that, as long as it continues to be invoked,\n * will not be triggered. The function will be called after it\n * stops being called for N milliseconds. If `immediate` is passed,\n * trigger the function on the leading edge, instead of the trailing.\n *\n * @param {function} func\n * @param {number} wait\n * @param {boolean} immediate\n */\nexport function debounce(func, wait, immediate) {\n  let timeout;\n\n  return function() {\n    const context = this,\n      args = arguments;\n    const later = () => {\n      timeout = null;\n      if (!immediate) {\n        func.apply(context, args);\n      }\n    };\n    const callNow = immediate && !timeout;\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n    if (callNow) func.apply(context, args);\n  };\n}\n","/**\n * Parses a string of inline styles into a JavaScript object with casing for React\n *\n * @see TemplateEngine via MIT Licensed https://github.com/NervJS/taro/blob/master/packages/taro-components-rn/src/utils/index.ts\n *\n * @param {string} styles\n * @returns {Object}\n */\nexport function styleToProp(styles) {\n  if (!styles) return null;\n  return styles\n    .split(\";\")\n    .filter(style => style.split(\":\")[0] && style.split(\":\")[1])\n    .map(style => [\n      style\n        .split(\":\")[0]\n        .trim()\n        .replace(/-./g, c => c.substr(1).toUpperCase()),\n      style\n        .split(\":\")\n        .slice(1)\n        .join(\":\")\n        .trim(),\n    ])\n    .reduce(\n      (styleObj, style) => ({\n        ...styleObj,\n        [style[0]]: style[1],\n      }),\n      {},\n    );\n}\n","import React, { Component } from \"react\";\nimport { observer } from \"mobx-react\";\nimport { List } from \"semantic-ui-react\";\nimport { Card, Button } from \"antd\";\n\nimport Utils from \"../../utils\";\nimport styles from \"./Completions.module.scss\";\n\nconst Completion = observer(({ item, store }) => {\n  let removeHoney = () => (\n    <Button\n      type=\"primary\"\n      onClick={ev => {\n        ev.preventDefault();\n        item.removeHoneypot();\n      }}\n    >\n      Honeypot\n    </Button>\n  );\n\n  let setHoney = () => (\n    <Button\n      type=\"primary\"\n      ghost={true}\n      onClick={ev => {\n        ev.preventDefault();\n        item.setHoneypot();\n      }}\n    >\n      Honeypot\n    </Button>\n  );\n\n  return (\n    <List.Item\n      style={{ backgroundColor: item.selected ? \"#f8f8f9\" : \"white\", padding: \"1em\" }}\n      onClick={ev => {\n        !item.selected && store.completionStore.selectCompletion(item.id);\n      }}\n    >\n      <List.Content>\n        <List.Header as=\"a\">ID {item.pk || item.id}</List.Header>\n        <p></p>\n        <List.Description as=\"a\">\n          Created\n          <i>{item.createdAgo ? ` ${item.createdAgo} ago` : ` ${Utils.UDate.prettyDate(item.createdDate)}`}</i>\n          {item.createdBy ? ` by ${item.createdBy}` : null}\n        </List.Description>\n\n        {item.selected && (\n          <div className={styles.buttons}>\n            <Button\n              type=\"danger\"\n              onClick={ev => {\n                ev.preventDefault();\n                item.store.deleteCompletion(item);\n              }}\n            >\n              Delete\n            </Button>\n\n            {item.honeypot ? removeHoney() : setHoney()}\n          </div>\n        )}\n      </List.Content>\n    </List.Item>\n  );\n});\n\nclass Completions extends Component {\n  render() {\n    const { store } = this.props;\n\n    return (\n      <Card title=\"Completions\" bodyStyle={{ padding: 0 }}>\n        <List divided relaxed>\n          {store.completionStore.savedCompletions.map(c => (\n            <Completion key={c.id} item={c} store={store} />\n          ))}\n        </List>\n      </Card>\n    );\n  }\n}\n\nexport default observer(Completions);\n","import React, { Component } from \"react\";\nimport { PropTypes } from \"prop-types\";\n\nimport styles from \"./Hint.module.scss\";\n\n/**\n * Hint Component\n * @param {object} style\n * @param {ant} children\n */\nexport default class Hint extends Component {\n  render() {\n    let style;\n    let localClass = `${styles.main}`;\n\n    if (this.props.style) style = this.props.style;\n\n    if (this.props.className) {\n      localClass = `${styles.main} ${this.props.className}`;\n    }\n\n    return (\n      <sup data-copy={this.props.copy} className={localClass} style={style}>\n        {this.props.children}\n      </sup>\n    );\n  }\n}\n\nHint.propTypes = {\n  style: PropTypes.object,\n  className: PropTypes.string,\n  copy: PropTypes.string,\n  children: PropTypes.oneOfType([PropTypes.array, PropTypes.string, PropTypes.object]),\n};\n","import React from \"react\";\nimport { observer, inject } from \"mobx-react\";\nimport { Button } from \"antd\";\n\nimport Hint from \"../Hint/Hint\";\nimport styles from \"./Controls.module.scss\";\n\nexport default inject(\"store\")(\n  observer(({ store }) => {\n    let taskInformation;\n    let submitButton;\n    let skipButton;\n\n    if (store.task) {\n      taskInformation = <h4 className={styles.task}>Task ID: {store.task.id}</h4>;\n    }\n\n    if (store.settings.enableHotkeys && store.settings.enableTooltips) {\n      submitButton = <Hint> [ Ctrl+Enter ]</Hint>;\n      skipButton = <Hint> [ Ctrl+Space ]</Hint>;\n    }\n\n    return (\n      <div className={styles.block}>\n        <div className={styles.wrapper}>\n          <div className={styles.container}>\n            {store.hasInterface(\"submit:skip\") && (\n              <Button type=\"ghost\" onClick={store.skipTask} className={styles.skip}>\n                Skip {skipButton}\n              </Button>\n            )}\n            <Button type=\"primary\" icon=\"check\" onClick={store.sendTask} className={styles.submit}>\n              Submit {submitButton}\n            </Button>\n          </div>\n          {taskInformation}\n        </div>\n      </div>\n    );\n  }),\n);\n","import React, { Component } from \"react\";\nimport { observer, inject } from \"mobx-react\";\nimport { Button, Icon } from \"antd\";\n\nimport styles from \"./Panel.module.scss\";\nimport Hint from \"../Hint/Hint\";\n\n/**\n * Panel component with buttons:\n * Undo\n * Redo\n * Reset\n * Show Instructions\n * Settings\n */\nexport default observer(({ store }) => {\n  const { history } = store.completionStore.selected;\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.block}>\n        <Button\n          type=\"ghost\"\n          icon=\"undo\"\n          onClick={ev => {\n            history && history.canUndo && history.undo();\n            ev.preventDefault();\n          }}\n        >\n          Undo\n          {store.settings.enableHotkeys && store.settings.enableTooltips && <Hint>[ Ctrl+z ]</Hint>}\n        </Button>\n        <Button\n          type=\"ghost\"\n          icon=\"redo\"\n          onClick={ev => {\n            history && history.canRedo && history.redo();\n            ev.preventDefault();\n          }}\n        >\n          Redo\n        </Button>\n        <Button\n          type=\"ghost\"\n          icon=\"rest\"\n          onClick={ev => {\n            history && history.reset();\n          }}\n        >\n          Reset\n        </Button>\n        {store.setPrelabeling && (\n          <Button\n            style={{ display: \"none\" }}\n            onClick={ev => {\n              store.resetPrelabeling();\n            }}\n          >\n            {\" \"}\n            Reset Prelabeling\n          </Button>\n        )}\n      </div>\n\n      <div className={styles.block}>\n        {store.showingDescription && (\n          <Button\n            type=\"primary\"\n            onClick={ev => {\n              store.closeDescription();\n            }}\n          >\n            Hide Instructions\n          </Button>\n        )}\n        {!store.showingDescription && (\n          <Button\n            type=\"primary\"\n            onClick={ev => {\n              store.openDescription();\n            }}\n          >\n            Show Instructions\n          </Button>\n        )}\n\n        <Button\n          type=\"dashed\"\n          icon=\"setting\"\n          onClick={ev => {\n            store.toggleSettings();\n            ev.preventDefault();\n            return false;\n          }}\n        />\n      </div>\n    </div>\n  );\n});\n","import React from \"react\";\nimport { Modal, Checkbox } from \"antd\";\nimport { observer } from \"mobx-react\";\n\nexport default observer(({ store }) => {\n  return (\n    <Modal visible={store.showingSettings} title=\"Hotkeys\" footer=\"\" onCancel={store.toggleSettings}>\n      <Checkbox\n        value=\"Enable labeling hotkeys\"\n        defaultChecked={store.settings.enableHotkeys}\n        onChange={() => {\n          store.settings.toggleHotkeys();\n        }}\n      >\n        Enable labeling hotkeys\n      </Checkbox>\n      <br />\n      <Checkbox\n        value=\"Show tooltips\"\n        defaultChecked={store.settings.enableTooltips}\n        onChange={() => {\n          store.settings.toggleTooltips();\n        }}\n      >\n        Show tooltips\n      </Checkbox>\n    </Modal>\n  );\n});\n","import React, { Component } from \"react\";\nimport { Form, Button, Header } from \"semantic-ui-react\";\n\nimport { observer } from \"mobx-react\";\n\nclass DebugComponent extends Component {\n  state = { res: null };\n\n  render() {\n    const self = this;\n    const { store } = this.props;\n    const completion = store.completionStore.selected;\n\n    return (\n      <div>\n        <br />\n        <Header>Debug</Header>\n\n        <Button\n          basic\n          onClick={ev => {\n            this.setState({ res: JSON.stringify(store.completionStore.selected.toJSON()) });\n          }}\n        >\n          Serialize whole tree\n        </Button>\n\n        <Button\n          basic\n          onClick={ev => {\n            this.setState({ res: JSON.stringify(store.completionStore.selected.serializeCompletion()) });\n          }}\n        >\n          Seriealize results tree\n        </Button>\n\n        <Button\n          basic\n          onClick={ev => {\n            if (self.state.res) completion.deserializeCompletion(JSON.parse(self.state.res));\n          }}\n        >\n          Load Serialized Results\n        </Button>\n\n        <Button\n          basic\n          onClick={ev => {\n            const c = store.completionStore.addInitialCompletion();\n            store.completionStore.selectCompletion(c.id);\n\n            if (self.state.res) c.deserializeCompletion(JSON.parse(self.state.res));\n            // this.setState.res;\n          }}\n        >\n          Load As New Completion\n        </Button>\n\n        <Button\n          basic\n          onClick={ev => {\n            this.setState({ res: store.task.data });\n          }}\n        >\n          Task data\n        </Button>\n\n        <Button\n          basic\n          onClick={ev => {\n            // this.setState.res;\n            const data = JSON.parse(self.state.res);\n            const task = {\n              id: data[\"id\"],\n              project: 2,\n              data: JSON.stringify(data),\n            };\n\n            store.resetState();\n            store.addTask(task);\n            store.addGeneratedCompletion(task);\n            store.markLoading(false);\n\n            if (store.completionStore.selected)\n              store.completionStore.selected.traverseTree(node => node.updateValue && node.updateValue(self));\n          }}\n        >\n          Simulate Loading Task\n        </Button>\n\n        <br />\n        <br />\n        <Form>\n          <Form.TextArea\n            value={this.state.res}\n            className=\"is-search\"\n            // label={item.label}\n            onChange={ev => {\n              this.setState({ res: ev.target.value });\n            }}\n          />\n        </Form>\n      </div>\n    );\n  }\n}\n\nexport default observer(DebugComponent);\n","import React, { Component, Fragment } from \"react\";\nimport { observer, inject } from \"mobx-react\";\nimport { getType, getRoot } from \"mobx-state-tree\";\nimport { Icon } from \"antd\";\n\nconst Node = observer(({ node }) => {\n  const click = ev => {\n    ev.preventDefault();\n    getRoot(node).completionStore.selected.regionStore.unselectAll();\n    node.selectRegion();\n\n    return false;\n  };\n\n  const style = {\n    color: \"black\",\n    textDecorationLine: \"underline\",\n    textDecorationStyle: \"dotted\",\n  };\n\n  if (getType(node).name === \"TextRegionModel\") {\n    return (\n      <div>\n        <Icon type=\"font-colors\" />\n        Text &nbsp;\n        <span style={{ color: \"#5a5a5a\" }}>{node.text}</span>\n      </div>\n    );\n  }\n\n  if (getType(node).name === \"AudioRegionModel\") {\n    return (\n      <p>\n        <a href=\"\" onClick={click} style={style}>\n          <i className=\"microphone icon\" />\n          Audio &nbsp;{node.start.toFixed(2)} - {node.end.toFixed(2)}\n        </a>\n      </p>\n    );\n  }\n\n  if (getType(node).name === \"TextAreaRegionModel\") {\n    return (\n      <p>\n        <a href=\"\" onClick={click} style={style}>\n          <i className=\"i cursor icon\" />\n          Input &nbsp;<span style={{ color: \"#5a5a5a\" }}>{node._value}</span>\n        </a>\n      </p>\n    );\n  }\n\n  if (getType(node).name === \"RectRegionModel\") {\n    const w = node.width * node.scaleX;\n    const y = node.height * node.scaleY;\n    return (\n      <p>\n        <a href=\"\" onClick={click} style={style}>\n          <i className=\"expand icon\" />\n          Rectangle &nbsp;{w.toFixed(2)} x {y.toFixed(2)}\n        </a>\n      </p>\n    );\n  }\n\n  if (getType(node).name === \"PolygonRegionModel\") {\n    return (\n      <p>\n        <a href=\"\" onClick={click} style={style}>\n          <i className=\"i object ungroup outline icon\" />\n          Polygon\n        </a>\n      </p>\n    );\n  }\n});\n\nconst NodeMinimal = ({ node }) => {\n  if (getType(node).name == \"TextRegionModel\") {\n    return (\n      <Fragment>\n        <Icon type=\"font-colors\" /> Text\n      </Fragment>\n    );\n  }\n\n  if (getType(node).name == \"RectRegionModel\") {\n    return (\n      <Fragment>\n        <i className=\"expand icon\" />\n        Rectangle\n      </Fragment>\n    );\n  }\n\n  if (getType(node).name == \"AudioRegionModel\") {\n    return (\n      <Fragment>\n        <i className=\"microphone icon\" />\n        Audio\n      </Fragment>\n    );\n  }\n\n  if (getType(node).name == \"TextAreaRegionModel\") {\n    return (\n      <Fragment>\n        <i className=\"i cursor icon\" />\n        Input\n      </Fragment>\n    );\n  }\n\n  if (getType(node).name == \"PolygonRegionModel\") {\n    return (\n      <Fragment>\n        <i className=\"i object ungroup outline icon\" />\n        Polygon\n      </Fragment>\n    );\n  }\n};\n\nexport { Node, NodeMinimal };\n","import React, { Fragment } from \"react\";\nimport { observer } from \"mobx-react\";\nimport { isValidReference } from \"mobx-state-tree\";\nimport { Icon } from \"antd\";\n\nimport { NodeMinimal } from \"../Node\";\nimport styles from \"./Relations.module.scss\";\n\n/**\n * Relation Component\n *\n * Shows the relationship between two selected items\n */\nconst Relation = ({ store, rl }) => {\n  if (!isValidReference(() => rl.node1) || !isValidReference(() => rl.node2)) {\n    return null;\n  }\n\n  return (\n    <div className={styles.block}>\n      <div\n        className={styles.section}\n        onMouseOver={() => {\n          rl.toggleHighlight();\n        }}\n        onMouseOut={() => {\n          rl.toggleHighlight();\n        }}\n      >\n        <div className={styles.section__blocks}>\n          <div>\n            <NodeMinimal node={rl.node1} />\n          </div>\n          <Icon type=\"arrow-right\" />\n          <div>\n            <NodeMinimal node={rl.node2} />\n          </div>\n        </div>\n      </div>\n      <a\n        href=\"#\"\n        className={styles.delete}\n        onClick={() => {\n          store.deleteRelation(rl);\n          return false;\n        }}\n      >\n        <Icon type=\"delete\" />\n      </a>\n    </div>\n  );\n};\n\nexport default observer(({ store }) => {\n  const completion = store.completionStore.selected;\n  const { relations } = completion.relationStore;\n\n  return (\n    <Fragment>\n      <h4>Relations ({relations.length})</h4>\n\n      {!relations.length && <p>No Relations added yet</p>}\n\n      {completion.relationStore.relations.map(rl => (\n        <Relation store={completion.relationStore} rl={rl} />\n      ))}\n    </Fragment>\n  );\n});\n","import React, { Component, Fragment } from \"react\";\nimport { observer, inject } from \"mobx-react\";\nimport { Button, Typography } from \"antd\";\n\nimport { Node, NodeMinimal } from \"../Node\";\nimport Hint from \"../Hint/Hint\";\nimport styles from \"./Entities.module.scss\";\n\nexport default observer(({ store, regionStore }) => {\n  const { regions } = regionStore;\n\n  let buttonRemove = () => {\n    return (\n      <Button\n        type=\"link\"\n        style={{ paddingLeft: 0 }}\n        onClick={ev => {\n          store.completionStore.selected.deleteAllRegions();\n          ev.preventDefault();\n        }}\n      >\n        Remove all\n        {regions.length > 0 && store.settings.enableHotkeys && store.settings.enableTooltips && (\n          <Hint>[ Ctrl+bksp ]</Hint>\n        )}\n      </Button>\n    );\n  };\n\n  return (\n    <div>\n      <h4>Entities ({regions.length})</h4>\n      {regions.length > 0 && buttonRemove()}\n      {!regions.length && <p>No Entitied added yet</p>}\n      <ul>\n        {regions.map(region => (\n          <li\n            key={region.id}\n            className={styles.item}\n            onMouseOver={() => {\n              region.toggleHightlight();\n            }}\n            onMouseOut={() => {\n              region.toggleHightlight();\n            }}\n          >\n            <Node node={region} />\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n});\n","import React, { Fragment } from \"react\";\nimport { observer, inject } from \"mobx-react\";\nimport { getType } from \"mobx-state-tree\";\nimport { Input, Form } from \"semantic-ui-react\";\nimport { Icon, Button, Tag } from \"antd\";\n\nimport { Node, NodeMinimal } from \"../Node\";\nimport Hint from \"../Hint/Hint\";\nimport styles from \"./Entity.module.scss\";\n\nconst templateElement = element => {\n  return (\n    <div key={element.id} className={styles.labels}>\n      Labels:\n      {element.getSelectedNames().map(title => {\n        let bgColor = element.getSelectedColor() ? element.getSelectedColor() : \"#000000\";\n\n        return (\n          <Tag key={element.id} color={bgColor} className={styles.tag}>\n            {title}\n          </Tag>\n        );\n      })}\n    </div>\n  );\n};\n\nconst RenderStates = ({ node }) => {\n  const _render = s => {\n    if (\n      getType(s).name === \"LabelsModel\" ||\n      getType(s).name === \"RectangleLabelsModel\" ||\n      getType(s).name === \"PolygonLabelsModel\"\n    ) {\n      return templateElement(s);\n    } else if (getType(s).name === \"RatingModel\") {\n      return <p>Rating: {s.getSelectedString()}</p>;\n    }\n\n    return null;\n  };\n\n  return <Fragment>{node.states.map(s => _render(s))}</Fragment>;\n};\n\nexport default observer(({ store, completion }) => {\n  const node = completion.highlightedNode;\n\n  return (\n    <Fragment>\n      <p>\n        <NodeMinimal node={node} /> (id: {node.id})\n      </p>\n\n      {node.normalization && (\n        <p>\n          Normalization: {node.normalization}\n          <Icon\n            name=\"delete\"\n            style={{ cursor: \"pointer\" }}\n            onClick={() => {\n              node.deleteNormalization();\n            }}\n          />\n        </p>\n      )}\n      {node.states && <RenderStates node={node} />}\n\n      <div className={styles.block}>\n        <Button\n          className={styles.button}\n          onClick={() => {\n            completion.startRelationMode(node);\n          }}\n        >\n          <Icon type=\"link\" />\n          Relation\n        </Button>\n\n        <Button\n          className={styles.button}\n          onClick={() => {\n            completion.setNormalizationMode(true);\n          }}\n        >\n          <Icon type=\"plus\" />\n          Normalization\n        </Button>\n\n        <Button\n          className={styles.button}\n          type=\"dashed\"\n          onClick={() => {\n            completion.highlightedNode.unselectRegion();\n          }}\n        >\n          <Icon type=\"fullscreen-exit\" />\n          Unselect\n        </Button>\n\n        <Button\n          type=\"danger\"\n          className={styles.button}\n          onClick={() => {\n            completion.highlightedNode.deleteRegion();\n          }}\n        >\n          <Icon type=\"delete\" />\n          Delete\n          {store.settings.enableHotkeys && store.settings.enableTooltips && <Hint>[ Bksp ]</Hint>}\n        </Button>\n      </div>\n\n      {completion.normalizationMode && (\n        <div>\n          <Form\n            style={{ marginTop: \"0.5em\" }}\n            onSubmit={ev => {\n              const { value } = ev.target;\n              node.setNormalization(node.normInput);\n              completion.setNormalizationMode(false);\n\n              ev.preventDefault();\n              return false;\n            }}\n          >\n            <Form.Input\n              onChange={ev => {\n                const { value } = ev.target;\n                node.setNormInput(value);\n              }}\n              placeholder=\"Add Normalization\"\n            />\n          </Form>\n        </div>\n      )}\n    </Fragment>\n  );\n});\n","import React, { Component } from \"react\";\nimport { Card } from \"antd\";\nimport { observer } from \"mobx-react\";\n\nimport Relations from \"../Relations/Relations\";\nimport Entities from \"../Entities/Entities\";\nimport Entity from \"../Entity/Entity\";\nimport styles from \"./SideColumn.module.scss\";\n\n/**\n * Component Side with:\n * Completions\n * Entities\n * Relations\n */\nexport default observer(({ store }) => {\n  const completion = store.completionStore.selected;\n  const node = completion.highlightedNode;\n\n  return (\n    <Card title=\"Entity\" className={styles.card}>\n      {node && <Entity store={store} completion={completion} />}\n\n      {!completion.highlightedNode && <p>Nothing selected</p>}\n\n      <Entities store={store} regionStore={completion.regionStore} />\n\n      <Relations store={store} item={completion} />\n    </Card>\n  );\n});\n","import { types, getType, getParent } from \"mobx-state-tree\";\nimport Registry from \"./Registry\";\n\nfunction unionArray(arr) {\n  return types.maybeNull(types.array(oneOf(arr)));\n}\n\nfunction oneOf(arr) {\n  return types.union({\n    dispatcher: sn => {\n      if (arr.find(val => sn.type === val)) {\n        return Registry.getModelByTag(sn.type);\n      } else {\n        throw Error(\"Not expecting tag: \" + sn.type);\n      }\n    },\n  });\n}\n\nfunction allModelsTypes() {\n  const args = [\n    {\n      dispatcher: sn => {\n        if (Registry.tags.find(val => sn.type === val)) {\n          return Registry.getModelByTag(sn.type);\n        } else {\n          throw Error(\"Not expecting tag: \" + sn.type);\n        }\n      },\n    },\n    Registry.modelsArr(),\n  ];\n\n  const results = [].concat.apply([], args);\n\n  return types.union.apply(null, results);\n}\n\nfunction isType(node, types) {\n  const nt = getType(node);\n  for (let t of types) if (nt === t) return true;\n\n  return false;\n}\n\nfunction getParentOfTypeString(node, str) {\n  // same as getParentOfType but checks models .name instead of type\n  let parent = getParent(node);\n\n  if (!Array.isArray(str)) str = [str];\n\n  while (parent) {\n    const name = getType(parent).name;\n\n    if (str.find(c => c === name)) return parent;\n\n    parent = getParent(parent);\n  }\n\n  return null;\n}\n\nexport default { unionArray, allModelsTypes, oneOf, isType, getParentOfTypeString };\n","import React from \"react\";\nimport { types, getEnv, flow, getParentOfType } from \"mobx-state-tree\";\nimport { observer, Provider } from \"mobx-react\";\n\nimport Tree from \"../../core/Tree\";\n\nimport Registry from \"../../core/Registry\";\nimport Types from \"../../core/Types\";\n\n/**\n * View element. It's analogous to div element in html and can be used to visual configure display of blocks\n * @example\n * <View style=\"display: flex;\">\n *  <View style=\"flex: 50%\">\n *   <Header value=\"Facts:\"></Header>\n *   <Text name=\"text\" value=\"$fact\"></Text>\n *  </View>\n *  <View style=\"flex: 50%; margin-left: 1em\">\n *   <Header value=\"Enter your question:\"></Header>\n *   <TextArea name=\"question\" ></TextArea>\n *  </View>\n * </View>\n * @name View\n * @param {block|inline} display\n * @param {hexColor} backgroundColor background color\n * @param {style} style css style string\n */\nconst TagAttrs = types.model({\n  display: types.optional(types.string, \"block\"),\n  backgroundcolor: types.optional(types.string, \"\"),\n  margin: types.optional(types.string, \"\"),\n});\n\nconst Model = types.model({\n  id: types.identifier,\n  type: \"view\",\n  style: types.maybeNull(types.string),\n  children: Types.unionArray([\n    \"view\",\n    \"header\",\n    \"labels\",\n    \"textarea\",\n    \"choices\",\n    \"rating\",\n    \"ranker\",\n    \"rectangle\",\n    \"polygon\",\n    \"rectanglelabels\",\n    \"polygonlabels\",\n    \"text\",\n    \"audio\",\n    \"image\",\n    \"hypertext\",\n    \"audioplus\",\n    \"list\",\n    \"dialog\",\n  ]),\n});\n\nconst ViewModel = types.compose(\n  \"ViewModel\",\n  TagAttrs,\n  Model,\n);\n\nconst HtxView = observer(({ item }) => {\n  let style = {};\n\n  if (item.display === \"inline\") {\n    style = { display: \"inline-block\", marginRight: \"15px\" };\n  }\n\n  if (item.style) {\n    style = Tree.cssConverter(item.style);\n  }\n\n  return <div style={style}>{Tree.renderChildren(item)}</div>;\n});\n\nRegistry.addTag(\"view\", ViewModel, HtxView);\n\nexport { HtxView, ViewModel };\n","/**\n * Convert JavaScript string in dot notation into an object reference\n * @param {Object} obj\n * @param {*} is\n * @param {*} value\n */\nfunction _index(obj, is, value) {\n  if (typeof is === \"string\") return _index(obj, is.split(\".\"), value);\n  else if (is.length === 1 && value !== undefined) return (obj[is[0]] = value);\n  else if (is.length === 0) return obj;\n  else return _index(obj[is[0]], is.slice(1), value);\n}\n\n/**\n *\n * @param {*} variable\n * @param {*} obj\n */\nfunction variableNotation(variable, obj) {\n  if (variable.charAt(0) === \"$\") {\n    const n = variable.substring(1);\n    return _index(obj, n);\n  } else {\n    return variable;\n  }\n}\n\n/**\n * A small templating engine for processing HTML with given data.\n *\n * @see TemplateEngine via MIT Licensed https://github.com/krasimir/absurd/\n *\n * @param {string} html\n * @param {Object} options\n * @returns {*}\n */\nfunction runTemplate(html, options) {\n  if (!options) options = {};\n\n  var re = /[$](.+)/g,\n    reExp = /(^( )?(var|if|for|else|switch|case|break|{|}|;))(.*)?/g,\n    code = \"with(obj) { var r=[];\\n\",\n    cursor = 0,\n    result,\n    match;\n\n  var add = function(line, js) {\n    js\n      ? (code += line.match(reExp) ? line + \"\\n\" : \"r.push(\" + line + \");\\n\")\n      : (code += line !== \"\" ? 'r.push(\"' + line.replace(/\"/g, '\\\\\"') + '\");\\n' : \"\");\n    return add;\n  };\n\n  while ((match = re.exec(html))) {\n    add(html.slice(cursor, match.index))(match[1], true);\n    cursor = match.index + match[0].length;\n  }\n\n  if (!html) return \"\";\n\n  add(html.substr(cursor, html.length - cursor));\n  code = (code + 'return r.join(\"\"); }').replace(/[\\r\\t\\n]/g, \" \");\n\n  try {\n    result = new Function(\"obj\", code).apply(options, [options]);\n  } catch (err) {\n    console.error(\"'\" + err.message + \"'\", \" in \\n\\nCode:\\n\", code, \"\\n\");\n  }\n\n  return result;\n}\n\nexport { variableNotation, runTemplate, _index };\n","import { types } from \"mobx-state-tree\";\n\nimport { runTemplate } from \"../../core/Template\";\n\nconst ProcessAttrsMixin = types.model().actions(self => ({\n  updateValue(store) {\n    self._value = runTemplate(self.value, store.task.dataObj) || \"\";\n  },\n}));\n\nexport default ProcessAttrsMixin;\n","import React from \"react\";\nimport { types } from \"mobx-state-tree\";\nimport { observer, inject } from \"mobx-react\";\n\nimport { Table, Header } from \"semantic-ui-react\";\nimport Registry from \"../../core/Registry\";\nimport ProcessAttrsMixin from \"../mixins/ProcessAttrs\";\n\n/**\n * Table tag, show object keys and values in a table\n * @example\n * <Table name=\"text-1\" value=\"$text\"></Table>\n * @name Table\n * @param {string} value\n */\nconst Model = types.model({\n  type: \"table\",\n  size: types.optional(types.string, \"h4\"),\n  value: types.maybeNull(types.string),\n  _value: types.optional(types.string, \"\"),\n});\n\nconst TableModel = types.compose(\n  \"TableModel\",\n  Model,\n  ProcessAttrsMixin,\n);\n\nconst HtxTable = inject(\"store\")(\n  observer(({ store, item }) => {\n    let value = item._value;\n    if (!value) {\n      if (store.task) value = store.task.dataObj;\n    }\n\n    return (\n      <div style={{ marginTop: \"1em\" }}>\n        <Table basic=\"very\" celled collapsing>\n          <Table.Body>\n            {Object.keys(value).map(k => {\n              let v = value[k];\n              if (typeof v === \"object\") v = JSON.stringify(v);\n\n              return (\n                <Table.Row>\n                  <Table.Cell>\n                    <Header as=\"h4\">\n                      <Header.Subheader>{k}</Header.Subheader>\n                    </Header>\n                  </Table.Cell>\n                  <Table.Cell>{v}</Table.Cell>\n                </Table.Row>\n              );\n            })}\n          </Table.Body>\n        </Table>\n      </div>\n    );\n  }),\n);\n\nRegistry.addTag(\"table\", TableModel, HtxTable);\n\nexport { HtxTable, TableModel };\n","import React from \"react\";\nimport { types } from \"mobx-state-tree\";\nimport { observer } from \"mobx-react\";\nimport { Typography } from \"antd\";\n\nimport Registry from \"../../core/Registry\";\nimport ProcessAttrsMixin from \"../mixins/ProcessAttrs\";\n\n/**\n * Header tag, show header\n * @example\n * <Header name=\"text-1\" value=\"$text\"></Header>\n * @name Header\n * @param {string} size Size of header\n * @param {string} value Text of header\n * @param {boolean} underline Underline of header\n */\nconst Model = types.model({\n  type: \"header\",\n  size: types.optional(types.number, 4),\n  value: types.optional(types.string, \"\"),\n  underline: types.optional(types.boolean, false),\n});\n\nconst HeaderModel = types.compose(\n  \"HeaderModel\",\n  Model,\n  ProcessAttrsMixin,\n);\n\nconst HtxHeader = observer(({ item }) => {\n  return (\n    <Typography.Title underline={item.underline} level={item.size} style={{ margin: \"10px 0\" }}>\n      {item.value}\n    </Typography.Title>\n  );\n});\n\nRegistry.addTag(\"header\", HeaderModel, HtxHeader);\n\nexport { HtxHeader, HeaderModel };\n","import React from \"react\";\nimport { observer, inject } from \"mobx-react\";\nimport { types, getRoot } from \"mobx-state-tree\";\n\nimport Registry from \"../../core/Registry\";\nimport { runTemplate } from \"../../core/Template\";\n\n/**\n * HyperText element. Render html inside\n * @example\n * <View>\n *  <HyperText value=\"<p>Hey</p>\"></HyperText>\n * <View>\n * @param {string} name\n * @param {string} value\n */\nconst TagAttrs = types.model({\n  value: types.maybeNull(types.string),\n  name: types.maybeNull(types.string),\n});\n\nfunction HyperTextActions(self) {\n  return {\n    fromStateJSON(obj) {\n      if (obj.value.choices) {\n        self.completion.names.get(obj.from_name).fromStateJSON(obj);\n      }\n\n      if (obj.value.text) {\n        self.completion.names.get(obj.from_name).fromStateJSON(obj);\n      }\n    },\n  };\n}\n\nconst Model = types\n  .model({\n    id: types.identifier,\n    type: \"HyperText\",\n  })\n  .views(self => ({\n    get completion() {\n      return getRoot(self).completionStore.selected;\n    },\n  }))\n  .actions(self => HyperTextActions(self));\n\nconst HyperTextModel = types.compose(\n  \"HyperTextModel\",\n  TagAttrs,\n  Model,\n);\n\nconst HtxHyperTextView = inject(\"store\")(\n  observer(({ store, item }) => {\n    if (!store.task) return null;\n\n    return <div dangerouslySetInnerHTML={{ __html: runTemplate(item.value, store.task.dataObj) }} />;\n  }),\n);\n\nRegistry.addTag(\"hypertext\", HyperTextModel, HtxHyperTextView);\n\nexport { HtxHyperTextView, HyperTextModel };\n","import React from \"react\";\nimport { PropTypes } from \"prop-types\";\nimport { Tag } from \"antd\";\n\nimport styles from \"./Dialog.module.scss\";\n\nexport default class DialogView extends React.Component {\n  render() {\n    let selectedStyle = `${styles.block}`;\n    let hint;\n    let bgColor;\n    let date;\n\n    if (this.props.hint) {\n      hint = <Tag color=\"blue\">{this.props.hint}</Tag>;\n    }\n\n    if (this.props.bg) {\n      bgColor = this.props.bg;\n    }\n\n    if (this.props.selected) {\n      selectedStyle = `${selectedStyle} ${styles.block_selected}`;\n      hint = (\n        <div>\n          <Tag color=\"magenta\">Selected Message</Tag>\n        </div>\n      );\n\n      if (this.props.hint) {\n        hint = (\n          <div className={styles.tag}>\n            <Tag color=\"magenta\">{this.props.hint}</Tag>\n          </div>\n        );\n      }\n    }\n\n    if (this.props.date) {\n      date = <span className={styles.date}>{this.props.date}</span>;\n    }\n\n    return (\n      <div className={selectedStyle} style={{ background: bgColor, width: \"max-content\", maxWidth: \"100%\" }}>\n        <span className={styles.name}>{this.props.name}:&nbsp;</span>\n        <p className={styles.text}>{this.props.text}</p>\n        {date}\n        {hint}\n      </div>\n    );\n  }\n}\n\nDialogView.propTypes = {\n  name: PropTypes.string.isRequired,\n  text: PropTypes.string.isRequired,\n  selected: PropTypes.bool,\n  date: PropTypes.string,\n  hint: PropTypes.string,\n};\n","import React from \"react\";\nimport { observer, inject } from \"mobx-react\";\nimport { types, getRoot } from \"mobx-state-tree\";\nimport { Divider, Empty } from \"antd\";\n\nimport { guidGenerator } from \"../../utils/unique\";\nimport Registry from \"../../core/Registry\";\nimport DialogView from \"../../components/Dialog/Dialog\";\nimport { stringToColor, convertToRGBA } from \"../../utils/colors\";\n\n/**\n * Dialog tag renders a dialog\n * @example\n * <View>\n *  <Dialog name=\"dialog\" value=\"$dialog\"></Dialog>\n * <View>\n * @param {string} name name of the element\n * @param {object} value value of the element\n */\nconst Replica = types.model({\n  name: types.string,\n  text: types.string,\n  selected: types.optional(types.boolean, false),\n  date: types.optional(types.string, \"\"),\n  hint: types.optional(types.string, \"\"),\n});\n\nconst TagAttrs = types.model({\n  value: types.maybeNull(types.string),\n  name: types.maybeNull(types.string),\n});\n\nfunction DialogActions(self) {\n  return {\n    fromStateJSON(obj) {\n      if (obj.value.choices) {\n        self.completion.names.get(obj.from_name).fromStateJSON(obj);\n      }\n\n      if (obj.value.text) {\n        self.completion.names.get(obj.from_name).fromStateJSON(obj);\n      }\n    },\n  };\n}\n\nconst Model = types\n  .model({\n    id: types.optional(types.identifier, guidGenerator),\n    type: \"Dialog\",\n    data: types.map(Replica),\n  })\n  .views(self => ({\n    get completion() {\n      return getRoot(self).completionStore.selected;\n    },\n  }))\n  .actions(self => DialogActions(self));\n\nconst DialogModel = types.compose(\n  \"DialogModel\",\n  TagAttrs,\n  Model,\n);\n\nconst HtxDialogView = inject(\"store\")(\n  observer(({ store, item }) => {\n    if (!store.task || !store.task.dataObj) {\n      return <Empty />;\n    }\n\n    let result = [];\n    let name = item.value;\n\n    if (name.charAt(0) === \"$\") {\n      name = name.substr(1);\n    }\n\n    store.task.dataObj[name].forEach((item, ind) => {\n      let bgColor;\n\n      if (item.name) {\n        bgColor = convertToRGBA(stringToColor(item.name), 0.1);\n      }\n\n      result.push(\n        <DialogView\n          key={ind}\n          name={item.name}\n          hint={item.hint}\n          text={item.text}\n          selected={item.selected}\n          date={item.date}\n          id={item.id}\n          bg={bgColor}\n        />,\n      );\n    });\n\n    return (\n      <div>\n        <div\n          style={{\n            display: \"flex\",\n            flexFlow: \"column\",\n            maxHeight: \"500px\",\n            overflowY: \"scroll\",\n            paddingRight: \"10px\",\n            marginTop: \"10px\",\n          }}\n        >\n          {result}\n        </div>\n        <Divider dashed={true} />\n      </div>\n    );\n  }),\n);\n\nRegistry.addTag(\"dialog\", DialogModel, HtxDialogView);\n\nexport { DialogModel, HtxDialogView };\n","import React from \"react\";\n\nimport { types, getRoot } from \"mobx-state-tree\";\nimport { observer, inject } from \"mobx-react\";\n\nimport Registry from \"../../core/Registry\";\nimport { guidGenerator } from \"../../core/Helpers\";\nimport ProcessAttrsMixin from \"../mixins/ProcessAttrs\";\n\n/**\n * Audio tag plays a simple audio file\n * @example\n * <View>\n *   <Audio name=\"audio\" value=\"$audio\"></Audio>\n * </View>\n * @example\n * <!-- Audio classification -->\n * <View>\n *   <Audio name=\"audio\" value=\"$audio\"></Audio>\n *   <Choices name=\"ch\" toName=\"audio\">\n *     <Choice value=\"Positive\"></Choice>\n *     <Choice value=\"Negative\"></Choice>\n *   </Choices>\n * </View>\n * @example\n * <!-- Audio transcription -->\n * <View>\n *   <Audio name=\"audio\" value=\"$audio\"></Audio>\n *   <TextArea name=\"ta\" toName=\"audio\"></TextArea>\n * </View>\n * @name Audio\n * @param {string} name of the element\n * @param {string} value of the element\n * @param {string} hotkey hotkey used to play/pause audio\n */\nconst TagAttrs = types.model({\n  name: types.maybeNull(types.string),\n  value: types.maybeNull(types.string),\n});\n\nconst Model = types\n  .model({\n    id: types.optional(types.identifier, guidGenerator),\n    type: \"audio\",\n\n    _value: types.optional(types.string, \"\"),\n  })\n  .views(self => ({\n    get completion() {\n      return getRoot(self).completionStore.selected;\n    },\n  }))\n  .actions(self => ({\n    fromStateJSON(obj, fromModel) {\n      if (obj.value.choices) {\n        self.completion.names.get(obj.from_name).fromStateJSON(obj);\n      }\n\n      if (obj.value.text) {\n        self.completion.names.get(obj.from_name).fromStateJSON(obj);\n      }\n    },\n  }));\n\nconst AudioModel = types.compose(\n  \"AudioModel\",\n  TagAttrs,\n  Model,\n  ProcessAttrsMixin,\n);\n\nconst HtxAudioView = observer(({ store, item }) => {\n  // [NOTE] we can't let audio element load empty item._value\n  // because it's not updating it's parent automatically\n  // https://github.com/facebook/react/issues/9447\n  if (!item._value) return null;\n\n  return (\n    <div>\n      <audio controls>\n        <source src={item._value} type=\"audio/mpeg\" />\n        Your browser does not support the audio element.\n      </audio>\n    </div>\n  );\n});\n\nconst HtxAudio = inject(\"store\")(observer(HtxAudioView));\n\nRegistry.addTag(\"audio\", AudioModel, HtxAudio);\n\nexport { AudioModel, HtxAudio };\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport WaveSurfer from \"wavesurfer.js\";\nimport RegionsPlugin from \"wavesurfer.js/dist/plugin/wavesurfer.regions.min.js\";\nimport TimelinePlugin from \"wavesurfer.js/dist/plugin/wavesurfer.timeline.min.js\";\nimport CursorPlugin from \"wavesurfer.js/dist/plugin/wavesurfer.cursor\";\n\nimport styles from \"./Waveform.module.scss\";\n\n/**\n * Use formatTimeCallback to style the notch labels as you wish, such\n * as with more detail as the number of pixels per second increases.\n *\n * Here we format as M:SS.frac, with M suppressed for times < 1 minute,\n * and frac having 0, 1, or 2 digits as the zoom increases.\n *\n * Note that if you override the default function, you'll almost\n * certainly want to override timeInterval, primaryLabelInterval and/or\n * secondaryLabelInterval so they all work together.\n *\n * @param: seconds\n * @param: pxPerSec\n */\nfunction formatTimeCallback(seconds, pxPerSec) {\n  seconds = Number(seconds);\n  var minutes = Math.floor(seconds / 60);\n  seconds = seconds % 60;\n\n  // fill up seconds with zeroes\n  var secondsStr = Math.round(seconds).toString();\n  if (pxPerSec >= 25 * 10) {\n    secondsStr = seconds.toFixed(2);\n  } else if (pxPerSec >= 25 * 1) {\n    secondsStr = seconds.toFixed(1);\n  }\n\n  if (minutes > 0) {\n    if (seconds < 10) {\n      secondsStr = \"0\" + secondsStr;\n    }\n    return `${minutes}:${secondsStr}`;\n  }\n  return secondsStr;\n}\n\n/**\n * Use timeInterval to set the period between notches, in seconds,\n * adding notches as the number of pixels per second increases.\n *\n * Note that if you override the default function, you'll almost\n * certainly want to override formatTimeCallback, primaryLabelInterval\n * and/or secondaryLabelInterval so they all work together.\n *\n * @param: pxPerSec\n */\nfunction timeInterval(pxPerSec) {\n  var retval = 1;\n  if (pxPerSec >= 25 * 100) {\n    retval = 0.01;\n  } else if (pxPerSec >= 25 * 40) {\n    retval = 0.025;\n  } else if (pxPerSec >= 25 * 10) {\n    retval = 0.1;\n  } else if (pxPerSec >= 25 * 4) {\n    retval = 0.25;\n  } else if (pxPerSec >= 25) {\n    retval = 1;\n  } else if (pxPerSec * 5 >= 25) {\n    retval = 5;\n  } else if (pxPerSec * 15 >= 25) {\n    retval = 15;\n  } else {\n    retval = Math.ceil(0.5 / pxPerSec) * 60;\n  }\n  return retval;\n}\n\n/**\n * Return the cadence of notches that get labels in the primary color.\n * EG, return 2 if every 2nd notch should be labeled,\n * return 10 if every 10th notch should be labeled, etc.\n *\n * Note that if you override the default function, you'll almost\n * certainly want to override formatTimeCallback, primaryLabelInterval\n * and/or secondaryLabelInterval so they all work together.\n *\n * @param pxPerSec\n */\nfunction primaryLabelInterval(pxPerSec) {\n  var retval = 1;\n  if (pxPerSec >= 25 * 100) {\n    retval = 10;\n  } else if (pxPerSec >= 25 * 40) {\n    retval = 4;\n  } else if (pxPerSec >= 25 * 10) {\n    retval = 10;\n  } else if (pxPerSec >= 25 * 4) {\n    retval = 4;\n  } else if (pxPerSec >= 25) {\n    retval = 1;\n  } else if (pxPerSec * 5 >= 25) {\n    retval = 5;\n  } else if (pxPerSec * 15 >= 25) {\n    retval = 15;\n  } else {\n    retval = Math.ceil(0.5 / pxPerSec) * 60;\n  }\n  return retval;\n}\n\n/**\n * Return the cadence of notches to get labels in the secondary color.\n * EG, return 2 if every 2nd notch should be labeled,\n * return 10 if every 10th notch should be labeled, etc.\n *\n * Secondary labels are drawn after primary labels, so if\n * you want to have labels every 10 seconds and another color labels\n * every 60 seconds, the 60 second labels should be the secondaries.\n *\n * Note that if you override the default function, you'll almost\n * certainly want to override formatTimeCallback, primaryLabelInterval\n * and/or secondaryLabelInterval so they all work together.\n *\n * @param pxPerSec\n */\nfunction secondaryLabelInterval(pxPerSec) {\n  // draw one every 10s as an example\n  return Math.floor(10 / timeInterval(pxPerSec));\n}\n\nexport default class Waveform extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      playing: false,\n      pos: 0,\n      colors: {\n        waveColor: \"#97A0AF\",\n        progressColor: \"#36B37E\",\n      },\n    };\n  }\n\n  componentDidMount() {\n    this.$el = ReactDOM.findDOMNode(this);\n\n    this.$waveform = this.$el.querySelector(\"#wave\");\n\n    this.regions = RegionsPlugin.create({\n      dragSelection: {\n        slop: 5, // slop\n      },\n    });\n\n    this.wavesurfer = WaveSurfer.create({\n      container: this.$waveform,\n      backend: \"MediaElement\",\n      waveColor: this.state.colors.waveColor,\n      progressColor: this.state.colors.progressColor,\n      plugins: [\n        this.regions,\n        TimelinePlugin.create({\n          container: \"#timeline\", // the element in which to place the timeline, or a CSS selector to find it\n          formatTimeCallback: formatTimeCallback, // custom time format callback. (Function which receives number of seconds and returns formatted string)\n          timeInterval: timeInterval, // number of intervals that records consists of. Usually it is equal to the duration in minutes. (Integer or function which receives pxPerSec value and returns value)\n          primaryLabelInterval: primaryLabelInterval, // number of primary time labels. (Integer or function which receives pxPerSec value and reurns value)\n          secondaryLabelInterval: secondaryLabelInterval, // number of secondary time labels (Time labels between primary labels, integer or function which receives pxPerSec value and reurns value).\n          primaryColor: \"blue\", // the color of the modulo-ten notch lines (e.g. 10sec, 20sec). The default is '#000'.\n          secondaryColor: \"red\", // the color of the non-modulo-ten notch lines. The default is '#c0c0c0'.\n          primaryFontColor: \"blue\", // the color of the non-modulo-ten time labels (e.g. 10sec, 20sec). The default is '#000'.\n          secondaryFontColor: \"red\",\n        }),\n        CursorPlugin.create({\n          wrapper: this.$waveform,\n          showTime: true,\n          opacity: 1,\n        }),\n      ],\n    });\n\n    this.wavesurfer.load(this.props.src);\n\n    const self = this;\n\n    /**\n     * Mouse enter on region\n     */\n    this.wavesurfer.on(\"region-mouseenter\", reg => {\n      reg._region.onMouseOver();\n    });\n\n    /**\n     * Mouse leave on region\n     */\n    this.wavesurfer.on(\"region-mouseleave\", reg => {\n      reg._region.onMouseLeave();\n    });\n\n    /**\n     *\n     */\n    this.wavesurfer.on(\"region-created\", reg => {\n      const region = self.props.addRegion(reg);\n      reg._region = region;\n\n      reg.on(\"click\", () => region.onClick(self.wavesurfer));\n      reg.on(\"update-end\", () => region.onUpdateEnd(self.wavesurfer));\n\n      reg.on(\"dblclick\", e => {\n        window.setTimeout(function() {\n          reg.play();\n        }, 0);\n      });\n\n      reg.on(\"out\", () => {});\n    });\n\n    /**\n     * Handler of slider\n     */\n    const slider = document.querySelector(\"#slider\");\n\n    if (slider) {\n      slider.oninput = function() {\n        self.wavesurfer.zoom(Number(this.value));\n      };\n    }\n\n    /**\n     *\n     */\n    this.wavesurfer.on(\"ready\", () => {\n      self.props.onCreate(this.wavesurfer);\n    });\n\n    /**\n     * Pause trigger of audio\n     */\n    this.wavesurfer.on(\"pause\", self.props.handlePlay);\n\n    /**\n     * Play trigger of audio\n     */\n    this.wavesurfer.on(\"play\", self.props.handlePlay);\n\n    /**\n     *\n     */\n    this.props.onLoad(this.wavesurfer);\n  }\n\n  render() {\n    return (\n      <div>\n        <div id=\"wave\" className={styles.wave} />\n        <div id=\"timeline\" />\n      </div>\n    );\n  }\n}\n","import { types } from \"mobx-state-tree\";\n\nconst RegionsMixin = types\n  .model({\n    selected: types.optional(types.boolean, false),\n    highlighted: types.optional(types.boolean, false),\n  })\n  .actions(self => ({\n    selectRegion() {\n      self.selected = true;\n      self.completion.setHighlightedNode(self);\n    },\n\n    unselectRegion() {\n      const completion = self.completion;\n      if (completion.relationMode) {\n        completion.stopRelationMode();\n      }\n\n      self.selected = false;\n      self.completion.setHighlightedNode(null);\n    },\n\n    onClickRegion() {\n      const completion = self.completion;\n\n      if (completion.relationMode) {\n        completion.addRelation(self);\n        completion.stopRelationMode();\n        completion.regionStore.unselectAll();\n      } else {\n        if (self.selected) {\n          self.unselectRegion();\n        } else {\n          completion.regionStore.unselectAll();\n          self.selectRegion();\n        }\n      }\n    },\n\n    deleteRegion() {\n      self.unselectRegion();\n\n      self.completion.relationStore.deleteNodeRelation(self);\n\n      self.completion.regionStore.deleteRegion(self);\n\n      self.completion.deleteRegion(self);\n    },\n\n    setHighlight(val) {\n      self.highlighted = val;\n    },\n\n    toggleHightlight() {\n      self.setHighlight(!self.highlighted);\n    },\n  }));\n\nexport default RegionsMixin;\n","import { types } from \"mobx-state-tree\";\n\nconst NormalizationMixin = types\n  .model({\n    normInput: types.maybeNull(types.string),\n    normalization: types.maybeNull(types.string),\n  })\n  .actions(self => ({\n    setNormalization(val) {\n      self.normalization = val;\n    },\n\n    deleteNormalization() {\n      self.setNormalization(\"\");\n    },\n\n    setNormInput(val) {\n      self.normInput = val;\n    },\n  }));\n\nexport default NormalizationMixin;\n","import React from \"react\";\nimport { observer, inject } from \"mobx-react\";\nimport { types } from \"mobx-state-tree\";\nimport { Tag } from \"antd\";\n\nimport { guidGenerator } from \"../../core/Helpers\";\nimport Utils from \"../../utils\";\nimport Registry from \"../../core/Registry\";\nimport Types from \"../../core/Types\";\nimport ProcessAttrsMixin from \"../mixins/ProcessAttrs\";\nimport Hint from \"../../components/Hint/Hint\";\n\n/**\n * Label tag represents a single label\n * @example\n * <View>\n *   <Labels name=\"type\" toName=\"txt-1\">\n *     <Label alias=\"B\" value=\"Brand\"></Label>\n *     <Label alias=\"P\" value=\"Product\"></Label>\n *   </Labels>\n *   <Text name=\"txt-1\" value=\"$text\"></Text>\n * </View>\n * @name Label\n * @param {string} value A value of the label\n * @param {boolean} selected If this label should be preselected\n * @param {string} alias Label alias\n * @param {string} hotkey Hotkey\n * @param {boolean} showalias Show alias inside label text\n * @param {string} aliasstyle Alias CSS style default=opacity: 0.6\n * @param {string} size Size of text in the label\n * @param {string} background The background color of active label\n * @param {string} selectedColor Color of text in an active label\n */\nconst TagAttrs = types.model({\n  value: types.maybeNull(types.string),\n  selected: types.optional(types.boolean, false),\n  alias: types.maybeNull(types.string),\n  hotkey: types.maybeNull(types.string),\n  showalias: types.optional(types.string, \"false\"),\n  aliasstyle: types.optional(types.string, \"opacity: 0.6\"),\n  size: types.optional(types.string, \"medium\"),\n  background: types.optional(types.string, \"#36B37E\"),\n  selectedcolor: types.optional(types.string, \"white\"),\n});\n\nconst Model = types\n  .model({\n    id: types.optional(types.identifier, guidGenerator),\n    type: \"label\",\n    _value: types.optional(types.string, \"\"),\n  })\n  .actions(self => ({\n    toggleSelected() {\n      const sel = self.selected;\n\n      const labels = Types.getParentOfTypeString(self, [\"LabelsModel\", \"RectangleLabelsModel\", \"PolygonLabelsModel\"]);\n      labels.shouldBeUnselected && labels.unselectAll();\n\n      if (labels.shouldBeUnselected && sel === true) {\n      } else {\n        self.selected = !self.selected;\n      }\n    },\n\n    markSelected(val) {\n      self.selected = val;\n    },\n\n    onHotKey() {\n      return self.toggleSelected();\n    },\n  }));\n\nconst LabelModel = types.compose(\n  \"LabelModel\",\n  TagAttrs,\n  Model,\n  ProcessAttrsMixin,\n);\n\nconst HtxLabelView = inject(\"store\")(\n  observer(({ item, store }) => {\n    const bg = {\n      backgroundColor: item.selected ? item.background : \"#e8e8e8\",\n      color: item.selected ? item.selectedcolor : \"#333333\",\n      cursor: \"pointer\",\n      margin: \"5px\",\n    };\n\n    return (\n      <Tag\n        onClick={ev => {\n          item.toggleSelected();\n          return false;\n        }}\n        style={bg}\n        size={item.size}\n      >\n        {item._value}\n        {item.showalias === \"true\" && item.alias && (\n          <span style={Utils.styleToProp(item.aliasstyle)}>&nbsp;{item.alias}</span>\n        )}\n        {store.settings.enableTooltips && store.settings.enableHotkeys && item.hotkey && <Hint>[{item.hotkey}]</Hint>}\n      </Tag>\n    );\n  }),\n);\n\nRegistry.addTag(\"label\", LabelModel, HtxLabelView);\n\nexport { HtxLabelView, LabelModel };\n","import { types } from \"mobx-state-tree\";\n\nconst SelectedModelMixin = types\n  .model()\n  .views(self => ({\n    get selectedLabels() {\n      return self.children.filter(c => c.selected === true);\n    },\n\n    get isSelected() {\n      return self.selectedLabels.length > 0;\n    },\n  }))\n  .actions(self => ({\n    findLabel(value) {\n      return self.children.find(c => c.alias === value || c.value === value);\n    },\n\n    unselectAll() {\n      self.children.map(c => c.markSelected(false));\n    },\n\n    getSelectedNames() {\n      return self.selectedLabels.map(c => (c.alias ? c.alias : c.value));\n    },\n\n    getSelectedString(joinstr) {\n      joinstr = joinstr || \" \";\n      return self.getSelectedNames().join(joinstr);\n    },\n  }));\n\nexport default SelectedModelMixin;\n","import { observer } from \"mobx-react\";\nimport React from \"react\";\nimport { types } from \"mobx-state-tree\";\n\nimport Tree from \"../../core/Tree\";\nimport Registry from \"../../core/Registry\";\nimport Types from \"../../core/Types\";\n\nimport { LabelModel } from \"./Label\"; // eslint-disable-line no-unused-vars\nimport { guidGenerator } from \"../../core/Helpers\";\nimport SelectedModelMixin from \"../mixins/SelectedModel\";\n\n/**\n * Labels tag, create a group of labels\n * @example\n * <View>\n *   <Labels name=\"type\" toName=\"txt-1\">\n *     <Label alias=\"B\" value=\"Brand\"></Label>\n *     <Label alias=\"P\" value=\"Product\"></Label>\n *   </Labels>\n *   <Text name=\"txt-1\" value=\"$text\"></Text>\n * </View>\n * @name Labels\n * @param {string} name name of the element\n * @param {string} toName name of the element that you want to label\n * @param {single|multiple=} [choice=single] configure if you can select just one or multiple labels\n */\nconst TagAttrs = types.model({\n  name: types.maybeNull(types.string),\n  toname: types.maybeNull(types.string),\n\n  choice: types.optional(types.enumeration([\"single\", \"multiple\"]), \"single\"),\n\n  // TODO make enum\n  selectionstyle: types.maybeNull(types.optional(types.string, \"basic\", \"border\", \"bottom\")),\n});\n\nconst Model = types\n  .model({\n    id: types.optional(types.identifier, guidGenerator),\n    pid: types.optional(types.string, guidGenerator),\n    type: \"labels\",\n    children: Types.unionArray([\"labels\", \"label\", \"choice\"]),\n  })\n  .views(self => ({\n    get shouldBeUnselected() {\n      return self.choice === \"single\";\n    },\n  }))\n  .actions(self => ({\n    getSelectedColor() {\n      // return first selected label color\n      const sel = self.children.find(c => c.selected === true);\n      return sel && sel.background;\n    },\n\n    toStateJSON() {\n      const names = self.getSelectedNames();\n\n      if (names && names.length) {\n        return {\n          id: self.pid,\n          from_name: self.name,\n          to_name: self.name,\n          type: self.type,\n          value: {\n            labels: names,\n          },\n        };\n      }\n    },\n\n    fromStateJSON(obj, fromModel) {\n      self.unselectAll();\n\n      if (!obj.value.labels) throw new Error(\"No labels param\");\n\n      if (obj.id) self.pid = obj.id;\n\n      obj.value.labels.forEach(l => {\n        const label = self.findLabel(l);\n        if (!label) throw new Error(\"No label \" + obj.value.label);\n\n        label.markSelected(true);\n      });\n    },\n  }));\n\nconst LabelsModel = types.compose(\n  \"LabelsModel\",\n  TagAttrs,\n  Model,\n  SelectedModelMixin,\n);\n\nconst HtxLabels = observer(({ item }) => {\n  return (\n    <div\n      style={{\n        marginTop: \"1em\",\n        marginBottom: \"1em\",\n        display: \"flex\",\n        justifyContent: \"flex-start\",\n        alignItems: \"center\",\n        flexFlow: \"wrap\",\n      }}\n    >\n      \n      {Tree.renderChildren(item)}\n    </div>\n  );\n});\n\nRegistry.addTag(\"labels\", LabelsModel, HtxLabels);\n\nexport { HtxLabels, LabelsModel };\n","import React, { Component } from \"react\";\nimport { Rating } from \"semantic-ui-react\";\n\nimport { observer, inject } from \"mobx-react\";\nimport { types } from \"mobx-state-tree\";\n\nimport { guidGenerator } from \"../../core/Helpers\";\nimport Registry from \"../../core/Registry\";\nimport Tree from \"../../core/Tree\";\nimport Types from \"../../core/Types\";\n\n/**\n * Rating tag\n * @example\n * <View>\n *   <Text name=\"txt\" value=\"$text\"></Text>\n *   <Rating name=\"rating\" toName=\"txt\" maxRating=\"10\"></Rating>\n * </View>\n * @name Rating\n * @param {string} name of the element\n * @param {string} toName name of the element that you want to label\n * @param {integer=} [maxRating=5] maxmium rating value\n * @param {string=} [size=large] one of: mini tiny small large huge massive\n * @param {string=} [icon=star] one of: star heart\n * @param {string=} hotkey hokey\n */\nconst TagAttrs = types.model({\n  name: types.maybeNull(types.string),\n  toname: types.maybeNull(types.string),\n\n  maxrating: types.optional(types.string, \"5\"),\n  icon: types.optional(types.string, \"star\"),\n  size: types.optional(types.string, \"large\"),\n\n  hotkey: types.maybeNull(types.string),\n});\n\nconst Model = types\n  .model({\n    id: types.optional(types.identifier, guidGenerator),\n    pid: types.optional(types.string, guidGenerator),\n    type: \"rating\",\n    rating: types.maybeNull(types.number),\n  })\n  .views(self => ({\n    get isSelected() {\n      return self.rating > 0;\n    },\n  }))\n  .actions(self => ({\n    getSelectedString() {\n      return self.rating + \" star\";\n    },\n\n    getSelectedNames() {\n      return self.rating;\n    },\n\n    unselectAll() {\n      self.rating = 0;\n    },\n\n    handleRate(e, { rating, maxrating }) {\n      self.rating = rating;\n    },\n\n    increaseValue() {\n      if (self.rating >= self.maxrating) {\n        self.rating = 0;\n      } else {\n        if (self.rating > 0) {\n          self.rating = self.rating + 1;\n        } else {\n          self.rating = 1;\n        }\n      }\n    },\n\n    onHotKey() {\n      return self.increaseValue();\n    },\n\n    toStateJSON() {\n      if (self.rating) {\n        const toname = self.toname || self.name;\n        return {\n          id: self.pid,\n          from_name: self.name,\n          to_name: toname,\n          type: self.type,\n          value: {\n            rating: self.rating,\n          },\n        };\n      }\n    },\n\n    fromStateJSON(obj, fromModel) {\n      if (obj.id) self.pid = obj.id;\n\n      self.rating = obj.value.rating;\n    },\n  }));\n\nconst RatingModel = types.compose(\n  \"RatingModel\",\n  TagAttrs,\n  Model,\n);\n\nconst HtxRating = inject(\"store\")(\n  observer(({ item, store }) => {\n    return (\n      <div>\n        <Rating\n          icon=\"star\"\n          size={item.size}\n          defaultRating={0}\n          rating={item.rating}\n          maxRating={item.maxrating}\n          onRate={item.handleRate}\n          clearable\n        />\n        {store.settings.enableTooltips && store.settings.enableHotkeys && item.hotkey && (\n          <sup style={{ fontSize: \"9px\" }}>[{item.hotkey}]</sup>\n        )}\n      </div>\n    );\n  }),\n);\n\nRegistry.addTag(\"rating\", RatingModel, HtxRating);\n\nexport { HtxRating, RatingModel };\n","import { types, getParentOfType, destroy, getRoot } from \"mobx-state-tree\";\n\nimport RegionsMixin from \"../mixins/Regions\";\nimport NormalizationMixin from \"../mixins/Normalization\";\n\nimport { guidGenerator, restoreNewsnapshot } from \"../../core/Helpers\";\n\nimport { LabelsModel } from \"../control/Labels\";\nimport { RatingModel } from \"../control/Rating\";\n\nimport { AudioPlusModel } from \"./AudioPlus\";\n\nconst Model = types\n  .model({\n    id: types.optional(types.identifier, guidGenerator),\n    pid: types.optional(types.string, guidGenerator),\n    start: types.number,\n    end: types.number,\n\n    states: types.maybeNull(types.array(types.union(LabelsModel, RatingModel))),\n    // regionbg: types.string,\n    // selectedregionbg: types.string\n  })\n  .views(self => ({\n    get parent() {\n      return getParentOfType(self, AudioPlusModel);\n    },\n\n    get regionbg() {\n      return self.parent.regionbg;\n    },\n\n    get selectedregionbg() {\n      return self.parent.selectedregionbg;\n    },\n\n    get completion() {\n      return getRoot(self).completionStore.selected;\n    },\n  }))\n  .actions(self => ({\n    toStateJSON() {\n      const parent = self.parent;\n      const buildTree = obj => {\n        const tree = {\n          id: self.pid,\n          // type: getType(s).name,\n          from_name: obj.name,\n          to_name: parent.name,\n          source: parent.value,\n          type: \"region\",\n          // text: parent.text,\n          value: {\n            start: self.start,\n            end: self.end,\n          },\n        };\n\n        if (self.normalization) tree[\"normalization\"] = self.normalization;\n\n        return tree;\n      };\n\n      if (self.states && self.states.length) {\n        return self.states.map(s => {\n          const tree = buildTree(s);\n          // in case of labels it's gonna be, labels: [\"label1\", \"label2\"]\n          tree[\"value\"][s.type] = s.getSelectedNames();\n          tree[\"type\"] = s.type;\n\n          return tree;\n        });\n      } else {\n        return buildTree(parent);\n      }\n    },\n\n    unselectRegion() {\n      self.selected = false;\n      self._ws_region.update({ color: self.regionbg });\n      self.completion.setHighlightedNode(null);\n    },\n\n    selectRegion() {\n      self.selected = true;\n      self.completion.setHighlightedNode(self);\n      self._ws_region.update({ color: self.selectedregionbg });\n    },\n\n    setHighlight(val) {\n      self.highlighted = val;\n\n      if (val) {\n        // self._ws_region.update({ color: self.selectedregionbg });\n        self._ws_region.element.style.border = \"2px solid red\";\n      } else {\n        // self._ws_region.update({ color: self.regionbg });\n        self._ws_region.element.style.border = \"none\";\n      }\n    },\n\n    beforeDestroy() {\n      if (self._ws_region) self._ws_region.remove();\n    },\n\n    onClick(wavesurfer) {\n      if (!self.completion.relationMode) {\n        Object.values(wavesurfer.regions.list).forEach(r => {\n          r.update({ color: self.regionbg });\n        });\n\n        self._ws_region.update({ color: self.selectedregionbg });\n      }\n\n      self.onClickRegion();\n      // self.props.clickRegion(reg._range);\n    },\n\n    onMouseOver() {\n      if (self.completion.relationMode) {\n        self.setHighlight(true);\n        self._ws_region.element.style.cursor = \"crosshair\";\n      }\n    },\n\n    onMouseLeave() {\n      if (self.completion.relationMode) {\n        self.setHighlight(false);\n        self._ws_region.element.style.cursor = \"move\";\n      }\n    },\n\n    onUpdateEnd(wavesurfer) {\n      self.start = self._ws_region.start;\n      self.end = self._ws_region.end;\n\n      // console.log(self._ws_region.style());\n\n      // console.log(self.start);\n      // console.log(self.end);\n\n      // Object.values(wavesurfer.regions.list).forEach((r) => {\n      //     r.update({ color: self.regionbg });\n      // });\n\n      // self._ws_region.update({ color: self.selectedregionbg });\n    },\n  }));\n\nconst AudioRegionModel = types.compose(\n  \"AudioRegionModel\",\n  RegionsMixin,\n  NormalizationMixin,\n  Model,\n);\n\nexport { AudioRegionModel };\n","import React, { Fragment } from \"react\";\n\nimport { types, getRoot } from \"mobx-state-tree\";\nimport { observer, inject } from \"mobx-react\";\nimport { Button, Icon } from \"antd\";\n\nimport { cloneNode } from \"../../core/Helpers\";\nimport Registry from \"../../core/Registry\";\nimport { guidGenerator, restoreNewsnapshot } from \"../../core/Helpers\";\n\n// import { AudioEditorMode } from './AudioEditor';\nimport Waveform from \"../../components/Waveform/Waveform\";\nimport ProcessAttrsMixin from \"../mixins/ProcessAttrs\";\n\nimport { AudioRegionModel } from \"./AudioRegion\";\n\n/**\n * AudioPlus tag plays audio and shows its wave\n * @example\n * <View>\n *  <Labels name=\"lbl-1\" toName=\"audio-1\"><Label value=\"Hello\"></Label><Label value=\"World\"></Label></Labels>\n *  <Rating name=\"rate-1\" toName=\"audio-1\"></Rating>\n *  <AudioPlus name=\"audio-1\" value=\"$audio\"></AudioPlus>\n * </View>\n * @name AudioPlus\n * @param {string} name of the element\n * @param {string} value of the element\n * @param {boolean} hasZoom speficy if audio has zoom functionality\n * @param {string} regionBG region color\n * @param {string} selectedRegionBG selected region background\n */\nconst TagAttrs = types.model({\n  name: types.maybeNull(types.string),\n  value: types.maybeNull(types.string),\n  haszoom: types.optional(types.string, \"true\"),\n  regionbg: types.optional(types.string, \"rgba(0,0,0, 0.1)\"),\n  selectedregionbg: types.optional(types.string, \"rgba(255,0,0,0.5)\"),\n  _value: types.optional(types.string, \"\"),\n});\n\nconst Model = types\n  .model({\n    id: types.identifier,\n    type: \"audio\",\n    playing: types.optional(types.boolean, false),\n    regions: types.array(AudioRegionModel),\n    rangeValue: types.optional(types.string, \"20\"),\n  })\n  .views(self => ({\n    get completion() {\n      return getRoot(self).completionStore.selected;\n    },\n\n    states() {\n      return self.completion.toNames.get(self.name);\n    },\n\n    activeStates() {\n      const states = self.states();\n      return states ? states.filter(s => s.isSelected) : null;\n    },\n  }))\n  .actions(self => ({\n    toStateJSON() {\n      return self.regions.map(r => r.toStateJSON());\n    },\n\n    findRegion(start, end) {\n      return self.regions.find(r => r.start === start && r.end === end);\n    },\n\n    fromStateJSON(obj, fromModel) {\n      self.findRegion(obj.value.start, obj.value.end);\n      restoreNewsnapshot(fromModel);\n\n      self._ws.addRegion({\n        start: obj.value.start,\n        end: obj.value.end,\n      });\n    },\n\n    setRangeValue(val) {\n      self.rangeValue = val;\n    },\n\n    addRegion(ws_region) {\n      const find_r = self.findRegion(ws_region.start, ws_region.end);\n      if (self.findRegion(ws_region.start, ws_region.end)) {\n        find_r._ws_region = ws_region;\n        return find_r;\n      }\n\n      const states = self.activeStates();\n\n      const clonedStates = states ? states.map(s => cloneNode(s)) : null;\n\n      // const bgColor = states ? states[0].getSelectedColor() : self.selectedregionbg;\n\n      const r = AudioRegionModel.create({\n        id: guidGenerator(),\n        start: ws_region.start,\n        end: ws_region.end,\n        regionbg: self.regionbg,\n        selectedregionbg: self.selectedregionbg,\n        states: clonedStates,\n      });\n\n      r._ws_region = ws_region;\n\n      self.regions.push(r);\n      self.completion.addRegion(r);\n\n      // r.selectRegion();\n      states && states.forEach(s => s.unselectAll());\n\n      return r;\n    },\n\n    /**\n     * Play and stop\n     */\n    handlePlay() {\n      self.playing = !self.playing;\n    },\n\n    onLoad(ws) {\n      self._ws = ws;\n\n      self.regions.forEach(obj => {\n        self._ws.addRegion({\n          start: obj.start,\n          end: obj.end,\n        });\n      });\n    },\n\n    wsCreated(ws) {\n      self._ws = ws;\n    },\n  }));\n\nconst AudioPlusModel = types.compose(\n  \"AudioPlusModel\",\n  TagAttrs,\n  Model,\n  ProcessAttrsMixin,\n);\n\nconst HtxAudioView = observer(({ store, item }) => {\n  return (\n    <div>\n      <Waveform\n        src={item._value}\n        selectRegion={item.selectRegion}\n        handlePlay={item.handlePlay}\n        onCreate={item.wsCreated}\n        addRegion={item.addRegion}\n        onLoad={item.onLoad}\n      />\n\n      <div style={{ display: \"flex\", justifyContent: \"space-between\", marginTop: \"1em\" }}>\n        <Button\n          type=\"primary\"\n          onClick={ev => {\n            item._ws.playPause();\n          }}\n        >\n          {item.playing && (\n            <Fragment>\n              <Icon type=\"pause-circle\" /> Pause\n            </Fragment>\n          )}\n          {!item.playing && (\n            <Fragment>\n              <Icon type=\"play-circle\" /> Play\n            </Fragment>\n          )}\n        </Button>\n\n        {item.haszoom === \"true\" && (\n          <input\n            type=\"range\"\n            min=\"20\"\n            max=\"200\"\n            id=\"slider\"\n            value={item.rangeValue}\n            onChange={ev => {\n              item.setRangeValue(ev.target.value);\n            }}\n          />\n        )}\n      </div>\n    </div>\n  );\n});\n\nconst HtxAudioPlus = inject(\"store\")(observer(HtxAudioView));\n\nRegistry.addTag(\"audioplus\", AudioPlusModel, HtxAudioPlus);\n\nexport { AudioPlusModel, AudioRegionModel, HtxAudioPlus };\n","import React, { Component } from \"react\";\n\nimport { observer, inject } from \"mobx-react\";\nimport { types, getParentOfType, getRoot } from \"mobx-state-tree\";\nimport { Button, Icon } from \"semantic-ui-react\";\n\nimport Registry from \"../../core/Registry\";\nimport { isHtx, cloneNode } from \"../../core/Helpers\";\nimport { guidGenerator } from \"../../core/Helpers\";\nimport { RectRegionModel } from \"../object/RectRegion\";\n\n/**\n * Rectangle tag\n * Rectangle is used to add rectangle (BBox) to an image\n * @example\n * <View>\n *   <Rectangle name=\"rect-1\" toName=\"img-1\"></Rectangle>\n *   <Image name=\"img-1\" value=\"$img\"></Image>\n * </View>\n * @name Rectangle\n * @param {string} name name of the element\n * @param {string} toname name of the image to label\n * @param {float=} [opacity=0.6] opacity of rectangle\n * @param {string=} fillColor rectangle fill color, default is transparent\n * @param {string=} strokeColor stroke color\n * @param {number=} [strokeWidth=1] width of the stroke\n * @param {boolean=} [canRotate=true] show or hide rotation handle\n */\nconst TagAttrs = types.model({\n  name: types.maybeNull(types.string),\n  toname: types.maybeNull(types.string),\n\n  opacity: types.optional(types.string, \"0.6\"),\n  fillcolor: types.maybeNull(types.string),\n\n  strokewidth: types.optional(types.string, \"1\"),\n  strokecolor: types.optional(types.string, \"#f48a42\"),\n\n  canrotate: types.optional(types.string, \"true\"),\n});\n\nconst Model = types\n  .model({\n    id: types.identifier,\n    type: \"rectangle\",\n  })\n  .views(self => ({\n    get hasStates() {\n      const states = self.states();\n      return states && states.length > 0;\n    },\n\n    get completion() {\n      return getRoot(self).completionStore.selected;\n    },\n  }))\n  .actions(self => ({\n    fromStateJSON(obj) {\n      // const rect = self._createRect();\n      // rect.setPosition(obj.value.x, obj.value.y, obj.value.width, obj.value.height, obj.value.rotation);\n      // return rect;\n    },\n  }));\n\nconst RectangleModel = types.compose(\n  \"RectangleModel\",\n  TagAttrs,\n  Model,\n);\n\nconst HtxView = () => {\n  return null;\n};\n\nRegistry.addTag(\"rectangle\", RectangleModel, HtxView);\n\nexport { HtxView, RectangleModel };\n","import { observer } from \"mobx-react\";\nimport React, { Component } from \"react\";\n\nimport { types } from \"mobx-state-tree\";\n\nimport Types from \"../../core/Types\";\nimport Tree from \"../../core/Tree\";\nimport Registry from \"../../core/Registry\";\n\nimport { guidGenerator } from \"../../core/Helpers\";\nimport SelectedModelMixin from \"../mixins/SelectedModel\";\n\nimport { HtxLabels, LabelsModel } from \"./Labels\";\nimport { RectangleModel } from \"./Rectangle\";\n\n/**\n * RectangleLabels tag creates labeled rectangles\n * @example\n * <View>\n *   <RectangleLabels name=\"labels\" toName=\"image\">\n *     <Label value=\"Person\"></Label>\n *     <Label value=\"Animal\"></Label>\n *   </RectangleLabels>\n *   <Image name=\"image\" value=\"$image\"></Image>\n * </View>\n * @name RectangleLabels\n * @param {string} name name of the element\n * @param {string} toname name of the image to label\n * @param {float=} [opacity=0.6] opacity of rectangle\n * @param {string=} fillColor rectangle fill color, default is transparent\n * @param {string=} strokeColor stroke color\n * @param {number=} [strokeWidth=1] width of stroke\n * @param {boolean=} [canRotate=true] show or hide rotation handle\n */\nconst TagAttrs = types.model({\n  name: types.maybeNull(types.string),\n  toname: types.maybeNull(types.string),\n});\n\nconst Model = types\n  .model(\"RectangleLabelsModel\", {\n    id: types.optional(types.identifier, guidGenerator),\n    pid: types.optional(types.string, guidGenerator),\n    type: \"rectanglelabels\",\n    children: Types.unionArray([\"labels\", \"label\", \"choice\"]),\n  })\n  .actions(self => ({\n    fromStateJSON(obj, fromModel) {\n      self.unselectAll();\n\n      if (!obj.value.rectanglelabels) throw new Error(\"No labels param\");\n\n      if (obj.id) self.pid = obj.id;\n\n      obj.value.rectanglelabels.forEach(l => {\n        const label = self.findLabel(l);\n\n        if (!label) throw new Error(\"No label \" + obj.value.label);\n\n        label.markSelected(true);\n      });\n    },\n  }));\n\nconst Composition = types.compose(\n  LabelsModel,\n  RectangleModel,\n  TagAttrs,\n  Model,\n  SelectedModelMixin,\n);\nconst RectangleLabelsModel = types.compose(\n  \"RectangleLabelsModel\",\n  Composition,\n);\n\nconst HtxRectangleLabels = observer(({ item }) => {\n  return <HtxLabels item={item} />;\n});\n\nRegistry.addTag(\"rectanglelabels\", RectangleLabelsModel, HtxRectangleLabels);\n\nexport { HtxRectangleLabels, RectangleLabelsModel };\n","import React, { createRef, Component, Fragment } from \"react\";\n\nimport { observer, inject } from \"mobx-react\";\nimport { types, getParentOfType, getRoot } from \"mobx-state-tree\";\n\nimport Konva from \"konva\";\nimport { Shape, Label, Stage, Layer, Rect, Text, Transformer } from \"react-konva\";\n\nimport { guidGenerator, restoreNewsnapshot } from \"../../core/Helpers\";\n\nimport { Dropdown, Input } from \"semantic-ui-react\";\n\nimport Registry from \"../../core/Registry\";\n\nimport { LabelsModel } from \"../control/Labels\";\nimport { RectangleLabelsModel } from \"../control/RectangleLabels\";\n\nimport { RatingModel } from \"../control/Rating\";\nimport { ImageModel } from \"../object/Image\";\nimport RegionsMixin from \"../mixins/Regions\";\nimport NormalizationMixin from \"../mixins/Normalization\";\n\nconst Model = types\n  .model({\n    id: types.identifier,\n    pid: types.optional(types.string, guidGenerator),\n\n    type: \"rectangleregion\",\n\n    x: types.number,\n    y: types.number,\n    width: types.number,\n    height: types.number,\n\n    scaleX: types.optional(types.number, 1),\n    scaleY: types.optional(types.number, 1),\n\n    rotation: types.optional(types.number, 0),\n\n    opacity: types.number,\n    strokewidth: types.number,\n\n    fillcolor: types.maybeNull(types.string),\n    strokecolor: types.string,\n\n    states: types.maybeNull(types.array(types.union(LabelsModel, RatingModel, RectangleLabelsModel))),\n\n    // fromName: types.maybeNull(types.string),\n\n    wp: types.maybeNull(types.number),\n    hp: types.maybeNull(types.number),\n\n    sw: types.maybeNull(types.number),\n    sh: types.maybeNull(types.number),\n\n    coordstype: types.optional(types.enumeration([\"px\", \"perc\"]), \"px\"),\n  })\n  .views(self => ({\n    get parent() {\n      return getParentOfType(self, ImageModel);\n    },\n\n    get completion() {\n      return getRoot(self).completionStore.selected;\n    },\n  }))\n  .actions(self => ({\n    unselectRegion() {\n      self.selected = false;\n      self.parent.setSelected(undefined);\n      self.completion.setHighlightedNode(null);\n    },\n\n    coordsInside(x, y) {\n      // check if x and y are inside the rectangle\n      const rx = self.x;\n      const ry = self.y;\n      const rw = self.width * (self.scaleX || 1);\n      const rh = self.height * (self.scaleY || 1);\n\n      if (x > rx && x < rx + rw && y > ry && y < ry + rh) return true;\n\n      return false;\n    },\n\n    selectRegion() {\n      self.selected = true;\n      self.completion.setHighlightedNode(self);\n      self.parent.setSelected(self.id);\n    },\n\n    setPosition(x, y, width, height, rotation) {\n      self.x = x;\n      self.y = y;\n      self.width = width;\n      self.height = height;\n\n      self.rotation = rotation;\n    },\n\n    setScale(x, y) {\n      self.scaleX = x;\n      self.scaleY = y;\n    },\n\n    addState(state) {\n      self.states.push(state);\n    },\n\n    setFill(color) {\n      self.fill = color;\n    },\n\n    updateImageSize(wp, hp, sw, sh) {\n      self.wp = wp;\n      self.hp = hp;\n\n      self.sw = sw;\n      self.sh = sh;\n\n      if (self.coordstype == \"perc\") {\n        self.x = (sw * self.x) / 100;\n        self.y = (sh * self.y) / 100;\n        self.width = (sw * self.width) / 100;\n        self.height = (sh * self.height) / 100;\n        self.coordstype = \"px\";\n      }\n    },\n\n    toStateJSON() {\n      const parent = self.parent;\n      const from = parent.states()[0];\n\n      const buildTree = obj => {\n        const tree = {\n          id: self.id,\n          from_name: from.name,\n          to_name: parent.name,\n          source: parent.value,\n          type: \"rectangle\",\n          value: {\n            x: (self.x * 100) / self.parent.stageWidth,\n            y: (self.y * 100) / self.parent.stageHeight,\n            width: (self.width * (self.scaleX || 1) * 100) / self.parent.stageWidth, //  * (self.scaleX || 1)\n            height: (self.height * (self.scaleY || 1) * 100) / self.parent.stageHeight,\n            rotation: self.rotation,\n          },\n        };\n\n        if (self.normalization) tree[\"normalization\"] = self.normalization;\n\n        return tree;\n      };\n\n      if (self.states && self.states.length) {\n        return self.states.map(s => {\n          const tree = buildTree(s);\n          // in case of labels it's gonna be, labels: [\"label1\", \"label2\"]\n          tree[\"value\"][s.type] = s.getSelectedNames();\n          tree[\"type\"] = s.type;\n\n          return tree;\n        });\n      } else {\n        return buildTree(parent);\n      }\n    },\n  }));\n\nconst RectRegionModel = types.compose(\n  \"RectRegionModel\",\n  RegionsMixin,\n  NormalizationMixin,\n  Model,\n);\n\nconst HtxRectangleView = ({ store, item }) => {\n  const self = this;\n  const { name, wwidth, wheight, onChangedPosition } = item;\n\n  const wp = item.wp || item.parent.stageWidth / item.parent.naturalWidth;\n  const hp = item.hp || item.parent.stageHeight / item.parent.naturalHeight;\n\n  const x = item.x;\n  const y = item.y;\n  const w = item.width;\n  const h = item.height;\n\n  const props = {};\n\n  props[\"opacity\"] = item.opacity;\n\n  if (item.fillcolor) {\n    props[\"fill\"] = item.fillcolor;\n  }\n\n  props[\"stroke\"] = item.strokecolor;\n  props[\"strokeWidth\"] = item.strokewidth;\n  props[\"strokeScaleEnabled\"] = false;\n  props[\"shadowBlur\"] = 0;\n\n  if (item.highlighted) {\n    props[\"stroke\"] = \"#ff0000\";\n  }\n\n  return (\n    <Fragment>\n      <Rect\n        x={x}\n        y={y}\n        width={w}\n        height={h}\n        scaleX={item.scaleX}\n        scaleY={item.scaleY}\n        name={item.id}\n        onTransformEnd={e => {\n          const t = e.target;\n\n          const wp = item.wp || item.parent.stageWidth / item.parent.naturalWidth;\n          const hp = item.hp || item.parent.stageHeight / item.parent.naturalHeight;\n\n          item.setPosition(\n            t.getAttr(\"x\"),\n            t.getAttr(\"y\"),\n            t.getAttr(\"width\"),\n            t.getAttr(\"height\"),\n            t.getAttr(\"rotation\"),\n          );\n          item.setScale(t.getAttr(\"scaleX\"), t.getAttr(\"scaleY\"));\n        }}\n        onDragEnd={e => {\n          const t = e.target;\n\n          const wp = item.wp || item.parent.stageWidth / item.parent.naturalWidth;\n          const hp = item.hp || item.parent.stageHeight / item.parent.naturalHeight;\n\n          item.setPosition(\n            t.getAttr(\"x\"),\n            t.getAttr(\"y\"),\n            t.getAttr(\"width\"),\n            t.getAttr(\"height\"),\n            t.getAttr(\"rotation\"),\n          );\n          item.setScale(t.getAttr(\"scaleX\"), t.getAttr(\"scaleY\"));\n        }}\n        dragBoundFunc={function(pos) {\n          let { x, y } = pos;\n\n          if (x < 0) x = 0;\n          if (y < 0) y = 0;\n\n          return {\n            x: x,\n            y: y,\n          };\n        }}\n        onMouseOver={e => {\n          const stage = item.parent._stageRef;\n\n          if (store.completionStore.selected.relationMode) {\n            item.setHighlight(true);\n            stage.container().style.cursor = \"crosshair\";\n          } else {\n            stage.container().style.cursor = \"pointer\";\n          }\n        }}\n        onMouseOut={e => {\n          const stage = item.parent._stageRef;\n          stage.container().style.cursor = \"default\";\n\n          if (store.completionStore.selected.relationMode) {\n            item.setHighlight(false);\n          }\n        }}\n        onClick={e => {\n          const stage = item.parent._stageRef;\n\n          if (store.completionStore.selected.relationMode) {\n            stage.container().style.cursor = \"default\";\n          }\n\n          item.setHighlight(false);\n          item.onClickRegion();\n        }}\n        {...props}\n        draggable\n      />\n    </Fragment>\n  );\n};\n\nconst HtxRectangle = inject(\"store\")(observer(HtxRectangleView));\n\nRegistry.addTag(\"rectangleregion\", RectRegionModel, HtxRectangle);\n\nexport { RectRegionModel, HtxRectangle };\n","import React, { createRef, Component, Fragment } from \"react\";\n\nimport { observer, inject } from \"mobx-react\";\nimport { types, getParentOfType, getRoot, getParent } from \"mobx-state-tree\";\n\nimport Konva from \"konva\";\nimport { Shape, Label, Stage, Layer, Rect, Text, Transformer, Line, Circle } from \"react-konva\";\n\nimport { guidGenerator, restoreNewsnapshot } from \"../../core/Helpers\";\n\nimport { Dropdown, Input } from \"semantic-ui-react\";\n\nimport Registry from \"../../core/Registry\";\n\nimport { LabelsModel } from \"../control/Labels\";\nimport { RatingModel } from \"../control/Rating\";\nimport { ImageModel } from \"../object/Image\";\nimport RegionsMixin from \"../mixins/Regions\";\nimport NormalizationMixin from \"../mixins/Normalization\";\n\nconst PolygonPoint = types\n  .model({\n    init_x: types.optional(types.number, 0),\n    init_y: types.optional(types.number, 0),\n\n    x: types.number,\n    y: types.number,\n\n    style: types.string,\n    size: types.string,\n    // isMouseOverStartPoint: types.optional(types.boolean, false),\n  })\n  .views(self => ({\n    get parent() {\n      return getParent(self, 2);\n    },\n  }))\n  .actions(self => ({\n    afterCreate() {\n      self.init_x = self.x;\n      self.init_y = self.y;\n    },\n\n    movePoint(x, y) {\n      self.x = self.init_x + x;\n      self.y = self.init_y + y;\n    },\n\n    _movePoint(x, y) {\n      self.init_x = x;\n      self.init_y = y;\n\n      self.x = x;\n      self.y = y;\n    },\n\n    handleMouseOverStartPoint(ev) {\n      const stage = self.parent.parent._stageRef;\n      stage.container().style.cursor = \"crosshair\";\n\n      if (self.parent.closed || self.parent.points.length < 3) return;\n\n      const t = ev.target;\n\n      t.setX(t.x() - t.width() / 2);\n      t.setY(t.y() - t.height() / 2);\n\n      const scaleMap = {\n        small: 3,\n        medium: 2,\n        large: 2,\n      };\n\n      const scale = scaleMap[self.size];\n\n      t.scale({ x: scale, y: scale });\n\n      self.parent.setMouseOverStartPoint(true);\n    },\n\n    handleMouseOutStartPoint(ev) {\n      const t = ev.target;\n\n      const stage = self.parent.parent._stageRef;\n      stage.container().style.cursor = \"default\";\n\n      t.setX(t.x() + t.width() / 2);\n      t.setY(t.y() + t.height() / 2);\n      t.scale({ x: 1, y: 1 });\n\n      self.parent.setMouseOverStartPoint(false);\n    },\n  }));\n\nconst PolygonPointView = observer(({ item, index }) => {\n  const sizes = {\n    small: 4,\n    medium: 8,\n    large: 12,\n  };\n\n  const stroke = {\n    small: 1,\n    medium: 2,\n    large: 3,\n  };\n\n  const w = sizes[item.size];\n\n  const startPointAttr =\n    index === 0\n      ? {\n          hitStrokeWidth: 12,\n          onMouseOver: item.handleMouseOverStartPoint,\n          onMouseOut: item.handleMouseOutStartPoint,\n        }\n      : null;\n\n  const isOver = item.parent.mouseOverStartPoint;\n\n  const dragOpts = {\n    onDragStart: e => {\n      //handleDragStartPoint\n    },\n\n    onDragMove: e => {\n      item._movePoint(e.target.attrs.x, e.target.attrs.y);\n\n      /* const points = this.state.points; */\n      /* const index = e.target.index - 1; */\n      /* console.log(event.target); */\n      /* const pos = [event.target.attrs.x, event.target.attrs.y]; */\n      /* console.log(\"move\", event); */\n      /* console.log(pos); */\n      /* this.setState({ */\n      /*     points: [...points.slice(0, index), pos, ...points.slice(index + 1)] */\n      /* }); */\n    },\n\n    onDragEnd: e => {\n      // handleDragEndPoint\n    },\n\n    onMouseOver: e => {\n      const stage = item.parent.parent._stageRef;\n      stage.container().style.cursor = \"crosshair\";\n    },\n\n    onMouseOut: e => {\n      const stage = item.parent.parent._stageRef;\n      stage.container().style.cursor = \"default\";\n    },\n  };\n\n  if (item.style == \"circle\") {\n    return (\n      <Circle\n        key={index}\n        x={item.x - w / 2}\n        y={item.y - w / 2}\n        radius={w}\n        fill=\"white\"\n        stroke=\"black\"\n        strokeWidth={stroke[item.size]}\n        {...dragOpts}\n        {...startPointAttr}\n        draggable\n      />\n    );\n  } else {\n    return (\n      <Rect\n        key={index}\n        x={item.x - w / 2}\n        y={item.y - w / 2}\n        width={w}\n        height={w}\n        fill=\"white\"\n        stroke=\"black\"\n        strokeWidth={stroke[item.size]}\n        dragOnTop={false}\n        {...dragOpts}\n        {...startPointAttr}\n        draggable\n      />\n    );\n  }\n  // <Rect width={w}\n  //       height={w}\n  //       x={item.x - w/2}\n  //       y={item.y - w/2}\n  //       fill=\"black\"\n\n  //       onClick={(ev) => {\n  //           item.parent.closePoly();\n\n  //           ev.cancelBubble = true;\n  //           ev.evt.stopPropagation();\n  //       }}\n\n  //       dragBoundFunc={function(pos) {\n  //           let { x, y } = pos;\n  //           if (x < 0) x = 0;\n  //           if (y < 0) y = 0;\n\n  //           // /* const r = wwidth - this.getAttr('width'); */\n  //           // /* const b = wheight - this.getAttr('height'); */\n\n  //           item._movePoint(x, y);\n  //           // if (x > r) x = r;\n  //           // if (y > b) y = b;\n  //           // item.redrawParent();\n\n  //         return {\n  //             x: x,\n  //             y: y,\n  //         };\n\n  //       }}\n\n  //  draggable\n  // />\n});\n\nexport { PolygonPoint, PolygonPointView };\n","import React, { Component } from \"react\";\n\nimport { observer, inject } from \"mobx-react\";\nimport { types, getParentOfType, getRoot } from \"mobx-state-tree\";\nimport { Button, Icon } from \"semantic-ui-react\";\n\nimport Registry from \"../../core/Registry\";\nimport { isHtx, cloneNode } from \"../../core/Helpers\";\nimport { guidGenerator } from \"../../core/Helpers\";\nimport { PolygonRegionModel } from \"../object/PolygonRegion\";\n\n/**\n * Polygon tag\n * Polygon is used to add polygons to an image\n * @example\n * <View>\n *   <Polygon name=\"rect-1\" toName=\"img-1\" value=\"Add Rectangle\"></Polygon>\n *   <Image name=\"img-1\" value=\"$img\"></Image>\n * </View>\n * @name Polygon\n * @param {string} name name of tag\n * @param {string} toname name of image to label\n * @param {number=} [opacity=0.6] opacity of polygon\n * @param {string=} fillColor rectangle fill color, default is transparent\n * @param {string=} strokeColor stroke color\n * @param {number=} [strokeWidth=1] width of stroke\n * @param {small|medium|large=} [pointSize=medium] size of polygon handle points\n * @param {rectangle|circle=} [pointStyle=rectangle] style of points\n */\nconst TagAttrs = types.model({\n  name: types.maybeNull(types.string),\n  toname: types.maybeNull(types.string),\n\n  opacity: types.optional(types.string, \"0.6\"),\n  fillcolor: types.maybeNull(types.string),\n\n  strokewidth: types.optional(types.string, \"1\"),\n  strokecolor: types.optional(types.string, \"#f48a42\"),\n\n  pointsize: types.optional(types.string, \"medium\"),\n  pointstyle: types.optional(types.string, \"rectangle\"),\n});\n\nconst Model = types\n  .model({\n    id: types.identifier,\n    type: \"polygon\",\n\n    // regions: types.array(RectRegionModel),\n    _value: types.optional(types.string, \"\"),\n  })\n  .views(self => ({\n    get hasStates() {\n      const states = self.states();\n      return states && states.length > 0;\n    },\n\n    get completion() {\n      return getRoot(self).completionStore.selected;\n    },\n\n    states() {\n      return self.completion.toNames.get(self.name);\n    },\n\n    activeStates() {\n      const states = self.states();\n      return states ? states.filter(c => c.isSelected === true) : null;\n    },\n  }))\n  .actions(self => ({}));\n\nconst PolygonModel = types.compose(\n  \"PolygonModel\",\n  TagAttrs,\n  Model,\n);\n\nconst HtxView = inject(\"store\")(\n  observer(({ store, item }) => {\n    return null;\n  }),\n);\n\nRegistry.addTag(\"polygon\", PolygonModel, HtxView);\n\nexport { HtxView, PolygonModel };\n","import { observer } from \"mobx-react\";\nimport React, { Component } from \"react\";\n\nimport { types } from \"mobx-state-tree\";\n\nimport Types from \"../../core/Types\";\nimport Tree from \"../../core/Tree\";\nimport Registry from \"../../core/Registry\";\n\nimport { guidGenerator } from \"../../core/Helpers\";\nimport SelectedModelMixin from \"../mixins/SelectedModel\";\n\nimport { HtxLabels, LabelsModel } from \"./Labels\";\nimport { PolygonModel } from \"./Polygon\";\n\n/**\n * PolygonLabels tag, create labeled polygons\n * @example\n * <View>\n *   <Image name=\"image\" value=\"$image\"></Image>\n *   <PolygonLabels name=\"lables\" toName=\"image\">\n *     <Label value=\"Car\"></Label>\n *     <Label value=\"Sign\"></Label>\n *   </PolygonLabels>\n * </View>\n * @name PolygonLabels\n * @param {string} name name of tag\n * @param {string} toname name of image to label\n * @param {number=} [opacity=0.6] opacity of polygon\n * @param {string=} fillColor rectangle fill color, default is transparent\n * @param {string=} strokeColor stroke color\n * @param {number=} [strokeWidth=1] width of stroke\n * @param {small|medium|large=} [pointSize=medium] size of polygon handle points\n * @param {rectangle|circle=} [pointStyle=rectangle] style of points\n */\nconst TagAttrs = types.model({\n  name: types.maybeNull(types.string),\n  toname: types.maybeNull(types.string),\n});\n\nconst Model = types\n  .model(\"PolygonLabelsModel\", {\n    id: types.optional(types.identifier, guidGenerator),\n    pid: types.optional(types.string, guidGenerator),\n    type: \"polygonlabels\",\n    children: Types.unionArray([\"labels\", \"label\", \"choice\"]),\n  })\n  .actions(self => ({\n    fromStateJSON(obj, fromModel) {\n      self.unselectAll();\n\n      if (!obj.value.polygonlabels) throw new Error(\"No labels param\");\n\n      if (obj.id) self.pid = obj.id;\n\n      obj.value.polygonlabels.forEach(l => {\n        const label = self.findLabel(l);\n        if (!label) throw new Error(\"No label \" + obj.value.label);\n\n        label.markSelected(true);\n      });\n    },\n  }));\n\nconst Composition = types.compose(\n  LabelsModel,\n  PolygonModel,\n  TagAttrs,\n  Model,\n  SelectedModelMixin,\n);\nconst PolygonLabelsModel = types.compose(\n  \"PolygonLabelsModel\",\n  Composition,\n);\n\nconst HtxPolygonLabels = observer(({ item }) => {\n  return <HtxLabels item={item} />;\n});\n\nRegistry.addTag(\"polygonlabels\", PolygonLabelsModel, HtxPolygonLabels);\n\nexport { HtxPolygonLabels, PolygonLabelsModel };\n","import React, { createRef, Component, Fragment } from \"react\";\n\nimport { observer, inject } from \"mobx-react\";\nimport { types, getParentOfType, getRoot, getParent } from \"mobx-state-tree\";\n\nimport Konva from \"konva\";\nimport { Shape, Label, Stage, Layer, Rect, Text, Transformer, Group, Line } from \"react-konva\";\n\nimport { guidGenerator, restoreNewsnapshot } from \"../../core/Helpers\";\n\nimport { Dropdown, Input } from \"semantic-ui-react\";\n\nimport Registry from \"../../core/Registry\";\n\nimport { LabelsModel } from \"../control/Labels\";\nimport { RatingModel } from \"../control/Rating\";\nimport { ImageModel } from \"../object/Image\";\nimport { PolygonPoint, PolygonPointView } from \"./PolygonPoint\";\n\nimport { PolygonLabelsModel } from \"../control/PolygonLabels\";\n\nimport RegionsMixin from \"../mixins/Regions\";\nimport NormalizationMixin from \"../mixins/Normalization\";\n\nconst Model = types\n  .model({\n    id: types.identifier,\n    pid: types.optional(types.string, guidGenerator),\n\n    type: \"polygonregion\",\n\n    opacity: types.number,\n    fillcolor: types.maybeNull(types.string),\n\n    strokewidth: types.number,\n    strokecolor: types.string,\n\n    pointsize: types.string,\n    pointstyle: types.string,\n\n    closed: types.optional(types.boolean, false),\n\n    points: types.array(PolygonPoint, []),\n\n    states: types.maybeNull(types.array(types.union(LabelsModel, RatingModel, PolygonLabelsModel))),\n\n    mouseOverStartPoint: types.optional(types.boolean, false),\n\n    fromName: types.maybeNull(types.string),\n\n    wp: types.maybeNull(types.number),\n    hp: types.maybeNull(types.number),\n  })\n  .views(self => ({\n    get parent() {\n      return getParentOfType(self, ImageModel);\n    },\n\n    get completion() {\n      return getRoot(self).completionStore.selected;\n    },\n\n    get isCW() {},\n\n    linePoints() {\n      const p = self.points.map(p => [p[\"x\"], p[\"y\"]]);\n\n      const flatten = arr => {\n        return arr.reduce(function(flat, toFlatten) {\n          return flat.concat(Array.isArray(toFlatten) ? flatten(toFlatten) : toFlatten);\n        }, []);\n      };\n\n      return flatten(p);\n    },\n  }))\n  .actions(self => ({\n    setMouseOverStartPoint(val) {\n      self.mouseOverStartPoint = val;\n    },\n\n    findPolyOutline() {\n      const { points } = self;\n      const left = points.reduce((acc, loc) => (acc.x < loc.x ? acc : loc));\n      const right = points.reduce((acc, loc) => (acc.x > loc.x ? acc : loc));\n\n      const top = points.reduce((acc, loc) => (acc.y < loc.y ? acc : loc));\n      const bottom = points.reduce((acc, loc) => (acc.y > loc.y ? acc : loc));\n\n      return {\n        x: left.x,\n        y: top.y,\n        width: right.x - left.x,\n        height: bottom.y - top.y,\n      };\n    },\n\n    coordsInside(x, y) {\n      const inside = false;\n      const vs = self.points;\n\n      for (var i = 0, j = vs.length - 1; i < vs.length; j = i++) {\n        var xi = vs[i][0],\n          yi = vs[i][1];\n        var xj = vs[j][0],\n          yj = vs[j][1];\n\n        var intersect = yi > y != yj > y && x < ((xj - xi) * (y - yi)) / (yj - yi) + xi;\n\n        if (intersect) inside = !inside;\n      }\n\n      return inside;\n    },\n\n    addPoint(x, y) {\n      if (self.closed) return;\n\n      if (self.mouseOverStartPoint) {\n        self.closePoly();\n        return;\n      }\n      // if (self.canClose(x, y)) {\n      //     self.closePoly();\n      //     return;\n      // }\n\n      self._addPoint(x, y);\n    },\n\n    insertPoint(insertIdx, x, y) {\n      const p = { x: x, y: y, size: self.pointsize, style: self.pointstyle };\n      self.points.splice(insertIdx, 0, p);\n    },\n\n    _addPoint(x, y) {\n      self.points.push({ x: x, y: y, size: self.pointsize, style: self.pointstyle });\n    },\n\n    closePoly() {\n      self.closed = true;\n      self.selectRegion();\n    },\n\n    canClose(x, y) {\n      if (self.points.length < 2) return false;\n\n      const p1 = self.points[0];\n      const p2 = { x: x, y: y };\n\n      var r = 50;\n      var dist_points = (p1[\"x\"] - p2[\"x\"]) * (p1[\"x\"] - p2[\"x\"]) + (p1[\"y\"] - p2[\"y\"]) * (p2[\"y\"] - p2[\"y\"]);\n\n      if (dist_points < r) {\n        return true;\n      } else {\n        return false;\n      }\n    },\n\n    unselectRegion() {\n      self.selected = false;\n      self.parent.setSelected(undefined);\n      self.completion.setHighlightedNode(null);\n    },\n\n    selectRegion() {\n      self.selected = true;\n      self.completion.setHighlightedNode(self);\n      self.parent.setSelected(self.id);\n    },\n\n    setPosition(x, y, width, height, rotation) {\n      self.x = x;\n      self.y = y;\n      self.width = width;\n      self.height = height;\n\n      self.rotation = rotation;\n    },\n\n    setScale(x, y) {\n      self.scaleX = x;\n      self.scaleY = y;\n    },\n\n    addState(state) {\n      self.states.push(state);\n    },\n\n    setFill(color) {\n      self.fill = color;\n    },\n\n    updateImageSize(wp, hp) {\n      self.wp = wp;\n      self.hp = hp;\n    },\n\n    toStateJSON() {\n      // console.log(self.parent.naturalWidth);\n      const { naturalWidth, naturalHeight, stageWidth, stageHeight } = self.parent;\n\n      const perc_w = (stageWidth * 100) / naturalWidth;\n      const perc_h = (stageHeight * 100) / naturalHeight;\n\n      const perc_points = self.points.map(p => {\n        const orig_w = (p.x * 100) / perc_w;\n        const res_w = (orig_w * 100) / naturalWidth;\n\n        const orig_h = (p.y * 100) / perc_h;\n        const res_h = (orig_h * 100) / naturalHeight;\n\n        return [res_w, res_h];\n      });\n\n      // 1024 - 100\n      // 750 - x\n\n      // x = (750 * 100) / 1024\n      // x = 75\n\n      // 300 - 75\n      // y - 100\n\n      // y = (100 * 300) / 75\n      // y = 500\n\n      // 1024 - 100\n      // 500 - z\n\n      // z = (y * 100) / 1024\n\n      const parent = self.parent;\n      const buildTree = obj => {\n        const tree = {\n          id: self.id,\n          from_name: obj.name,\n          to_name: parent.name,\n          source: parent.value,\n          type: \"polygon\",\n          value: {\n            points: perc_points,\n          },\n        };\n\n        if (self.normalization) tree[\"normalization\"] = self.normalization;\n\n        return tree;\n      };\n\n      if (self.states && self.states.length) {\n        return self.states.map(s => {\n          const tree = buildTree(s);\n          // in case of labels it's gonna be, labels: [\"label1\", \"label2\"]\n          tree[\"value\"][s.type] = s.getSelectedNames();\n          tree[\"type\"] = s.type;\n\n          return tree;\n        });\n      } else {\n        return buildTree(parent);\n      }\n    },\n  }));\n\nconst PolygonRegionModel = types.compose(\n  \"PolygonRegionModel\",\n  RegionsMixin,\n  NormalizationMixin,\n  Model,\n);\n\nfunction getAnchorPoint({ flattenedPoints, a, b }) {\n  const [x1, y1, x2, y2] = flattenedPoints;\n  const y =\n    ((x2 - x1) * (x2 * y1 - x1 * y2) + (x2 - x1) * (y2 - y1) * a + (y2 - y1) * (y2 - y1) * b) /\n    ((y2 - y1) * (y2 - y1) + (x2 - x1) * (x2 - x1));\n  const x =\n    a -\n    ((y2 - y1) * (x2 * y1 - x1 * y2 + a * (y2 - y1) - b * (x2 - x1))) / ((y2 - y1) * (y2 - y1) + (x2 - x1) * (x2 - x1));\n  return [x, y];\n}\n\nfunction getFlattenedPoints(points) {\n  const p = points.map(p => [p[\"x\"], p[\"y\"]]);\n  return p.reduce(function(flattenedPoints, point) {\n    return flattenedPoints.concat(point);\n  }, []);\n}\n\nconst HtxPolygonView = ({ store, item }) => {\n  const self = this;\n  const { name, wwidth, wheight, onChangedPosition } = item;\n\n  let opacity = 0.5;\n\n  const wp = item.wp || item.parent.stageWidth / item.parent.naturalWidth;\n  const hp = item.hp || item.parent.stageHeight / item.parent.naturalHeight;\n\n  const x = item.x;\n  const y = item.y;\n  const w = item.width;\n  const h = item.height;\n\n  const props = {};\n\n  props[\"opacity\"] = item.opacity;\n\n  if (item.fillcolor) {\n    props[\"fill\"] = item.fillcolor;\n  }\n\n  props[\"stroke\"] = item.strokecolor;\n  props[\"strokeWidth\"] = item.strokewidth;\n\n  if (item.highlighted) {\n    props[\"stroke\"] = \"red\";\n  }\n\n  return (\n    <Fragment>\n      {item.mouseOverStartPoint}\n\n      <Line\n        points={item.linePoints()}\n        fill={item.fill}\n        opacity={item.opacity}\n        closed={item.closed}\n        redraw={item.update}\n        stroke={item.stroke}\n        strokeWidth={parseInt(item.strokewidth)}\n        onDragStart={e => {\n          item.completion.setDragMode(true);\n        }}\n        dragBoundFunc={function(pos) {\n          let { x, y } = pos;\n          /* if (x < 0) x = 0; */\n          /* if (y < 0) y = 0; */\n\n          const r = item.parent.stageWidth - this.getAttr(\"width\");\n          const b = item.parent.stageHeight - this.getAttr(\"height\");\n\n          /* const r = wwidth - this.getAttr('width'); */\n          /* const b = wheight - this.getAttr('height'); */\n\n          if (x > r) x = r;\n          if (y > b) y = b;\n\n          item.points.forEach(p => {\n            p.movePoint(x, y);\n          });\n\n          return {\n            x: 0,\n            y: 0,\n          };\n        }}\n        onDragEnd={e => {\n          item.completion.setDragMode(false);\n\n          if (!item.closed) item.closePoly();\n\n          item.parent.setActivePolygon(null);\n\n          item.points.forEach(p => {\n            p.afterCreate();\n          });\n        }}\n        onMouseOver={e => {\n          const stage = item.parent._stageRef;\n\n          if (store.completionStore.selected.relationMode) {\n            item.setHighlight(true);\n            stage.container().style.cursor = \"crosshair\";\n          } else {\n            stage.container().style.cursor = \"pointer\";\n          }\n        }}\n        onMouseOut={e => {\n          const stage = item.parent._stageRef;\n          stage.container().style.cursor = \"default\";\n\n          if (store.completionStore.selected.relationMode) {\n            item.setHighlight(false);\n          }\n        }}\n        onClick={e => {\n          e.cancelBubble = true;\n\n          if (!item.closed) return;\n\n          const stage = item.parent._stageRef;\n\n          if (store.completionStore.selected.relationMode) {\n            stage.container().style.cursor = \"default\";\n          }\n\n          item.setHighlight(false);\n          item.onClickRegion();\n        }}\n        {...props}\n        draggable\n      />\n\n      {!item.closed && item.points.map((p, index) => <PolygonPointView item={p} index={index} />)}\n      {item.closed && item.selected && item.points.map((p, index) => <PolygonPointView item={p} index={index} />)}\n    </Fragment>\n  );\n};\n\nconst HtxPolygon = inject(\"store\")(observer(HtxPolygonView));\n\nRegistry.addTag(\"polygonregion\", PolygonRegionModel, HtxPolygon);\n\nexport { PolygonRegionModel, HtxPolygon };\n","import React, { Component } from \"react\";\nimport { observer, inject, Provider } from \"mobx-react\";\nimport { types, getType, getParentOfType, destroy, getRoot } from \"mobx-state-tree\";\n\nimport { Stage, Layer, Rect, Text, Transformer } from \"react-konva\";\n\nimport Registry from \"../../core/Registry\";\nimport { guidGenerator, cloneNode, restoreNewsnapshot } from \"../../core/Helpers\";\nimport Tree from \"../../core/Tree\";\n\n// import { ImageEditorModel } from './ImageEditor';\nimport { RectRegionModel } from \"./RectRegion\";\nimport { PolygonRegionModel } from \"./PolygonRegion\";\nimport ProcessAttrsMixin from \"../mixins/ProcessAttrs\";\n\n/**\n * Image tag shows an image on the page\n * @example\n * <View>\n *   <Image value=\"$url\"></Image>\n * </View>\n * @example\n * <View>\n *   <Image value=\"https://imgflip.com/s/meme/Leonardo-Dicaprio-Cheers.jpg\" width=\"100%\" maxWidth=\"750px\"></Image>\n * </View>\n * @name Image\n * @param {string} name name of the element\n * @param {string} value value\n * @param {string=} [width=100%] image width\n * @param {string=} [maxWidth=750px] image maximum width\n */\nconst TagAttrs = types.model({\n  name: types.maybeNull(types.string),\n  value: types.maybeNull(types.string),\n  resize: types.maybeNull(types.string),\n  width: types.optional(types.string, \"100%\"),\n  maxwidth: types.optional(types.string, \"750px\"),\n});\n\nconst Model = types\n  .model({\n    id: types.identifier,\n    type: \"image\",\n    _value: types.optional(types.string, \"\"),\n    stageWidth: types.optional(types.integer, 1),\n    stageHeight: types.optional(types.integer, 1),\n    naturalWidth: types.optional(types.integer, 1),\n    naturalHeight: types.optional(types.integer, 1),\n    selectedShape: types.safeReference(types.union(RectRegionModel, PolygonRegionModel)),\n    activePolygon: types.maybeNull(types.safeReference(PolygonRegionModel)),\n    shapes: types.array(types.union(RectRegionModel, PolygonRegionModel), []),\n  })\n  .views(self => ({\n    get hasStates() {\n      const states = self.states();\n      return states && states.length > 0;\n    },\n\n    get completion() {\n      return getRoot(self).completionStore.selected;\n    },\n\n    states() {\n      return self.completion.toNames.get(self.name);\n    },\n\n    controlButton() {\n      const names = self.completion.toNames.get(self.name);\n      return names[0];\n    },\n\n    controlButtonType() {\n      const name = self.controlButton();\n      return getType(name).name;\n    },\n\n    // get editor() {\n    //     try {\n    //         return getParentOfType(self, ImageEditorModel);\n    //     } catch (err) {\n    //         return null;\n    //     }\n    // },\n\n    // get isInsideEditor() {\n    //     return (self.editor !== null);\n    // }\n  }))\n  .actions(self => ({\n    setActivePolygon(poly) {\n      self.activePolygon = poly;\n    },\n\n    updateIE(ev) {\n      const { width, height, naturalWidth, naturalHeight } = ev.target;\n\n      if (self.hasStates) {\n        self.naturalWidth = naturalWidth;\n        self.naturalHeight = naturalHeight;\n        self.stageWidth = width;\n        self.stageHeight = height;\n\n        // const IE = getParentOfType(self, ImageEditorModel);\n        // IE.updateStageSize(width, height);\n        self.shapes.forEach(s => s.updateImageSize(width / naturalWidth, height / naturalHeight, width, height));\n      }\n    },\n\n    _setStageRef(ref) {\n      self._stageRef = ref;\n    },\n\n    _deleteSelectedShape() {\n      if (self.selectedShape) destroy(self.selectedShape);\n    },\n\n    setSelected(shape) {\n      self.selectedShape = shape;\n    },\n\n    _addShape(shape) {\n      self.shapes.push(shape);\n      self.completion.addRegion(shape);\n      self.setSelected(shape.id);\n      shape.selectRegion();\n    },\n\n    onImageClick(ev) {\n      // console.log(self.controlButton());\n      if (self.controlButtonType() === \"RectangleModel\") {\n        self._addRect(ev);\n      } else if (self.controlButtonType() === \"PolygonModel\") {\n        self._addPoly(ev);\n      } else if (self.controlButtonType() === \"PolygonLabelsModel\") {\n        if (self.activePolygon && !self.activePolygon.closed) {\n          self._addPoly(ev);\n        } else {\n          const states = self.completion.toNames.get(self.name);\n          const activeStates = states ? states.filter(c => c.isSelected == true) : null;\n          const clonedStates = activeStates ? activeStates.map(s => cloneNode(s)) : null;\n\n          if (clonedStates.length === 0) return;\n\n          self._addPoly(ev, clonedStates);\n\n          activeStates && activeStates.forEach(s => s.unselectAll());\n        }\n      } else if (self.controlButtonType() === \"RectangleLabelsModel\") {\n        const states = self.completion.toNames.get(self.name);\n        const activeStates = states ? states.filter(c => c.isSelected === true) : null;\n        const clonedStates = activeStates ? activeStates.map(s => cloneNode(s)) : null;\n\n        // don't allow to add RectangleLabel when there is no label selected\n        if (clonedStates.length === 0) return;\n\n        self._addRect(ev, clonedStates);\n\n        activeStates && activeStates.forEach(s => s.unselectAll());\n      }\n    },\n\n    _addRect(ev, states) {\n      // const _states = self.activeStates();\n      // const states = (_states) ? _states.map(s => cloneNode(s)) : null;\n      // const states = null;\n\n      // const image = self.completion.names.get(self.toname);\n\n      const iw = 200;\n      const ih = 200;\n\n      // console.log(states.toJSON());\n\n      // based on image width and height we can place rect somewhere\n      // in the center\n      const sw = 100;\n      const sh = 100;\n      // const name = guidGenerator();\n\n      let stroke = self.controlButton().rectstrokecolor;\n      // let stroke = self.editor.rectstrokecolor;\n      // const states = self.states;\n      // TODO you may need to filter this states, check Text.js\n      if (states && states.length) {\n        // console.log(states[0].toJSON());\n        // console.log(states);\n        stroke = states[0].getSelectedColor();\n      }\n\n      const wp = self.stageWidth / self.naturalWidth;\n      const hp = self.stageHeight / self.naturalHeight;\n\n      const wx = ev.evt.offsetX;\n      const wy = ev.evt.offsetY;\n\n      self.__addRect(Math.floor(wx - sw / 2), Math.floor(wy - sh / 2), sw, sh, stroke, states);\n    },\n\n    __addRect(x, y, sw, sh, stroke, states, coordstype) {\n      const c = self.controlButton();\n      const rect = RectRegionModel.create({\n        id: guidGenerator(),\n\n        x: x,\n        y: y,\n\n        width: sw,\n        height: sh,\n\n        opacity: parseFloat(c.opacity),\n        fillcolor: c.fillcolor,\n\n        strokewidth: parseInt(c.strokewidth),\n        strokecolor: stroke,\n\n        states: states,\n\n        coordstype: coordstype,\n      });\n\n      self._addShape(rect);\n    },\n\n    _addPoly(ev, states) {\n      let poly;\n      const w = 10;\n\n      if (self.activePolygon && self.activePolygon.closed) {\n        self.setActivePolygon(null);\n        return;\n      }\n\n      if (self.completion.dragMode === false) {\n        if (self.activePolygon) {\n          poly = self.activePolygon;\n        } else {\n          const c = self.controlButton();\n          poly = PolygonRegionModel.create({\n            id: guidGenerator(),\n            x: ev.evt.offsetX - w / 2,\n            y: ev.evt.offsetY - w / 2,\n            width: w,\n            height: w,\n\n            opacity: parseFloat(c.opacity),\n            fillcolor: c.fillcolor,\n\n            strokewidth: parseInt(c.strokewidth),\n            strokecolor: c.strokecolor,\n\n            pointsize: c.pointsize,\n            pointstyle: c.pointstyle,\n\n            states: states,\n          });\n\n          self.setActivePolygon(poly);\n\n          self.shapes.push(poly);\n          self.completion.addRegion(poly);\n\n          // self._addShape(poly);\n        }\n\n        poly.addPoint(ev.evt.offsetX - w / 2, ev.evt.offsetY - w / 2);\n\n        const stage = self._stageRef;\n        stage.container().style.cursor = \"default\";\n      }\n    },\n\n    toStateJSON() {\n      return self.shapes.map(r => r.toStateJSON());\n    },\n\n    fromStateJSON(obj, fromModel) {\n      const params = [\"choices\", \"shape\", \"rectanglelabels\"];\n\n      params.forEach(item => {\n        if (!item in obj.value) {\n          throw new Error(\"Not valid param\");\n        }\n      });\n\n      if (obj.value.choices) {\n        self.completion.names.get(obj.from_name).fromStateJSON(obj);\n      }\n\n      if (obj.value.rectanglelabels) {\n        const states = restoreNewsnapshot(fromModel);\n\n        states.fromStateJSON(obj);\n\n        self.__addRect(\n          obj.value.x,\n          obj.value.y,\n          obj.value.width,\n          obj.value.height,\n          states.getSelectedColor(),\n          [states],\n          \"perc\",\n        );\n      }\n\n      if (obj.value.shape) {\n        let modifySnap;\n        let shapeModel;\n\n        if (obj.from_name !== obj.to_name) {\n          modifySnap = restoreNewsnapshot(fromModel);\n          shapeModel = modifySnap.fromStateJSON(obj);\n          self.shapes.push(shapeModel);\n        }\n      }\n    },\n  }));\n\nconst ImageModel = types.compose(\n  \"ImageModel\",\n  TagAttrs,\n  Model,\n  ProcessAttrsMixin,\n);\n\nclass TransformerComponent extends React.Component {\n  componentDidMount() {\n    this.checkNode();\n  }\n\n  componentDidUpdate() {\n    this.checkNode();\n  }\n\n  checkNode() {\n    // here we need to manually attach or detach Transformer node\n    const stage = this.transformer.getStage();\n    const { selectedShapeName } = this.props;\n\n    if (!selectedShapeName) {\n      this.transformer.detach();\n      this.transformer.getLayer().batchDraw();\n      return;\n    }\n\n    const selectedNode = stage.findOne(\".\" + selectedShapeName.id);\n    // do nothing if selected node is already attached\n    if (selectedNode === this.transformer.node()) {\n      return;\n    }\n\n    if (selectedNode) {\n      // attach to another node\n      this.transformer.attachTo(selectedNode);\n    } else {\n      // remove transformer\n      this.transformer.detach();\n    }\n    this.transformer.getLayer().batchDraw();\n  }\n\n  render() {\n    return (\n      <Transformer\n        resizeEnabled={true}\n        rotateEnabled={this.props.rotateEnabled}\n        anchorSize={8}\n        // borderEnabled={false}\n        // borderDash={[]}\n        // anchorCornerRadius={5}\n        // enabledAnchors={['top-left', 'top-right', 'bottom-left', 'bottom-right']}\n        ref={node => {\n          this.transformer = node;\n        }}\n      />\n    );\n  }\n}\n\nclass HtxImageView extends Component {\n  handleDblClick = ev => {\n    // const item = this.props.item;\n    // const poly = item.activePolygon;\n    // if (poly)\n    //     poly.closePoly();\n    // item.setActivePolygon(null);\n  };\n\n  handleOnClick = ev => {\n    const { item } = this.props;\n\n    // TODO this is a hack, for some reason stopPropagation is not\n    // working. And when you try to select a Rectangle the event\n    // propagates to Image as well. Which calls this function even\n    // if you click inside Rectangle. Current workaround is to\n    // check if our click lands inside the Rectangle/Polygon or\n    // not :-/\n    // const { offsetX, offsetY } = ev.evt;\n    // const shape = item.shapes.find(sh => sh.coordsInside(offsetX, offsetY));\n\n    // if (shape)\n    //     return;\n\n    return item.onImageClick(ev);\n  };\n\n  handleStageMouseDown = e => {\n    if (e.target === e.target.getStage()) {\n      return;\n    }\n\n    // clicked on transformer - do nothing\n    const clickedOnTransformer = e.target.getParent().className === \"Transformer\";\n    if (clickedOnTransformer) {\n      return;\n    }\n  };\n\n  render() {\n    // const width = 750;\n    const { item, store } = this.props;\n\n    // TODO fix me\n    if (!store.task) return null;\n\n    const divStyle = {};\n    const style = {\n      width: item.width,\n      maxWidth: item.maxwidth,\n    };\n\n    if (item.resize) {\n      style[\"transform\"] = \"scale(\" + item.resize + \", \" + item.resize + \")\";\n    }\n\n    if (item.hasStates) {\n      divStyle[\"position\"] = \"absolute\";\n      // const rotateEnabled = (item.editor.rectcanrotate == \"true\") ? true : false;\n      const rotateEnabled = item.controlButton().canrotate === \"true\" ? true : false;\n\n      return (\n        <div style={{ marginBottom: \"1em\", marginTop: \"1em\" }}>\n          <div style={divStyle}>\n            <img style={style} src={item._value} onLoad={item.updateIE} />\n          </div>\n          <Stage\n            ref={ref => {\n              item._setStageRef(ref);\n            }}\n            width={item.stageWidth}\n            height={item.stageHeight}\n            onDblClick={this.handleDblClick}\n            onClick={this.handleOnClick}\n            onMouseDown={this.handleStageMouseDown}\n          >\n            <Layer>\n              {item.shapes.map(s => {\n                return Tree.renderItem(s);\n              })}\n              <TransformerComponent rotateEnabled={rotateEnabled} selectedShapeName={this.props.item.selectedShape} />\n            </Layer>\n          </Stage>\n        </div>\n      );\n    } else {\n      divStyle[\"marginTop\"] = \"1em\";\n      return (\n        <div style={divStyle}>\n          <img style={style} src={item._value} onLoad={item.updateIE} />\n        </div>\n      );\n    }\n  }\n}\n\nconst HtxImage = inject(\"store\")(observer(HtxImageView));\n\nRegistry.addTag(\"image\", ImageModel, HtxImage);\n\nexport { ImageModel, HtxImage };\n","/**\n * Class for text data with 4 params:\n * start -> int: the index of the character where the range start.\n * end -> int: the index of the character where the range stop.\n * text -> string: the highlighted text.\n * data -> object: extra data (the props of the highlight component)\n */\nexport default class Range {\n  constructor(start, end, text, data = {}) {\n    this.start = start;\n    this.end = end;\n    this.text = text;\n    this.data = data;\n  }\n}\n","import React, { Component } from \"react\";\nimport { PropTypes } from \"prop-types\";\n\nexport default class TextNode extends Component {\n  render() {\n    return (\n      <span\n        data-position={this.props.position}\n        overlap={this.props.overlap}\n        key={this.props.keyNode ? this.props.keyNode : null}\n        style={this.props.style}\n      >\n        {this.props.children}\n      </span>\n    );\n  }\n}\n\nTextNode.propTypes = {\n  position: PropTypes.number,\n  overlap: PropTypes.string,\n  key: PropTypes.string,\n  style: PropTypes.object,\n  children: PropTypes.oneOfType([PropTypes.string, PropTypes.object]).isRequired,\n};\n","import React from \"react\";\nimport { observer, inject } from \"mobx-react\";\nimport Utils from \"../../utils\";\nimport TextNode from \"../TextNode/TextNode\";\n\nconst HtxTextNodeView = ({ store, range, id, highlightStyle, style, charIndex, children, overlap }) => {\n  const getStyle = range => (range ? highlightStyle : style);\n  const getRangeKey = () => `${id}-${range.start}-${charIndex}`;\n  const getNormalKey = () => `${id}-${charIndex}`;\n  const getKey = range => (range ? getRangeKey() : getNormalKey());\n\n  let wrapper = (\n    <span data-position={charIndex} key={getKey(range)} style={getStyle(range)}>\n      {children}\n    </span>\n  );\n\n  if (overlap && overlap.length) {\n    let bg;\n\n    if (range.states) {\n      range.states.map(i => {\n        bg = Utils.Colors.convertToRGBA(i.getSelectedColor(), 0.3);\n      });\n    }\n\n    store.completionStore.selected.regionStore.regions.map(i => {\n      if (i.selected) {\n        overlap.map(overlapItem => {\n          if (overlapItem === i.id) {\n            bg = \"#ff4d4f\";\n          }\n        });\n      }\n\n      if (i.highlighted && overlap.includes(i.id)) {\n        bg = \"#ff4d4f\";\n      }\n    });\n\n    wrapper = overlap.reduceRight((value, key) => {\n      return (\n        <TextNode\n          style={{ background: bg, padding: \"2px 0\" }}\n          position={charIndex}\n          overlap={key}\n          keyNode={getKey(range)}\n        >\n          {value}\n        </TextNode>\n      );\n    }, children);\n  }\n\n  return wrapper;\n};\n\nconst HtxTextNode = inject(\"store\")(observer(HtxTextNodeView));\nexport { HtxTextNode };\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { HtxTextNode } from \"./Node\";\n\n/**\n * Node for URL\n * @param {*} props\n */\nconst UrlNode = props => {\n  const style = { wordWrap: \"break-word\" };\n\n  return (\n    <HtxTextNode\n      id={props.id}\n      highlightStyle={Object.assign({}, style, props.highlightStyle)}\n      charIndex={props.charIndex}\n      range={props.range}\n      overlap={props.overlap}\n      style={style}\n    >\n      <a data-position={props.charIndex + props.url.length} href={props.url} target=\"blank\">\n        {props.url}\n      </a>\n    </HtxTextNode>\n  );\n};\n\nUrlNode.propTypes = {\n  highlightStyle: PropTypes.object,\n  id: PropTypes.string,\n  charIndex: PropTypes.number,\n  range: PropTypes.object,\n  url: PropTypes.string,\n};\n\nexport default UrlNode;\n","import React from \"react\";\nimport { PropTypes } from \"prop-types\";\n\nimport { HtxTextNode } from \"./Node\";\n\n/**\n * Node for Emoji\n * @param {*} props\n */\nconst EmojiNode = props => {\n  return (\n    <HtxTextNode\n      id={props.id}\n      highlightStyle={props.highlightStyle}\n      charIndex={props.charIndex}\n      range={props.range}\n      overlap={props.overlap}\n    >\n      {`${props.text[props.charIndex]}${props.text[props.charIndex + 1]}`}\n    </HtxTextNode>\n  );\n};\n\nEmojiNode.propTypes = {\n  id: PropTypes.string.isRequired,\n  highlightStyle: PropTypes.object,\n  charIndex: PropTypes.number.isRequired,\n  range: PropTypes.oneOfType([PropTypes.number, PropTypes.object]),\n  overlap: PropTypes.array,\n  text: PropTypes.string.isRequired,\n};\n\nexport default EmojiNode;\n","import emojiRegex from \"emoji-regex\";\nimport React, { Component } from \"react\";\nimport { observer } from \"mobx-react\";\n\nimport Utils from \"../../utils\";\nimport Range from \"./Range\";\nimport { HtxTextNode } from \"./Node\";\nimport UrlNode from \"./UrlNode\";\nimport EmojiNode from \"./EmojiNode\";\nimport styles from \"./TextHighlight.module.scss\";\n\nclass TextHighlight extends Component {\n  constructor() {\n    super();\n\n    this.dismissMouseUp = 0;\n  }\n\n  /**\n   * Return first ok element\n   */\n  getRange(charIndex) {\n    if (this.props.ranges && this.props.ranges.length) {\n      return this.props.ranges.find(range => charIndex >= range.start && charIndex <= range.end);\n    }\n  }\n\n  /**\n   * Function when the user mouse is over an highlighted text\n   */\n  onMouseOverHighlightedWord(range, visible) {\n    if (visible && this.props.onMouseOverHighlightedWord) {\n      this.props.onMouseOverHighlightedWord(range);\n    }\n  }\n\n  getLetterNode(charIndex, range) {\n    /**\n     * Current symbol\n     */\n    const char = this.props.text[charIndex];\n\n    let nl;\n\n    /**\n     * Line break\n     */\n    if (char && char.charCodeAt()) {\n      nl = char.charCodeAt(0) === 10;\n    }\n\n    let arrOverlap = [];\n\n    if (this.props.ranges) {\n      this.props.ranges.map(range => {\n        if (charIndex >= range.start && charIndex <= range.end) {\n          return (arrOverlap = [...arrOverlap, range.id]);\n        }\n\n        return arrOverlap;\n      });\n    }\n\n    return (\n      <HtxTextNode\n        id={this.props.id}\n        overlap={arrOverlap}\n        range={range}\n        charIndex={charIndex}\n        key={`${this.props.id}-${charIndex}`}\n        highlightStyle={this.props.highlightStyle}\n        // style={{padding: \"2px 0\", background: \"linear-gradient(180deg, #fdcd3b 60%, #ffed4b 60%, red 9%)\"}}\n      >\n        {nl ? <br /> : char}\n      </HtxTextNode>\n    );\n  }\n\n  getEmojiNode(charIndex, range) {\n    let arrOverlap = [];\n\n    if (this.props.ranges) {\n      this.props.ranges.map(range => {\n        if (charIndex >= range.start && charIndex <= range.end) {\n          return (arrOverlap = [...arrOverlap, range.id]);\n        }\n\n        return arrOverlap;\n      });\n    }\n\n    return (\n      <EmojiNode\n        text={this.props.text}\n        id={this.props.id}\n        overlap={arrOverlap}\n        range={range}\n        key={`${this.props.id}-emoji-${charIndex}`}\n        charIndex={charIndex}\n        highlightStyle={this.props.highlightStyle}\n      />\n    );\n  }\n\n  getUrlNode(charIndex, range, url) {\n    let arrOverlap = [];\n\n    if (this.props.ranges) {\n      this.props.ranges.map(range => {\n        if (charIndex >= range.start && charIndex <= range.end) {\n          return (arrOverlap = [...arrOverlap, range.id]);\n        }\n\n        return arrOverlap;\n      });\n    }\n\n    return (\n      <UrlNode\n        url={url}\n        id={this.props.id}\n        overlap={arrOverlap}\n        range={range}\n        key={`${this.props.id}-url-${charIndex}`}\n        charIndex={charIndex}\n        highlightStyle={this.props.highlightStyle}\n      />\n    );\n  }\n\n  mouseEvent() {\n    if (!this.props.enabled) {\n      return false;\n    }\n\n    let text = \"\";\n\n    if (window.getSelection) {\n      /**\n       * Get highlited text\n       * Tip: with helper elements (hints)\n       */\n      // text = window.getSelection().toString();\n\n      if (window.getSelection().type === \"None\") return;\n\n      /**\n       * Create clone range\n       */\n      let cloneCont = window\n        .getSelection()\n        .getRangeAt(0)\n        .cloneRange();\n\n      /**\n       * The Range.cloneContents() returns a DocumentFragment copying the objects of type Node included in the Range.\n       */\n      let selectionContents = cloneCont.cloneContents();\n      /**\n       * Create virtual div with text\n       */\n      let virtualDiv = document.createElement(\"div\");\n\n      virtualDiv.appendChild(selectionContents);\n\n      let elementsWithSup = virtualDiv.getElementsByTagName(\"sup\");\n\n      if (elementsWithSup.length > 0) {\n        for (let i = 0; i < elementsWithSup.length; i++) {\n          elementsWithSup[i].innerText = \"\";\n        }\n        text = virtualDiv.innerText;\n      } else {\n        text = virtualDiv.innerText;\n      }\n    } else if (document.selection && document.selection.type !== \"Control\") {\n      text = document.selection.createRange().text;\n    }\n\n    if (!text || !text.length) return false;\n\n    const range = window.getSelection().getRangeAt(0);\n\n    /**\n     * Check for hint\n     */\n    if (range.startContainer.parentNode.dataset.hint || range.endContainer.parentNode.dataset.hint) return;\n\n    /**\n     * Start position of selected item\n     */\n    const startContainerPosition = parseInt(range.startContainer.parentNode.dataset.position);\n    /**\n     * End position of selected item\n     */\n    const endContainerPosition = parseInt(range.endContainer.parentNode.dataset.position);\n\n    let startHL = startContainerPosition < endContainerPosition ? startContainerPosition : endContainerPosition;\n    let endHL = startContainerPosition < endContainerPosition ? endContainerPosition : startContainerPosition;\n\n    const rangeObj = new Range(startHL, endHL, text, {\n      ...this.props,\n      ranges: undefined,\n    });\n\n    this.props.onTextHighlighted(rangeObj);\n  }\n\n  /**\n   *\n   * @param {*} event\n   */\n  onMouseUp(event) {\n    this.mouseEvent.bind(this)();\n\n  }\n\n  onMouseDown(event) {\n    // console.log(event)\n  }\n\n  onMouseEnter(event) {\n    // console.log(event)\n  }\n\n  /**\n   * Double click on text\n   * @param {*} event\n   */\n  onDoubleClick(event) {\n    // WARN\n    // event.stopPropagation();\n    // this.doucleckicked = true;\n    // this.mouseEvent.bind(this)();\n  }\n\n  /**\n   * @param {object} letterGroup All marked sections of text\n   * @param {object} range Range of marked section\n   * @param {number} textCharIndex The last number of selection\n   * @param {function} onMouseOverHighlightedWord\n   */\n  rangeRenderer(letterGroup, range, textCharIndex, onMouseOverHighlightedWord) {\n    if (this.props.rangeRenderer) {\n      return this.props.rangeRenderer(letterGroup, range, textCharIndex, onMouseOverHighlightedWord);\n    }\n\n    return letterGroup;\n  }\n\n  getNode(i, range, text, url, isEmoji) {\n    if (url.length) {\n      return this.getUrlNode(i, range, url);\n    } else if (isEmoji) {\n      return this.getEmojiNode(i, range);\n    }\n\n    return this.getLetterNode(i, range);\n  }\n\n  getRanges() {\n    /**\n     * Text with nodes\n     */\n    const newText = [];\n\n    let lastRange;\n\n    /**\n     * For all the characters on the text\n     */\n    for (let textCharIndex = 0; textCharIndex < this.props.text.length; textCharIndex++) {\n      /**\n       * Get range text\n       */\n      const range = this.getRange(textCharIndex);\n\n      /**\n       * Check characters for URL\n       */\n      const url = Utils.Checkers.getUrl(textCharIndex, this.props.text);\n\n      /**\n       * Check characters for emoji\n       */\n      const isEmoji = emojiRegex().test(this.props.text[textCharIndex] + this.props.text[textCharIndex + 1]);\n\n      /**\n       * Get the current character node\n       */\n      const node = this.getNode(textCharIndex, range, this.props.text, url, isEmoji);\n\n      /**\n       * If the next node is an url one, we fast forward to the end of it\n       */\n      if (url.length) {\n        textCharIndex += url.length - 1;\n      } else if (isEmoji) {\n        /**\n         * Because an emoji is composed of 2 chars\n         */\n        textCharIndex++;\n      }\n\n      if (!range) {\n        newText.push(node);\n        continue;\n      }\n\n      /**\n       * If the char is in range\n       */\n      lastRange = range;\n\n      // console.log(this.props.text[lastRange.start], this.props.text[lastRange.end])\n\n      /**\n       * We put the first range node on the array\n       */\n      const letterGroup = [node];\n\n      /**\n       * For all the characters in the highlighted range\n       */\n      let rangeCharIndex = textCharIndex + 1;\n\n      // if (rangeCharIndex >= parseInt(range.start) && rangeCharIndex <= parseInt(range.end)) {\n      //   console.log(this.props.text[parseInt(range.end)])\n      // }\n      // console.log(textCharIndex, range.start, range.end)\n\n      for (; rangeCharIndex < parseInt(range.end) + 1; rangeCharIndex++) {\n        /**\n         * Emoji handler\n         */\n        const isEmoji = emojiRegex().test(`${this.props.text[rangeCharIndex]}${this.props.text[rangeCharIndex + 1]}`);\n\n        if (isEmoji) {\n          letterGroup.push(this.getEmojiNode(rangeCharIndex, range));\n          // Because an emoji is composed of 2 chars\n          rangeCharIndex++;\n        } else {\n          letterGroup.push(this.getLetterNode(rangeCharIndex, range));\n        }\n\n        textCharIndex = rangeCharIndex;\n      }\n\n      newText.push(this.rangeRenderer(letterGroup, range, textCharIndex, this.onMouseOverHighlightedWord.bind(this)));\n    }\n\n    if (lastRange) {\n      // Callback function\n      this.onMouseOverHighlightedWord(lastRange, true);\n    }\n\n    return newText;\n  }\n\n  render() {\n    const newText = this.getRanges();\n\n    return (\n      <div\n        className={styles.block}\n        style={this.props.style}\n        onMouseUp={this.onMouseUp.bind(this)}\n        onMouseDown={this.onMouseDown.bind(this)}\n        onMouseEnter={this.onMouseEnter.bind(this)}\n        onDoubleClick={this.onDoubleClick.bind(this)}\n      >\n        {newText}\n      </div>\n    );\n  }\n}\n\nexport default observer(TextHighlight);\n","import React from \"react\";\nimport { observer, inject } from \"mobx-react\";\nimport { types, getParentOfType, getRoot } from \"mobx-state-tree\";\n\nimport { LabelsModel } from \"../control/Labels\";\nimport { RatingModel } from \"../control/Rating\";\nimport Registry from \"../../core/Registry\";\nimport { guidGenerator } from \"../../core/Helpers\";\nimport { TextModel } from \"./Text\";\nimport RegionsMixin from \"../mixins/Regions\";\nimport NormalizationMixin from \"../mixins/Normalization\";\nimport Hint from \"../../components/Hint/Hint\";\nimport Utils from \"../../utils\";\n\nimport styles from \"./TextRegion/TextRegion.module.scss\";\n\nconst Model = types\n  .model(\"TextRegionModel\", {\n    id: types.optional(types.identifier, guidGenerator),\n    pid: types.optional(types.string, guidGenerator),\n    type: \"textrange\",\n    start: types.integer,\n    end: types.integer,\n    text: types.string,\n    states: types.maybeNull(types.array(types.union(LabelsModel, RatingModel))),\n  })\n  .views(self => ({\n    get parent() {\n      return getParentOfType(self, TextModel);\n    },\n\n    get completion() {\n      return getRoot(self).completionStore.selected;\n    },\n  }))\n  .actions(self => ({\n    highlightStates() {},\n\n    /**\n     *\n     */\n    toStateJSON() {\n      const parent = self.parent;\n      const buildTree = obj => {\n        const tree = {\n          id: self.pid,\n          from_name: obj.name,\n          to_name: parent.name,\n          source: parent.value,\n          type: \"region\",\n          // text: parent.text,\n          value: {\n            start: self.start,\n            end: self.end,\n            text: self.text,\n          },\n        };\n\n        if (self.normalization) tree[\"normalization\"] = self.normalization;\n\n        return tree;\n      };\n\n      if (self.states && self.states.length) {\n        return self.states.map(s => {\n          const tree = buildTree(s);\n          // in case of labels it's gonna be, labels: [\"label1\", \"label2\"]\n          tree[\"value\"][s.type] = s.getSelectedNames();\n          tree[\"type\"] = s.type;\n\n          return tree;\n        });\n      } else {\n        return buildTree(parent);\n      }\n    },\n  }));\n\nconst TextRegionModel = types.compose(\n  \"TextRegionModel\",\n  RegionsMixin,\n  NormalizationMixin,\n  Model,\n);\n\n/**\n * Region state hint\n * @param {*} props\n */\nconst RegionState = props => {\n  const localState = props.state;\n\n  /**\n   * Get name of label\n   */\n  const selectedString = localState.getSelectedString();\n  const selectedColor = Utils.Colors.convertToRGBA(localState.getSelectedColor(), 0.3);\n  let style = {\n    background: selectedColor,\n  };\n\n  if (props.style) style = { ...style, outline: props.style.outline };\n\n  return (\n    <Hint className={styles.state} style={style}>\n      <span data-hint={true}>&nbsp;[{selectedString}]</span>\n    </Hint>\n  );\n};\n\nconst HtxTextRegionView = ({ store, item, letterGroup, range, textCharIndex, onMouseOverHighlightedWord }) => {\n  /**\n   * Get color of label\n   */\n  let labelColor = \"rgba(0, 0, 255, 0.1)\";\n\n  if (range.states) {\n    labelColor = range.states.map(s => {\n      return s.getSelectedColor();\n    });\n  }\n\n  /**\n   * TODO\n   * Update function to all formats\n   */\n  if (labelColor.length !== 0) {\n    labelColor = Utils.Colors.convertToRGBA(labelColor[0], 0.3);\n  }\n\n  let markStyle = {\n    padding: \"2px 0px\",\n    position: \"relative\",\n    borderRadius: \"2px\",\n    cursor: store.completionStore.selected.relationMode ? \"crosshair\" : \"pointer\",\n  };\n\n  let regionStates = [];\n\n  if ((range.states && range.states.length) > 0) {\n    range.states.map(state => {\n      regionStates.push(\n        <RegionState\n          key={range.id}\n          state={state}\n          bg={labelColor}\n          hover={store.completionStore.selected.relationMode ? true : false}\n          selected={range.selected}\n          style={range.highlighted ? { outline: \"2px solid red\" } : null}\n        />,\n      );\n    });\n  }\n\n  /**\n   * Without label\n   */\n  if (!regionStates.length) {\n    markStyle = {\n      ...markStyle,\n      background: \"rgba(0, 0, 255, 0.1)\",\n    };\n  }\n\n  return (\n    <span\n      style={markStyle}\n      onClick={range.onClickRegion}\n      onMouseOver={() => {\n        if (store.completionStore.selected.relationMode) {\n          range.setHighlight(true);\n        }\n      }}\n      onMouseOut={() => {\n        if (store.completionStore.selected.relationMode) {\n          range.setHighlight(false);\n        }\n      }}\n    >\n      {letterGroup}\n      {regionStates}\n    </span>\n  );\n};\n\nconst HtxTextRegion = inject(\"store\")(observer(HtxTextRegionView));\n\nRegistry.addTag(\"textrange\", TextRegionModel, HtxTextRegion);\n\nexport { TextRegionModel, HtxTextRegion };\n","import React, { Component } from \"react\";\nimport { observer, inject } from \"mobx-react\";\nimport { types, getType, getRoot } from \"mobx-state-tree\";\n\nimport { cloneNode } from \"../../core/Helpers\";\nimport Registry from \"../../core/Registry\";\nimport { guidGenerator, restoreNewsnapshot } from \"../../core/Helpers\";\nimport TextHighlight from \"../../components/TextHighlight/TextHighlight\";\nimport { runTemplate } from \"../../core/Template\";\nimport { TextRegionModel, HtxTextRegion } from \"./TextRegion\";\n\n/**\n * Text tag shows a text that can be labeled\n * @example\n * <Text name=\"text-1\" value=\"$text\"></Text>\n * @name Text\n * @param {string} name of the element\n * @param {string} value of the element\n * @param {boolean} selelectWithoutLabel controls if text can be selected without any labels selected\n */\nconst TagAttrs = types.model(\"TextModel\", {\n  name: types.maybeNull(types.string),\n  // text: types.maybeNull(types.optional(types.string, \"Please set \\\"value\\\" attribute of Text\")),\n  value: types.maybeNull(types.string),\n  selelectwithoutlabel: types.optional(types.string, \"false\"),\n\n  hidden: types.optional(types.enumeration([\"true\", \"false\"]), \"false\"),\n  /**\n   * If we allow selecting parts of words of we select whole word only\n   */\n  adjustselection: types.optional(types.string, \"true\"),\n  selectionenabled: types.optional(types.string, \"true\"),\n});\n\nconst Model = types\n  .model(\"TextModel\", {\n    id: types.optional(types.identifier, guidGenerator),\n    type: \"text\",\n    regions: types.array(TextRegionModel),\n\n    _value: types.optional(types.string, \"\"),\n  })\n  .views(self => ({\n    get hasStates() {\n      const states = self.states();\n      return states && states.length > 0;\n    },\n\n    get completion() {\n      return getRoot(self).completionStore.selected;\n    },\n\n    states() {\n      return self.completion.toNames.get(self.name);\n    },\n\n    activeStates() {\n      const states = self.states();\n      return states\n        ? states.filter(s => s.isSelected && (getType(s).name === \"LabelsModel\" || getType(s).name === \"RatingModel\"))\n        : null;\n    },\n  }))\n  .actions(self => ({\n    remove() {\n      // if (self.generated) {\n      //     const m = Registry.getModelByTag('textarea');\n      //     const ta = getParentOfType(self, m);\n      //     ta.deleteText(self);\n      // }\n    },\n\n    findRegion(start, end) {\n      const immutableRange = self.regions.find(r => r.start === start && r.end === end);\n      return immutableRange;\n    },\n\n    updateValue(store) {\n      self._value = runTemplate(self.value, store.task.dataObj);\n    },\n\n    _addRegion(params) {\n      const r = TextRegionModel.create(params);\n\n      self.regions.push(r);\n      self.completion.addRegion(r);\n\n      return r;\n    },\n\n    addRegion(range) {\n      const states = self.activeStates();\n      const clonedStates = states\n        ? states.map(s => {\n            return cloneNode(s);\n          })\n        : null;\n\n      /**\n       * Selelect without label\n       * Default: false\n       */\n      if (self.selelectwithoutlabel === \"false\" && !clonedStates.length) return null;\n\n      const r = self._addRegion({\n        start: range.start,\n        end: range.end,\n        text: range.text,\n        states: clonedStates, // tl.cloneActiveStates()\n      });\n\n      states &&\n        states.forEach(s => {\n          return s.unselectAll();\n        });\n\n      return r;\n    },\n\n    /**\n     * Return JSON\n     */\n    toStateJSON() {\n      const objectsToReturn = self.regions.map(r => r.toStateJSON());\n      return objectsToReturn;\n    },\n\n    /**\n     *\n     * @param {*} obj\n     * @param {*} fromModel\n     */\n    fromStateJSON(obj, fromModel) {\n      let r;\n\n      const tree = {\n        pid: obj.id,\n        start: obj.value.start,\n        end: obj.value.end,\n        text: obj.value.text,\n        normalization: obj.normalization,\n      };\n\n      if (fromModel.type === \"choices\") {\n        self.completion.names.get(obj.from_name).fromStateJSON(obj);\n        return;\n      }\n\n      if (obj.from_name === obj.to_name) {\n        r = self._addRegion(tree);\n      } else {\n        const region = self.findRegion(obj.value.start, obj.value.end);\n        const m = restoreNewsnapshot(fromModel);\n\n        // update state\n        m.fromStateJSON(obj);\n\n        if (!region) {\n          tree.states = [m];\n          r = self._addRegion(tree);\n        } else {\n          region.states.push(m);\n        }\n      }\n\n      return r;\n    },\n  }));\n\nconst TextModel = types.compose(\n  \"TextModel\",\n  TagAttrs,\n  Model,\n);\n\nclass HtxTextView extends Component {\n  renderRegion(letterGroup, range, textCharIndex, onMouseOverHighlightedWord) {\n    return (\n      <HtxTextRegion\n        key={range.id}\n        store={this.props.store}\n        item={this.props.item}\n        letterGroup={letterGroup}\n        range={range}\n        selected={range.selected}\n        textCharIndex={textCharIndex}\n        onMouseOverHighlightedWord={onMouseOverHighlightedWord}\n      />\n    );\n  }\n\n  render() {\n    const self = this;\n\n    const { item } = this.props;\n    const style = {};\n    if (item.hidden === \"true\") style[\"display\"] = \"none\";\n\n    return (\n      <div style={style}>\n        <TextHighlight\n          id={item.id}\n          key={item.id}\n          text={item._value}\n          enabled={item.selectionenabled === \"true\" ? true : false}\n          ranges={item.regions}\n          adjustSelection={item.adjustselection}\n          rangeRenderer={self.renderRegion.bind(this)}\n          onTextHighlighted={range => {\n            item.addRegion(range);\n          }}\n        />\n      </div>\n    );\n  }\n}\n\nconst HtxText = inject(\"store\")(observer(HtxTextView));\n\nRegistry.addTag(\"text\", TextModel, HtxText);\n\nexport { TextModel, HtxText };\n","import React, { Component } from \"react\";\n\nimport { observer, inject } from \"mobx-react\";\nimport { types, getParentOfType } from \"mobx-state-tree\";\nimport { Checkbox, Form } from \"semantic-ui-react\";\n\nimport { ChoicesModel } from \"./Choices\";\nimport Registry from \"../../core/Registry\";\nimport Tree from \"../../core/Tree\";\n\nimport ProcessAttrsMixin from \"../mixins/ProcessAttrs\";\nimport Hint from \"../../components/Hint/Hint\";\nimport ChoiceComponent from '../../components/Choice/Choice';\n\n/**\n * Choice tag represents a single choice\n * @example\n * <View>\n *   <Choices name=\"gender\" toName=\"txt-1\" choice=\"single\">\n *     <Choice alias=\"M\" value=\"Male\"></Choice>\n *     <Choice alias=\"F\" value=\"Female\"></Choice>\n *   </Choices>\n *   <Text name=\"txt-1\" value=\"John went to see Marry\"></Text>\n * </View>\n * @name Choice\n * @param {string} value label value\n * @param {boolean=} selected If this label should be preselected\n * @param {string=} alias label alias\n * @param {string=} hotkey hokey\n */\nconst TagAttrs = types.model({\n  selected: types.optional(types.boolean, false),\n  alias: types.maybeNull(types.string),\n  value: types.maybeNull(types.string),\n  hotkey: types.maybeNull(types.string),\n  style: types.maybeNull(types.string),\n});\n\nconst Model = types\n  .model({\n    type: \"choice\",\n    _value: types.optional(types.string, \"\"),\n  })\n  .views(self => ({\n    get isCheckbox() {\n      const choice = getParentOfType(self, ChoicesModel).choice;\n      return choice === \"multiple\" || choice === \"single\";\n    },\n\n    get name() {\n      return getParentOfType(self, ChoicesModel).name;\n    },\n  }))\n  .actions(self => ({\n    toggleSelected() {\n      const choice = getParentOfType(self, ChoicesModel);\n\n      choice.shouldBeUnselected && choice.unselectAll();\n\n      self.markSelected(!self.selected);\n    },\n\n    markSelected(val) {\n      self.selected = val;\n    },\n\n    onHotKey() {\n      return self.toggleSelected();\n    },\n  }));\n\nconst ChoiceModel = types.compose(\n  \"ChoiceModel\",\n  TagAttrs,\n  Model,\n  ProcessAttrsMixin,\n);\n\nconst HtxChoice = inject(\"store\")(\n  observer(({ item, store }) => {\n    let style = {};\n\n    if (item.style) style = Tree.cssConverter(item.style);\n\n    if (item.isCheckbox) {\n      const cStyle = Object.assign({ marginRight: \"1em\", display: \"flex\", alignItems: \"center\" }, style);\n\n      return (\n        <div style={cStyle}>\n          <Checkbox\n            name={item._value}\n            label={item._value}\n            onChange={ev => {\n              item.toggleSelected();\n            }}\n            checked={item.selected}\n          />\n          {store.settings.enableTooltips && store.settings.enableHotkeys && item.hotkey && <Hint>[{item.hotkey}]</Hint>}\n        </div>\n      );\n    } else {\n      const label = (\n        <label>\n          {item._value}\n          {store.settings.enableTooltips && store.settings.enableHotkeys && item.hotkey && <Hint>[{item.hotkey}]</Hint>}\n        </label>\n      );\n\n      return (\n        <div style={style}>\n          <Form.Radio\n            label={label}\n            value={item._value}\n            style={{ display: \"inline-block\" }}\n            checked={item.selected}\n            onChange={ev => {\n              item.toggleSelected();\n            }}\n          />\n        </div>\n      );\n    }\n    // return (\n    //   <ChoiceComponent\n    //     name={item._value}\n    //     onChange={ev => {\n    //       item.toggleSelected();\n    //     }}\n    //     hint={store.settings.enableTooltips && store.settings.enableHotkeys && item.hotkey && `${item.hotkey}`}\n    //     value={item._value}\n    //     checked={item.selected}\n    //   >\n    //     {item._value}\n    //   </ChoiceComponent>\n    // );\n  }),\n);\n\nRegistry.addTag(\"choice\", ChoiceModel, HtxChoice);\n\nexport { HtxChoice, ChoiceModel };\n","import React from \"react\";\nimport { PropTypes } from \"prop-types\";\nimport { Radio } from \"antd\";\n\nimport Hint from \"../Hint/Hint\";\n\n/**\n * Choice Component\n */\nexport default class ChoiceComponent extends React.Component {\n  render() {\n    let hint;\n\n    if (this.props.hint) {\n      hint = <Hint>[{this.props.hint}]</Hint>;\n    }\n\n    return (\n      <Radio\n        value={this.props.value}\n        onChange={this.props.onChange}\n        checked={this.props.checked}\n        defaultChecked={this.props.checked}\n      >\n        {this.props.children}\n        {hint}\n      </Radio>\n    );\n  }\n}\n\nChoiceComponent.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.string, PropTypes.element]).isRequired,\n  value: PropTypes.string.isRequired,\n  checked: PropTypes.bool,\n  defaultChecked: PropTypes.bool,\n  hint: PropTypes.string,\n  onChange: PropTypes.func,\n};\n","import React, { Component } from \"react\";\n\nimport { observer } from \"mobx-react\";\nimport { types, getRoot } from \"mobx-state-tree\";\n\nimport { guidGenerator } from \"../../core/Helpers\";\nimport Registry from \"../../core/Registry\";\nimport Tree from \"../../core/Tree\";\nimport Types from \"../../core/Types\";\n\nimport { ChoiceModel } from \"./Choice\";\nimport SelectedModelMixin from \"../mixins/SelectedModel\";\n\nimport { Form } from \"semantic-ui-react\";\n\n/**\n * Choices tag, create a group of choices, radio, or checkboxes. Shall\n * be used for a single or multi-class classification.\n * @example\n * <View>\n *   <Choices name=\"gender\" toName=\"txt-1\" choice=\"single-radio\">\n *     <Choice alias=\"M\" value=\"Male\"></Choice>\n *     <Choice alias=\"F\" value=\"Female\"></Choice>\n *   </Choices>\n *   <Text name=\"txt-1\" value=\"John went to see Marry\"></Text>\n * </View>\n * @name Choices\n * @param {string} name of the group\n * @param {string} toName name of the elements that you want to label\n * @param {single|single-radio|multiple=} [choice=single] single or multi-class\n * @param {boolean} showInline show items in the same visual line\n */\nconst TagAttrs = types.model({\n  name: types.string,\n  toname: types.maybeNull(types.string),\n  showinline: types.optional(types.string, \"false\"),\n  choice: types.optional(types.enumeration([\"single\", \"single-radio\", \"multiple\"]), \"single\"),\n});\n\nconst Model = types\n  .model({\n    id: types.optional(types.identifier, guidGenerator),\n    pid: types.optional(types.string, guidGenerator),\n    type: \"choices\",\n    children: Types.unionArray([\"choice\"]),\n  })\n  .views(self => ({\n    get shouldBeUnselected() {\n      return self.choice === \"single\" || self.choice === \"single-radio\";\n    },\n\n    get completion() {\n      return getRoot(self).completionStore.selected;\n    },\n\n    states() {\n      return self.completion.toNames.get(self.name);\n    },\n  }))\n  .actions(self => ({\n    toStateJSON() {\n      const names = self.getSelectedNames();\n\n      if (names && names.length) {\n        const toname = self.toname || self.name;\n        return {\n          id: self.pid,\n          from_name: self.name,\n          to_name: toname,\n          type: self.type,\n          value: {\n            choices: names,\n          },\n        };\n      }\n    },\n\n    fromStateJSON(obj, fromModel) {\n      self.unselectAll();\n\n      if (!obj.value.choices) throw new Error(\"No labels param\");\n\n      if (obj.id) self.pid = obj.id;\n\n      obj.value.choices.forEach(l => {\n        const choice = self.findLabel(l);\n        if (!choice) throw new Error(\"No label \" + l);\n\n        choice.markSelected(true);\n      });\n    },\n  }));\n\nconst ChoicesModel = types.compose(\n  \"ChoicesModel\",\n  TagAttrs,\n  Model,\n  SelectedModelMixin,\n);\n\nconst HtxChoices = observer(({ item }) => {\n  return (\n    <div style={{ marginTop: \"1em\" }}>\n      <Form>\n        {item.showinline === \"true\" ? (\n          <Form.Group inline>{Tree.renderChildren(item)}</Form.Group>\n        ) : (\n          <Form.Group grouped>{Tree.renderChildren(item)}</Form.Group>\n        )}\n      </Form>\n    </div>\n  );\n});\n\nRegistry.addTag(\"choices\", ChoicesModel, HtxChoices);\n\nexport { HtxChoices, ChoicesModel, TagAttrs };\n","import React, { createRef, Component, Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { observer, inject, Provider } from \"mobx-react\";\nimport { types, getParentOfType, getRoot } from \"mobx-state-tree\";\nimport { Message, Icon, Popup, Button, Dropdown, Input } from \"semantic-ui-react\";\n\nimport Types from \"../../core/Types\";\n\nimport Registry from \"../../core/Registry\";\nimport { guidGenerator, restoreNewsnapshot } from \"../../core/Helpers\";\nimport { TextAreaModel } from \"../control/TextArea\";\nimport RegionsMixin from \"../mixins/Regions\";\nimport NormalizationMixin from \"../mixins/Normalization\";\n\nconst Model = types\n  .model(\"TextAreaRegionModel\", {\n    id: types.optional(types.identifier, guidGenerator),\n    pid: types.optional(types.string, guidGenerator),\n\n    type: \"textarearegion\",\n\n    _value: types.string,\n    // states: types.array(types.union(LabelsModel, ChoicesModel)),\n  })\n  .views(self => ({\n    get parent() {\n      return getParentOfType(self, TextAreaModel);\n    },\n\n    get completion() {\n      return getRoot(self).completionStore.selected;\n    },\n  }));\n\nconst TextAreaRegionModel = types.compose(\n  \"TextAreaRegionModel\",\n  RegionsMixin,\n  NormalizationMixin,\n  Model,\n);\n\nconst HtxTextAreaRegionView = ({ store, item }) => {\n  let markStyle = {\n    cursor: store.completionStore.selected.relationMode ? \"crosshair\" : \"pointer\",\n  };\n\n  if (item.selected) {\n    markStyle = {\n      ...markStyle,\n      border: \"1px solid red\",\n    };\n  } else if (item.highlighted) {\n    markStyle = {\n      ...markStyle,\n      border: \"2px solid red\",\n    };\n  }\n\n  return (\n    <Message\n      className=\"warning\"\n      style={markStyle}\n      onClick={item.onClickRegion}\n      onMouseOver={() => {\n        if (store.completionStore.selected.relationMode) {\n          item.setHighlight(true);\n        }\n      }}\n      onMouseOut={() => {\n        /* range.setHighlight(false); */\n        if (store.completionStore.selected.relationMode) {\n          item.setHighlight(false);\n        }\n      }}\n    >\n      <p>{item._value}</p>\n    </Message>\n  );\n};\n\nconst HtxTextAreaRegion = inject(\"store\")(observer(HtxTextAreaRegionView));\n\nRegistry.addTag(\"textarearegion\", TextAreaRegionModel, HtxTextAreaRegion);\n\nexport { TextAreaRegionModel, HtxTextAreaRegion };\n","import React, { Component } from \"react\";\n\nimport { observer, inject, Provider } from \"mobx-react\";\nimport { types, destroy, getEnv, flow, getParentOfType, getRoot } from \"mobx-state-tree\";\nimport { Form, Message } from \"semantic-ui-react\";\n\nimport { renderChildren } from \"../../core/Tree\";\nimport { guidGenerator } from \"../../core/Helpers\";\n\nimport { HtxTextAreaRegion, TextAreaRegionModel } from \"../object/TextAreaRegion\";\n\nimport Registry from \"../../core/Registry\";\nimport ProcessAttrsMixin from \"../mixins/ProcessAttrs\";\n\n/**\n * TextArea tag shows the textarea for user input\n * @example\n * <View>\n *   <TextArea name=\"ta\"></TextArea>\n * </View>\n * @name TextArea\n * @param {string} name name of the element\n * @param {string} toName name of the element that you want to label if any\n * @param {string} value\n * @param {string=} label label text\n * @param {string=} placeholder placeholder text\n * @param {string=} maxSubmissions maximum number of submissions\n */\nconst TagAttrs = types.model({\n  allowSubmit: types.optional(types.string, \"true\"),\n  label: types.optional(types.string, \"\"),\n  name: types.maybeNull(types.string),\n  toname: types.maybeNull(types.string),\n  value: types.maybeNull(types.string),\n  placeholder: types.maybeNull(types.string),\n  maxsubmissions: types.maybeNull(types.string),\n});\n\nconst Model = types\n  .model({\n    id: types.optional(types.identifier, guidGenerator),\n    type: \"textarea\",\n    regions: types.array(TextAreaRegionModel),\n\n    _value: types.optional(types.string, \"\"),\n  })\n  .views(self => ({\n    get submissionsNum() {\n      return self.regions.length;\n    },\n\n    get completion() {\n      return getRoot(self).completionStore.selected;\n    },\n\n    get showSubmit() {\n      if (self.maxsubmissions) {\n        const num = parseInt(self.maxsubmissions);\n        return self.submissionsNum < num;\n      } else {\n        return true;\n      }\n    },\n  }))\n  .actions(self => ({\n    setValue(value) {\n      self._value = value;\n    },\n\n    addText(text, pid) {\n      const r = TextAreaRegionModel.create({\n        pid: pid,\n        _value: text,\n      });\n\n      self.regions.push(r);\n      self.completion.addRegion(r);\n\n      return r;\n    },\n\n    beforeSend() {\n      if (self._value && self._value.length) {\n        self.addText(self._value);\n      }\n    },\n\n    deleteText(text) {\n      destroy(text);\n    },\n\n    toStateJSON() {\n      const toname = self.toname || self.name;\n\n      return [\n        self.regions.map(r => {\n          return {\n            id: r.pid,\n            from_name: self.name,\n            to_name: toname,\n            type: self.type,\n            value: {\n              text: r._value,\n            },\n          };\n        }),\n      ];\n    },\n\n    fromStateJSON(obj, fromModel) {\n      return self.addText(obj.value.text, obj.id);\n    },\n  }));\n\nconst TextAreaModel = types.compose(\n  \"TextAreaModel\",\n  TagAttrs,\n  Model,\n  ProcessAttrsMixin,\n);\n\nconst HtxTextArea = observer(({ item }) => {\n  return (\n    <div>\n      {item.regions.length > 0 && (\n        <div style={{ marginTop: \"1em\", marginBottom: \"1em\" }}>\n          {item.regions.map(t => (\n            <HtxTextAreaRegion item={t} />\n          ))}\n        </div>\n      )}\n\n      {item.showSubmit && (\n        <Form\n          onSubmit={ev => {\n            if (item.allowSubmit === \"true\") {\n              item.addText(item._value);\n              item.setValue(\"\");\n            }\n\n            ev.preventDefault();\n            return false;\n          }}\n        >\n          <Form.Input\n            value={item._value}\n            className=\"is-search\"\n            label={item.label}\n            placeholder={item.placeholder}\n            onChange={ev => {\n              const { value } = ev.target;\n              item.setValue(value);\n            }}\n          />\n        </Form>\n      )}\n    </div>\n  );\n});\n\nRegistry.addTag(\"textarea\", TextAreaModel, HtxTextArea);\n\nexport { TextAreaModel, HtxTextArea };\n","import React from \"react\";\n\nimport Registry from \"../../core/Registry\";\nimport { types } from \"mobx-state-tree\";\nimport { observer, inject } from \"mobx-react\";\nimport { SortableContainer, SortableElement, sortableHandle } from \"react-sortable-hoc\";\nimport arrayMove from \"array-move\";\nimport { List } from \"semantic-ui-react\";\n\nimport { guidGenerator } from \"../../core/Helpers\";\nimport { variableNotation } from \"../../core/Template\";\n\nconst ListItemModel = types\n  .model({\n    backgroundColor: types.optional(types.string, \"transparent\"),\n    value: types.maybeNull(types.string),\n    _value: types.maybeNull(types.string),\n    selected: types.optional(types.boolean, false),\n    idx: types.number,\n  })\n  .views(self => ({}))\n  .actions(self => ({\n    setBG(val) {\n      self.backgroundColor = val;\n    },\n\n    setIdx(idx) {\n      self.idx = idx;\n    },\n\n    setSelected(val) {\n      self.selected = val;\n    },\n  }));\n\n/**\n * List element, used for ranking results. Great choice for recomendation systems.\n * @example\n * <View>\n *  <HyperText value=\"$markup\"></HyperText>\n *  <List name=\"ranker\" value=\"$replies\" elementValue=\"$text\" elementTag=\"Text\" ranked=\"true\" sortedHighlightColor=\"#fcfff5\"></List>\n * </View>\n * @name List\n * @param {string} elementValue lookup key for child object\n * @param {Text|Image|Audio} elementTag element used to render children\n * @param {string} value list value\n * @param {string} name of group\n * @param {string=} sortedHighlightColor color\n * @param {string=} axis axis used for drag-n-drop\n * @param {string=} lockAxis lock axis\n */\nconst TagAttrs = types.model({\n  axis: types.optional(types.string, \"y\"),\n  lockaxis: types.maybeNull(types.string),\n\n  elementvalue: types.maybeNull(types.string),\n  elementtag: types.optional(types.string, \"Text\"),\n  // ranked: types.optional(types.string, \"true\"),\n  // sortable: types.optional(types.string, \"true\"),\n\n  sortedhighlightcolor: types.maybeNull(types.string),\n\n  name: types.maybeNull(types.string),\n  value: types.maybeNull(types.string),\n});\n\nconst Model = types\n  .model({\n    id: types.optional(types.identifier, guidGenerator),\n    type: \"list\",\n    update: types.optional(types.number, 1),\n\n    regions: types.array(ListItemModel),\n    // update: types.optional(types.boolean, false)\n  })\n  .views(self => ({}))\n  .actions(self => ({\n    setUpdate() {\n      self.update = self.update + 1;\n    },\n\n    addRegion(vals, idx) {\n      const reg = ListItemModel.create({\n        value: self.elementvalue,\n        idx: idx,\n        _value: variableNotation(self.elementvalue, vals[idx]),\n      });\n\n      self.regions.push(reg);\n    },\n\n    updateValue(store) {\n      const val = variableNotation(self.value, store.task.dataObj);\n\n      // in case we're in expert mode it will call updateValue\n      // on each new task loaded, therefore we need to remove\n      // previously loaded regions here\n      self.regions = [];\n      val.forEach((v, idx) => self.addRegion(val, idx));\n\n      val.forEach((v, idx) => {\n        v[\"_orig_idx\"] = idx;\n      });\n\n      self._value = val;\n      self.setUpdate();\n    },\n\n    moveItems({ oldIndex, newIndex }) {\n      if (oldIndex === newIndex) return;\n\n      if (self.sortedhighlightcolor) {\n        self.regions[oldIndex].setBG(self.sortedhighlightcolor);\n      }\n\n      self.regions[oldIndex].setSelected(true);\n\n      if (self._value) self._value = arrayMove(self._value, oldIndex, newIndex);\n\n      self.regions = arrayMove(self.regions, oldIndex, newIndex);\n      self.setUpdate();\n    },\n\n    toStateJSON() {\n      const map = {};\n\n      self._value.forEach((v, idx) => {\n        map[self.regions[idx].idx] = 1 / (1 + idx);\n      });\n\n      const ranked = Object.keys(map)\n        .sort((a, b) => a - b)\n        .map(function(v) {\n          return map[v];\n        });\n\n      const selected = [];\n      for (let i = 0; i < Object.keys(map).length; i++) {\n        selected[self.regions[i].idx] = self.regions[i].selected ? 1 : 0;\n      }\n\n      return {\n        from_name: self.name,\n        to_name: self.name,\n        value: {\n          weights: ranked,\n          selected: selected,\n        },\n      };\n    },\n\n    fromStateJSON(obj, fromModel) {\n      const ranked = [];\n      const regions = [];\n      const item_weight = {};\n\n      obj.value.weights.forEach((v, idx) => {\n        if (item_weight[v]) {\n          item_weight[v].push(idx);\n        } else {\n          item_weight[v] = [idx];\n        }\n      });\n\n      Object.keys(item_weight)\n        .sort((a, b) => b - a)\n        .forEach(v => {\n          const idxes = item_weight[v];\n          idxes.forEach(idx => {\n            regions.push(self.regions[idx]);\n            ranked.push(self._value[idx]);\n          });\n        });\n\n      regions.forEach((r, idx) => r.setIdx(idx));\n\n      self._value = ranked;\n      self.regions = regions;\n\n      // self.regions = ranked;\n      self.setUpdate();\n    },\n  }));\n\nconst ListModel = types.compose(\n  \"ListModel\",\n  TagAttrs,\n  Model,\n);\n\nconst DragHandle = sortableHandle(() => <div className=\"drag-handle\"></div>);\n\nfunction isMobileDevice() {\n  try {\n    return typeof window.orientation !== \"undefined\" || navigator.userAgent.indexOf(\"IEMobile\") !== -1;\n  } catch (e) {\n    return false;\n  }\n}\n\nconst SortableText = SortableElement(({ item, value }) => {\n  let classNames;\n  if (isMobileDevice) {\n    classNames = \"noselect\";\n  }\n\n  const map = {\n    text: v => <span className={classNames}>{v._value}</span>,\n    image: v => <img src={v._value} alt=\"image\" />,\n    audio: v => <audio src={v._value} />,\n  };\n\n  return (\n    <div\n      style={{\n        padding: \"1em\",\n        userSelect: \"none\",\n        display: \"flex\",\n        alignItems: \"center\",\n        background: value.selected ? item.sortedhighlightcolor : \"transparent\",\n      }}\n      className={classNames}\n      onClick={ev => {\n        if (value.selected) {\n          value.setSelected(false);\n          item.setUpdate();\n        } else {\n          value.setSelected(true);\n          item.setUpdate();\n        }\n        ev.preventDefault();\n        return false;\n      }}\n    >\n      <DragHandle />\n      {map[item.elementtag.toLowerCase()](value)}\n    </div>\n  );\n});\n\nconst SortableList = SortableContainer(({ item, items }) => {\n  return (\n    <List celled>\n      {items.map((value, index) => (\n        <SortableText\n          key={`item-${index}`}\n          index={index}\n          value={value}\n          color={value.backgroundColor}\n          item={item}\n          onClick={ev => {}}\n        />\n      ))}\n    </List>\n  );\n});\n\nconst HtxListView = observer(({ store, item }) => {\n  const props = {};\n  if (isMobileDevice()) {\n    props[\"pressDelay\"] = 100;\n  } else {\n    props[\"distance\"] = 7;\n  }\n\n  return (\n    <div>\n      <SortableList update={item.update} item={item} items={item.regions} onSortEnd={item.moveItems} {...props} />\n    </div>\n  );\n});\n\nconst HtxList = inject(\"store\")(observer(HtxListView));\n\nRegistry.addTag(\"list\", ListModel, HtxList);\n\nexport { ListModel, HtxList };\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport Registry from \"../../core/Registry\";\nimport { types, getParentOfType, destroy, getRoot, getParent } from \"mobx-state-tree\";\nimport { observer, inject, Provider } from \"mobx-react\";\nimport { SortableContainer, SortableElement, sortableHandle } from \"react-sortable-hoc\";\nimport arrayMove from \"array-move\";\nimport { List } from \"semantic-ui-react\";\n\nimport { guidGenerator } from \"../../core/Helpers\";\nimport { runTemplate, variableNotation } from \"../../core/Template\";\nimport ProcessAttrsMixin from \"../mixins/ProcessAttrs\";\n\nconst RankerItemModel = types\n  .model({\n    backgroundColor: types.optional(types.string, \"transparent\"),\n    value: types.maybeNull(types.string),\n    _value: types.maybeNull(types.string),\n    selected: types.optional(types.boolean, false),\n    idx: types.number,\n  })\n  .views(self => ({}))\n  .actions(self => ({\n    setBG(val) {\n      self.backgroundColor = val;\n    },\n\n    setIdx(idx) {\n      self.idx = idx;\n    },\n\n    setSelected(val) {\n      self.selected = val;\n    },\n  }));\n\n/**\n * Ranker tag, used to ranking models\n * @example\n * <View>\n *   <Ranker name=\"ranker\" value=\"$items\"></Ranker>\n * </View>\n * @name Ranker\n * @param {string} name of group\n * @param {y|x=} [axis=y] axis direction\n * @param {string} sortedHighlightColor sorted color\n */\nconst TagAttrs = types.model({\n  axis: types.optional(types.string, \"y\"),\n  lockaxis: types.maybeNull(types.string),\n\n  // elementvalue: types.maybeNull(types.string),\n  elementtag: types.optional(types.string, \"Text\"),\n  ranked: types.optional(types.string, \"true\"),\n  sortable: types.optional(types.string, \"true\"),\n\n  sortedhighlightcolor: types.maybeNull(types.string),\n\n  name: types.maybeNull(types.string),\n  value: types.maybeNull(types.string),\n});\n\nconst Model = types\n  .model({\n    id: types.optional(types.identifier, guidGenerator),\n    type: \"ranker\",\n    update: types.optional(types.number, 1),\n\n    regions: types.array(RankerItemModel),\n    // update: types.optional(types.boolean, false)\n  })\n  .views(self => ({}))\n  .actions(self => ({\n    setUpdate() {\n      self.update = self.update + 1;\n    },\n\n    _addRegion(val, idx) {\n      const reg = RankerItemModel.create({\n        value: val,\n        idx: idx,\n        _value: val,\n      });\n\n      self.regions.push(reg);\n    },\n\n    moveItems({ oldIndex, newIndex }) {\n      if (oldIndex == newIndex) return;\n\n      if (self.sortedhighlightcolor) {\n        self.regions[oldIndex].setBG(self.sortedhighlightcolor);\n      }\n\n      self.regions[oldIndex].setSelected(true);\n\n      if (self._value) self._value = arrayMove(self._value, oldIndex, newIndex);\n\n      self.regions = arrayMove(self.regions, oldIndex, newIndex);\n      self.setUpdate();\n    },\n\n    toStateJSON() {\n      return {\n        from_name: self.name,\n        to_name: self.name,\n        value: {\n          // weights: ranked,\n          items: self.regions.map(r => r.value),\n          selected: self.regions.map(r => r.selected),\n        },\n      };\n    },\n\n    fromStateJSON(obj, fromModel) {\n      obj.value.items.forEach((v, idx) => {\n        self._addRegion(v, idx);\n      });\n\n      self.setUpdate();\n    },\n  }));\n\nconst RankerModel = types.compose(\n  \"RankerModel\",\n  TagAttrs,\n  Model,\n);\n\nconst DragHandle = sortableHandle(() => <div className=\"drag-handle\"></div>);\n\nfunction isMobileDevice() {\n  try {\n    return typeof window.orientation !== \"undefined\" || navigator.userAgent.indexOf(\"IEMobile\") !== -1;\n  } catch (e) {\n    return false;\n  }\n}\n\nconst SortableText = SortableElement(({ item, value }) => {\n  let classNames;\n  if (isMobileDevice) {\n    classNames = \"noselect\";\n  }\n\n  const map = {\n    text: v => <span className={classNames}>{v._value}</span>,\n    image: v => <img src={v._value} />,\n    audio: v => <audio src={v._value} />,\n  };\n\n  return (\n    <div\n      style={{\n        padding: \"1em\",\n        userSelect: \"none\",\n        display: \"flex\",\n        alignItems: \"center\",\n        background: value.selected ? item.sortedhighlightcolor : \"transparent\",\n      }}\n      className={classNames}\n      onClick={ev => {\n        if (value.selected) {\n          value.setSelected(false);\n          item.setUpdate();\n        } else {\n          value.setSelected(true);\n          item.setUpdate();\n        }\n        ev.preventDefault();\n        return false;\n      }}\n    >\n      <DragHandle />\n      {map[item.elementtag.toLowerCase()](value)}\n    </div>\n  );\n});\n\nconst SortableList = SortableContainer(({ item, items }) => {\n  return (\n    <List celled>\n      {items.map((value, index) => (\n        <SortableText\n          key={`item-${index}`}\n          index={index}\n          value={value}\n          color={value.backgroundColor}\n          item={item}\n          onClick={ev => {}}\n        />\n      ))}\n    </List>\n  );\n});\n\nconst HtxRankerView = observer(({ store, item }) => {\n  const props = {};\n  if (isMobileDevice()) {\n    props[\"pressDelay\"] = 100;\n  } else {\n    props[\"distance\"] = 7;\n  }\n\n  return (\n    <div>\n      <SortableList update={item.update} item={item} items={item.regions} onSortEnd={item.moveItems} {...props} />\n    </div>\n  );\n});\n\nconst HtxRanker = inject(\"store\")(observer(HtxRankerView));\n\nRegistry.addTag(\"ranker\", RankerModel, HtxRanker);\n\nexport { RankerModel, HtxRanker };\n","import React from \"react\";\nimport { PropTypes } from \"prop-types\";\n\nimport styles from \"./Segment.module.scss\";\n\n/**\n * Segment Component\n */\nexport default class Segment extends React.Component {\n  render() {\n    return <div className={styles.block}>{this.props.children}</div>;\n  }\n}\n\nSegment.propTypes = {\n  children: PropTypes.array.isRequired,\n};\n","/**\n * Libraries\n */\nimport React, { Component } from \"react\";\nimport parse5 from \"parse5\";\nimport { observer, inject, Provider } from \"mobx-react\";\nimport { types, getSnapshot } from \"mobx-state-tree\";\nimport { Result, Spin } from \"antd\";\n\n/**\n * Core\n */\nimport Registry from \"../../core/Registry\";\nimport Requests from \"../../core/Requests\";\nimport { guidGenerator } from \"../../core/Helpers\";\nimport Tree from \"../../core/Tree\";\n\n/**\n * Components\n */\nimport Completions from \"../Completions/Completions\";\nimport Controls from \"../Controls/Controls\";\nimport Panel from \"../Panel/Panel\";\nimport Settings from \"../Settings/Settings\";\nimport Debug from \"../Debug\";\nimport SideColumn from \"../SideColumn/SideColumn\";\n\n/**\n * Visual\n */\nimport { ViewModel } from \"../../interfaces/visual/View\";\nimport { TableModel } from \"../../interfaces/visual/Table\";\nimport { HeaderModel } from \"../../interfaces/visual/Header\";\nimport { HyperTextModel } from \"../../interfaces/visual/HyperText\";\nimport { DialogModel } from \"../../interfaces/visual/Dialog\";\n\n/**\n * Object\n */\nimport { AudioModel } from \"../../interfaces/object/Audio\";\nimport { AudioPlusModel } from \"../../interfaces/object/AudioPlus\";\nimport { ImageModel } from \"../../interfaces/object/Image\";\nimport { TextModel } from \"../../interfaces/object/Text\";\n\n/**\n * Control\n */\nimport { RectangleModel } from \"../../interfaces/control/Rectangle\";\nimport { PolygonModel } from \"../../interfaces/control/Polygon\";\nimport { RectangleLabelsModel } from \"../../interfaces/control/RectangleLabels\";\nimport { PolygonLabelsModel } from \"../../interfaces/control/PolygonLabels\";\nimport { ChoicesModel } from \"../../interfaces/control/Choices\";\nimport { TextAreaModel } from \"../../interfaces/control/TextArea\";\nimport { RatingModel } from \"../../interfaces/control/Rating\";\nimport { ListModel } from \"../../interfaces/control/List\";\nimport { RankerModel } from \"../../interfaces/control/Ranker\";\n\n/**\n * Components\n */\nimport Segment from \"../Segment/Segment\";\n\n/**\n * Styles\n */\nimport styles from \"./App.module.scss\";\n\n/**\n * App\n */\nconst App = inject(\"store\")(\n  observer(\n    class App extends Component {\n      renderSuccess() {\n        const { store } = this.props;\n\n        return <Result status=\"success\" title=\"Done!\" />;\n      }\n\n      renderNoCompletion() {\n        const { store } = this.props;\n\n        return <Result status=\"success\" title=\"No more completions\" />;\n      }\n\n      renderNothingToLabel() {\n        const { store } = this.props;\n\n        return <Result status=\"success\" title=\"No more data available for labeling\" />;\n      }\n\n      renderLoader() {\n        return <Result icon={<Spin size=\"large\" />} />;\n      }\n\n      render() {\n        const self = this;\n        const { store } = this.props;\n\n        if (store.isLoading) return this.renderLoader();\n\n        if (store.noTask) return this.renderNothingToLabel();\n\n        if (store.labeledSuccess) return this.renderSuccess();\n\n        if (!store.completionStore.currentCompletion) return this.renderNoCompletion();\n\n        const { root } = store.completionStore.currentCompletion;\n\n        return (\n          <div className={styles.editor}>\n            <Settings store={store} />\n            <Provider store={store}>\n              <div>\n                {store.hasInterface(\"panel\") && <Panel store={store} />}\n\n                {store.showingDescription && (\n                  <Segment>\n                    <div dangerouslySetInnerHTML={{ __html: store.description }} />\n                  </Segment>\n                )}\n\n                <div className={\"common-container\"}>\n                  <Segment>\n                    {Tree.renderItem(root)}\n                    {store.hasInterface(\"submit\") && <Controls />}\n                  </Segment>\n\n                  <div className={styles.menu}>\n                    {store.hasInterface(\"completions\") && <Completions store={store} />}\n\n                    {store.hasInterface(\"side-column\") && <SideColumn store={store} />}\n                  </div>\n                </div>\n              </div>\n            </Provider>\n          </div>\n        );\n      }\n    },\n  ),\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit http://bit.ly/CRA-PWA\",\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See http://bit.ly/CRA-PWA.\",\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (response.status === 404 || (contentType != null && contentType.indexOf(\"javascript\") === -1)) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\"No internet connection found. App is running in offline mode.\");\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { types, getParent } from \"mobx-state-tree\";\n\nimport Utilities from \"../utils\";\n\nconst TaskStore = types\n  .model(\"Task\", {\n    id: types.identifierNumber,\n    data: types.maybeNull(types.string),\n    project: types.number,\n  })\n  .views(self => ({\n    get app() {\n      return getParent(self);\n    },\n\n    /**\n     * Return JSON with task data\n     * @returns {object}\n     */\n    get dataObj() {\n      if (Utilities.Checkers.isStringJSON(self.data)) {\n        return JSON.parse(self.data);\n      } else {\n        return null;\n      }\n    },\n  }));\n\nexport default TaskStore;\n","import { types, resolvePath, getEnv, onSnapshot, getSnapshot, applySnapshot } from \"mobx-state-tree\";\nimport { IObservableArray } from \"mobx\";\n\nconst TimeTraveller = types\n  .model(\"TimeTraveller\", {\n    history: types.array(types.frozen()),\n    undoIdx: -1,\n    targetPath: \"\",\n\n    createdIdx: 1,\n\n    isFrozen: types.optional(types.boolean, false),\n    frozenIdx: -1,\n  })\n  .views(self => ({\n    get canUndo() {\n      // [TODO] since we initialize state a bit incorrectly we end up with 2 items in history\n      // before even any action takes place. To protect those items we keep them in history forever\n      return self.undoIdx > 1;\n    },\n    get canRedo() {\n      return self.undoIdx < self.history.length - 1;\n    },\n  }))\n  .actions(self => {\n    let targetStore;\n    let snapshotDisposer;\n    let skipNextUndoState = false;\n\n    return {\n      freeze() {\n        self.isFrozen = true;\n        skipNextUndoState = true;\n        self.frozenIdx = self.undoIdx;\n      },\n\n      addUndoState(ss) {\n        if (skipNextUndoState) {\n          // skip recording if this state was caused by undo / redo\n          skipNextUndoState = false;\n          return;\n        }\n        self.history.splice(self.undoIdx + 1);\n        self.history.push(ss);\n        self.undoIdx = self.history.length - 1;\n      },\n      afterCreate() {\n        targetStore = self.targetPath ? resolvePath(self, self.targetPath) : getEnv(self).targetStore;\n\n        if (!targetStore)\n          throw new Error(\n            \"Failed to find target store for TimeTraveller. Please provide `targetPath`  property, or a `targetStore` in the environment\",\n          );\n        // TODO: check if targetStore doesn't contain self\n        // if (contains(targetStore, self)) throw new Error(\"TimeTraveller shouldn't be recording itself. Please specify a sibling as taret, not some parent\")\n        // start listening to changes\n        snapshotDisposer = onSnapshot(targetStore, snapshot => this.addUndoState(snapshot));\n        // record an initial state if no known\n        if (self.history.length === 0) {\n          this.addUndoState(getSnapshot(targetStore));\n        }\n\n        self.createdIdx = self.undoIdx;\n      },\n      beforeDestroy() {\n        snapshotDisposer();\n      },\n      undo() {\n        if (self.isFrozen && self.frozenIdx <= self.undoIdx) return;\n\n        self.undoIdx--;\n        skipNextUndoState = true;\n        applySnapshot(targetStore, self.history[self.undoIdx]);\n      },\n      redo() {\n        self.undoIdx++;\n        skipNextUndoState = true;\n        applySnapshot(targetStore, self.history[self.undoIdx]);\n      },\n      set(idx) {\n        self.undoIdx = idx;\n        skipNextUndoState = true;\n        applySnapshot(targetStore, self.history[self.undoIdx]);\n      },\n      reset() {\n        self.undoIdx = self.createdIdx;\n        skipNextUndoState = true;\n        applySnapshot(targetStore, self.history[self.undoIdx]);\n      },\n    };\n  });\n\nexport default TimeTraveller;\n","import keymaster from \"keymaster\";\n\nlet _hotkeys_map = {};\n\n/**\n * Add key\n * @param {*} key\n * @param {*} func\n */\nfunction addKey(key, func) {\n  if (_hotkeys_map[key]) return;\n\n  _hotkeys_map[key] = true;\n  keymaster(key, \"main\", func);\n}\n\n/**\n * Unbund all hotkeys\n */\nfunction unbindAll() {\n  for (let key of Object.keys(_hotkeys_map)) keymaster.unbind(key);\n\n  _hotkeys_map = {};\n}\n\n/**\n * Set scope of hotkeys\n * @param {*} scope\n */\nfunction setScope(scope) {\n  keymaster.setScope(scope);\n}\n\n/**\n * Create combination\n */\nfunction makeComb() {\n  let prefix = null;\n  let st = \"1234567890qwertasdfgzxcvbyuiophjklnm\";\n  let combs = st.split(\"\");\n\n  for (var i = 0; i <= combs.length; i++) {\n    let comb;\n    if (prefix) comb = prefix + \"+\" + combs[i];\n    else comb = combs[i];\n\n    if (!_hotkeys_map.hasOwnProperty(comb)) return comb;\n  }\n\n  return null;\n}\n\nexport default { addKey, unbindAll, makeComb, setScope };\n","import { types, getParent, getEnv, flow, destroy, getMembers } from \"mobx-state-tree\";\n\nimport { guidGenerator } from \"../core/Helpers\";\nimport Types from \"../core/Types\";\n\nimport { TextRegionModel } from \"../interfaces/object/TextRegion\";\nimport { RectRegionModel } from \"../interfaces/object/RectRegion\";\nimport { AudioRegionModel } from \"../interfaces/object/AudioRegion\";\nimport { TextAreaRegionModel } from \"../interfaces/object/TextAreaRegion\";\nimport { PolygonRegionModel } from \"../interfaces/object/PolygonRegion\";\n\nconst Relation = types\n  .model(\"Relation\", {\n    node1: types.reference(\n      types.union(TextRegionModel, RectRegionModel, AudioRegionModel, TextAreaRegionModel, PolygonRegionModel),\n    ),\n    node2: types.reference(\n      types.union(TextRegionModel, RectRegionModel, AudioRegionModel, TextAreaRegionModel, PolygonRegionModel),\n    ),\n  })\n  .actions(self => ({\n    toggleHighlight() {\n      if (self.node1 == self.node2) {\n        self.node1.toggleHightlight();\n      } else {\n        self.node1.toggleHightlight();\n        self.node2.toggleHightlight();\n      }\n    },\n  }));\n\nexport default types\n  .model(\"RelationStore\", {\n    relations: types.array(Relation),\n  })\n  .actions(self => ({\n    findRelations(node1, node2) {\n      if (!node2) {\n        return self.relations.filter(rl => {\n          return rl.node1.id == node1.id || rl.node2.id == node1.id;\n        });\n      }\n\n      return self.relations.filter(rl => {\n        return rl.node1.id == node1.id && rl.node2.id == node2.id;\n      });\n    },\n\n    nodesRelated(node1, node2) {\n      return self.findRelations(node1, node2).length > 0;\n    },\n\n    addRelation(node1, node2) {\n      if (self.nodesRelated(node1, node2)) return;\n\n      const rl = Relation.create({\n        node1: node1,\n        node2: node2,\n      });\n\n      // self.relations.unshift(rl);\n      self.relations.push(rl);\n\n      return rl;\n    },\n\n    deleteRelation(rl) {\n      destroy(rl);\n    },\n\n    deleteNodeRelation(node) {\n      // lookup $node and delete it's relation\n      const rl = self.findRelations(node);\n      rl.length && rl.forEach(self.deleteRelation);\n    },\n\n    serializeCompletion() {\n      return self.relations.map(r => {\n        return {\n          from_id: r.node1.pid,\n          to_id: r.node2.pid,\n          type: \"relation\",\n        };\n      });\n    },\n\n    deserializeRelation(node1, node2) {\n      self.addRelation(node1, node2);\n    },\n  }));\n","import { types, getParent } from \"mobx-state-tree\";\n\nimport { TextRegionModel } from \"../interfaces/object/TextRegion\";\nimport { RectRegionModel } from \"../interfaces/object/RectRegion\";\nimport { PolygonRegionModel } from \"../interfaces/object/PolygonRegion\";\nimport { AudioRegionModel } from \"../interfaces/object/AudioRegion\";\nimport { TextAreaRegionModel } from \"../interfaces/object/TextAreaRegion\";\n\nexport default types\n  .model(\"RegionStore\", {\n    regions: types.array(\n      types.safeReference(\n        types.union(TextRegionModel, RectRegionModel, PolygonRegionModel, AudioRegionModel, TextAreaRegionModel),\n      ),\n    ),\n  })\n  .actions(self => ({\n    addRegion(region) {\n      self.regions.push(region);\n    },\n\n    findRegion(pid) {\n      return self.regions.find(r => r.pid === pid);\n    },\n\n    /**\n     * Delete region\n     * @param {obj} region\n     */\n    deleteRegion(region) {\n      const arr = self.regions;\n\n      for (let i = 0; i < arr.length; i++) {\n        if (arr[i] === region) {\n          arr.splice(i, 1);\n        }\n      }\n    },\n\n    unselectAll() {\n      self.regions.forEach(r => r.unselectRegion());\n      getParent(self).setHighlightedNode(null);\n    },\n\n    unhighlightAll() {\n      self.regions.forEach(r => r.setHighlight(false));\n    },\n  }));\n","import { types, getParent, getEnv, flow, destroy, detach, getMembers } from \"mobx-state-tree\";\n\nimport { guidGenerator } from \"../core/Helpers\";\nimport Types from \"../core/Types\";\n\nimport Registry from \"../core/Registry\";\nimport Tree from \"../core/Tree\";\nimport TimeTraveller from \"../core/TimeTraveller\";\nimport Hotkey from \"../core/Hotkey\";\n\nimport RelationStore from \"./RelationStore\";\nimport RegionStore from \"./RegionStore\";\nimport { RectangleModel } from \"../interfaces/control/Rectangle\";\n\nimport * as HtxObjectModel from \"../interfaces/object\";\n\nconst Completion = types\n  .model(\"Completion\", {\n    id: types.identifier,\n    pk: types.optional(types.integer, 1),\n    selected: types.optional(types.boolean, false),\n\n    createdDate: types.optional(types.string, new Date().toISOString()),\n    createdAgo: types.maybeNull(types.string),\n    createdBy: types.optional(types.string, \"Admin\"),\n\n    honeypot: types.optional(types.boolean, false),\n\n    root: Types.allModelsTypes(),\n    names: types.map(types.reference(Types.allModelsTypes())),\n    toNames: types.map(types.array(types.reference(Types.allModelsTypes()))),\n\n    history: types.optional(TimeTraveller, { targetPath: \"../root\" }),\n\n    dragMode: types.optional(types.boolean, false),\n\n    relationMode: types.optional(types.boolean, false),\n    relationStore: types.optional(RelationStore, {\n      relations: [],\n    }),\n\n    normalizationMode: types.optional(types.boolean, false),\n    // normalizationStore: types.optional(NormalizationStore, {\n    //     normalizations: []\n    // }),\n\n    regionStore: types.optional(RegionStore, {\n      regions: [],\n    }),\n\n    highlightedNode: types.maybeNull(\n      types.union(\n        types.safeReference(HtxObjectModel.TextRegionModel),\n        types.safeReference(HtxObjectModel.RectRegionModel),\n        types.safeReference(HtxObjectModel.AudioRegionModel),\n        types.safeReference(HtxObjectModel.TextAreaRegionModel),\n        types.safeReference(HtxObjectModel.PolygonRegionModel),\n        types.safeReference(RectangleModel),\n      ),\n    ),\n  })\n  .views(self => ({\n    get store() {\n      return getParent(self, 2);\n    },\n  }))\n  .actions(self => ({\n    reinitHistory() {\n      self.history = { targetPath: \"../root\" };\n    },\n    // send update to server\n    _updateServerState(state) {\n      let appStore = getParent(self, 3);\n      let url = \"/api/tasks/\" + appStore.task.id + \"/completions/\" + self.pk + \"/\";\n\n      getEnv(self).patch(url, JSON.stringify(state));\n    },\n\n    setHoneypot() {\n      self.honeypot = true;\n      self._updateServerState({ honeypot: self.honeypot });\n    },\n\n    setDragMode(val) {\n      self.dragMode = val;\n    },\n\n    setNormalizationMode(val) {\n      self.normalizationMode = val;\n    },\n\n    setHighlightedNode(node) {\n      self.highlightedNode = node;\n    },\n\n    startRelationMode(node1) {\n      self._relationObj = node1;\n      self.relationMode = true;\n    },\n\n    stopRelationMode() {\n      self._relationObj = null;\n      self.relationMode = false;\n\n      self.regionStore.unhighlightAll();\n    },\n\n    deleteAllRegions() {\n      self.regionStore.regions.forEach(r => r.deleteRegion());\n    },\n\n    addRegion(reg) {\n      self.regionStore.unselectAll();\n      self.regionStore.addRegion(reg);\n\n      if (self.relationMode) {\n        self.addRelation(reg);\n        self.stopRelationMode();\n      }\n    },\n\n    /**\n     * Add relation\n     * @param {*} reg\n     */\n    addRelation(reg) {\n      self.relationStore.addRelation(self._relationObj, reg);\n    },\n\n    /**\n     * Remove honeypot\n     */\n    removeHoneypot() {\n      self.honeypot = false;\n      self._updateServerState({ honeypot: self.honeypot });\n    },\n\n    traverseTree(cb) {\n      let visitNode;\n      visitNode = function(node) {\n        cb(node);\n\n        if (node.children) {\n          node.children.forEach(chld => visitNode(chld));\n        }\n      };\n\n      visitNode(self.root);\n    },\n\n    /**\n     *\n     */\n    beforeSend() {\n      self.traverseTree(node => {\n        if (node && node.beforeSend) {\n          node.beforeSend();\n        }\n      });\n\n      self.stopRelationMode();\n      self.regionStore.unselectAll();\n    },\n\n    /**\n     * Delete region\n     * @param {*} region\n     */\n    deleteRegion(region) {\n      destroy(region);\n    },\n\n    afterCreate() {\n      self.traverseTree(node => {\n        // create mapping from name to Model (by ref)\n        if (node && node.name && node.id) self.names.set(node.name, node.id);\n\n        if (node && node.toname && node.id) {\n          const val = self.toNames.get(node.toname);\n          if (val) {\n            val.push(node.id);\n          } else {\n            self.toNames.set(node.toname, [node.id]);\n          }\n        }\n      });\n\n      Hotkey.unbindAll();\n\n      // [TODO] we need to traverse this two times, fix\n      self.traverseTree(node => {\n        if (node && node.onHotKey && node.hotkey) Hotkey.addKey(node.hotkey, node.onHotKey);\n      });\n\n      self.traverseTree(node => {\n        if (node && node.onHotKey && !node.hotkey) {\n          const comb = Hotkey.makeComb();\n\n          if (!comb) return;\n\n          node.hotkey = comb;\n          Hotkey.addKey(node.hotkey, node.onHotKey);\n        }\n      });\n\n      Hotkey.setScope(\"main\");\n    },\n\n    serializeCompletion() {\n      const arr = [];\n\n      self.traverseTree(node => {\n        if (node.toStateJSON) {\n          const val = node.toStateJSON();\n\n          if (val) arr.push(val);\n        }\n      });\n\n      const relations = self.relationStore.serializeCompletion();\n      arr.push(relations);\n\n      const flatten = arr => {\n        return arr.reduce(function(flat, toFlatten) {\n          return flat.concat(Array.isArray(toFlatten) ? flatten(toFlatten) : toFlatten);\n        }, []);\n      };\n\n      return flatten(arr);\n    },\n\n    /**\n     * Deserialize completion of models\n     */\n    deserializeCompletion(json) {\n      json.forEach(obj => {\n        if (obj[\"type\"] !== \"relation\") {\n          const names = obj.to_name.split(\",\");\n          names.forEach(name => {\n            const toModel = self.names.get(name);\n            if (!toModel) throw new Error(\"No model found for \" + obj.to_name);\n\n            const fromModel = self.names.get(obj.from_name);\n            if (!fromModel) throw new Error(\"No model found for \" + obj.from_name);\n\n            toModel.fromStateJSON(obj, fromModel);\n          });\n        } else {\n          self.relationStore.deserializeRelation(\n            self.regionStore.findRegion(obj.from_id),\n            self.regionStore.findRegion(obj.to_id),\n          );\n        }\n      });\n    },\n  }));\n\nexport default types\n  .model(\"CompletionStore\", {\n    completions: types.array(Completion),\n    selected: types.maybeNull(types.reference(Completion)),\n  })\n  .views(self => ({\n    /**\n     * Get current completion\n     */\n    get currentCompletion() {\n      return self.selected && self.completions.find(c => c.id === self.selected.id);\n    },\n\n    /**\n     * Get parent\n     */\n    get store() {\n      return getParent(self);\n    },\n\n    /**\n     * Get only those that were saved\n     */\n    get savedCompletions() {\n      return self.completions.filter(c => !c.was_generated);\n    },\n  }))\n  .actions(self => {\n    function selectCompletion(id) {\n      self.completions.map(c => (c.selected = false));\n      const c = self.completions.find(c => c.id === id);\n\n      // [FIXME]\n      // if (self.selected && self.selected.id !== c.id)\n      //     c.history.reset();\n\n      c.selected = true;\n      self.selected = c;\n    }\n\n    /**\n     * Adding new completion\n     * @param {object} node\n     * @param {string} type\n     */\n    function addCompletion(node, type) {\n      const c = Completion.create(node);\n\n      if (self.store.task && type == \"initial\")\n        c.traverseTree(node => node.updateValue && node.updateValue(self.store));\n\n      self.completions.push(c);\n\n      return c;\n    }\n\n    const _deleteCompletion = flow(function* _deleteCompletion(pk) {\n      try {\n        const json = yield getEnv(self).remove(\"/api/tasks/\" + self.store.task.id + \"/completions/\" + pk + \"/\");\n      } catch (err) {\n        console.error(\"Failed to skip task \", err);\n      }\n    });\n\n    function destroyCompletion(completion) {\n      destroy(completion);\n\n      self.selected = null;\n      if (self.completions.length > 0) self.selectCompletion(self.completions[0].id);\n    }\n\n    function deleteCompletion(completion) {\n      _deleteCompletion(completion.pk);\n      destroyCompletion(completion);\n    }\n\n    /**\n     *\n     * @param {*} c\n     */\n    function addSavedCompletion(c) {\n      const completionModel = Tree.treeToModel(self.store.config);\n      const modelClass = Registry.getModelByTag(completionModel.type);\n\n      let root = modelClass.create(completionModel);\n\n      const node = {\n        pk: c.id,\n        id: guidGenerator(),\n        createdAgo: c.created_ago,\n        createdBy: c.created_username,\n        honeypot: c.honeypot,\n        root: root,\n      };\n\n      const completion = self.addCompletion(node, \"list\");\n      return completion;\n    }\n\n    /**\n     * Initial Completion\n     * @returns {object}\n     */\n    function addInitialCompletion() {\n      const completionModel = Tree.treeToModel(self.store.config);\n      const modelClass = Registry.getModelByTag(completionModel.type);\n\n      let root = modelClass.create(completionModel);\n\n      const node = {\n        id: guidGenerator(),\n        root: root,\n      };\n\n      if (self.store.expert) {\n        const { expert } = self.store;\n        node[\"createdBy\"] = expert.firstName + \" \" + expert.lastName;\n      } else {\n        node[\"createdBy\"] = \"Admin\";\n      }\n\n      let completion = self.addCompletion(node, \"initial\");\n\n      return completion;\n    }\n\n    return {\n      selectCompletion,\n      addCompletion,\n      deleteCompletion,\n      destroyCompletion,\n      addInitialCompletion,\n      addSavedCompletion,\n    };\n  });\n","import { types, getEnv, flow, getSnapshot } from \"mobx-state-tree\";\n\nimport Task from \"./TaskStore\";\nimport CompletionStore from \"./CompletionStore\";\nimport Hotkey from \"../core/Hotkey\";\n\nconst UserStore = types.model(\"UserStore\", {\n  pk: types.integer,\n  firstName: types.string,\n  lastName: types.string,\n});\n\nconst SettingsModel = types\n  .model(\"SettingsModel\", {\n    enableHotkeys: types.optional(types.boolean, true),\n    enablePanelHotkeys: types.optional(types.boolean, true),\n    enableTooltips: types.optional(types.boolean, true),\n  })\n  .actions(self => ({\n    toggleHotkeys() {\n      self.enableHotkeys = !self.enableHotkeys;\n      if (self.enableHotkeys) {\n        Hotkey.setScope(\"main\");\n      } else {\n        Hotkey.setScope(\"none\");\n      }\n    },\n\n    togglePanelHotkeys() {\n      self.enablePanelHotkeys = !self.enablePanelHotkeys;\n    },\n\n    toggleTooltips() {\n      self.enableTooltips = !self.enableTooltips;\n    },\n  }));\n\nexport default types\n  .model(\"AppStore\", {\n    config: types.string,\n\n    task: types.maybeNull(Task),\n    taskID: types.maybeNull(types.number),\n\n    interfaces: types.array(types.string),\n\n    completionStore: types.optional(CompletionStore, {\n      completions: [],\n    }),\n\n    projectID: types.integer,\n\n    expert: UserStore,\n\n    debug: types.optional(types.boolean, true),\n\n    settings: types.optional(SettingsModel, {}),\n\n    showingSettings: types.optional(types.boolean, false),\n    showingDescription: types.optional(types.boolean, false),\n    description: types.maybeNull(types.string),\n\n    isLoading: types.optional(types.boolean, false),\n    noTask: types.optional(types.boolean, false),\n    labeledSuccess: types.optional(types.boolean, false),\n  })\n  .views(self => ({\n    get fetch() {\n      return getEnv(self).fetch;\n    },\n    get alert() {\n      return getEnv(self).alert;\n    },\n    get post() {\n      return getEnv(self).post;\n    },\n  }))\n  .actions(self => {\n    function setDescription(text) {\n      self.description = text;\n    }\n\n    function toggleSettings() {\n      self.showingSettings = !self.showingSettings;\n    }\n\n    const openDescription = flow(function* openDescription() {\n      let url = \"/api/projects/\" + self.projectID + \"/expert_instruction\";\n      const res = yield self.fetch(url);\n\n      if (res.status === 200) {\n        res.text().then(function(text) {\n          self.setDescription(text);\n        });\n      } else {\n        self.setDescription(\"No instructions for this task\");\n      }\n\n      self.showingDescription = true;\n    });\n\n    function closeDescription() {\n      self.showingDescription = false;\n    }\n\n    function markLoading(loading) {\n      self.isLoading = loading;\n    }\n\n    function hasInterface(name) {\n      return self.interfaces.find(i => name === i);\n    }\n\n    const afterCreate = function() {\n      if (!self.task) self.loadTask();\n\n      Hotkey.addKey(\"ctrl+enter\", self.sendTask);\n\n      if (self.hasInterface(\"submit:skip\")) Hotkey.addKey(\"ctrl+space\", self.skipTask);\n\n      Hotkey.addKey(\"ctrl+backspace\", function() {\n        const { selected } = self.completionStore;\n        selected.deleteAllRegions();\n      });\n\n      Hotkey.addKey(\"ctrl+z\", function() {\n        const { history } = self.completionStore.selected;\n        history && history.canUndo && history.undo();\n      });\n\n      Hotkey.addKey(\"escape\", function() {\n        const c = self.completionStore.selected;\n        if (c && c.relationMode) {\n          c.stopRelationMode();\n        }\n      });\n\n      Hotkey.addKey(\"backspace\", function() {\n        const c = self.completionStore.selected;\n        if (c && c.highlightedNode) {\n          c.highlightedNode.deleteRegion();\n        }\n      });\n    };\n\n    function loadTask() {\n      return self.taskID\n        ? _loadTask(\"/api/tasks/\" + self.taskID + \"/\")\n        : _loadTask(\"/api/projects/\" + self.projectID + \"/next\");\n    }\n\n    function addTask(json) {\n      self.task = Task.create(json);\n    }\n\n    function resetState() {\n      self.completionStore = CompletionStore.create({ completions: [] });\n      const c = self.completionStore.addInitialCompletion();\n\n      self.completionStore.selectCompletion(c.id);\n    }\n\n    function addGeneratedCompletion(data) {\n      if (\"completion_result\" in data && !self.hasInterface(\"predictions:hide\")) {\n        const c = self.completionStore.selected;\n        c.deserializeCompletion(data[\"completion_result\"]);\n        c.reinitHistory();\n      }\n    }\n\n    const _loadTask = flow(function* _loadTask(url) {\n      try {\n        const res = yield self.fetch(url);\n\n        if (res instanceof Response && res.status === 404) {\n          self.markLoading(false);\n          self.noTask = true;\n          return;\n        }\n\n        res.json().then(function(r) {\n          r.data = JSON.stringify(r.data);\n\n          self.addTask(r);\n          self.markLoading(false);\n\n          if (self.hasInterface(\"completions\") && r.completions) {\n            self.completionStore.destroyCompletion(self.completionStore.selected);\n\n            for (var i = 0; i < r.completions.length; i++) {\n              const c = r.completions[i];\n\n              if (c.was_cancelled === true) continue;\n\n              const comp = self.completionStore.addSavedCompletion(c);\n              comp.traverseTree(node => node.updateValue && node.updateValue(self));\n              self.completionStore.selectCompletion(comp.id);\n\n              comp.deserializeCompletion(JSON.parse(c.result));\n              comp.reinitHistory();\n            }\n          } else {\n            if (self.completionStore.selected)\n              self.completionStore.selected.traverseTree(node => node.updateValue && node.updateValue(self));\n\n            self.addGeneratedCompletion(r);\n          }\n        });\n      } catch (err) {\n        console.error(\"Failed to load next task \", err);\n      }\n    });\n\n    const skipTask = flow(function* skipTask() {\n      self.markLoading(true);\n\n      try {\n        const json = yield self.post(\n          \"/api/tasks/\" + self.task.id + \"/cancel/\",\n          JSON.stringify({ data: JSON.stringify({ error: \"cancelled\" }) }),\n        );\n\n        self.resetState();\n        return loadTask();\n      } catch (err) {\n        console.error(\"Failed to skip task \", err);\n      }\n    });\n\n    const sendTask = flow(function* sendTask() {\n      const c = self.completionStore.selected;\n\n      c.beforeSend();\n\n      const res = c.serializeCompletion();\n\n      if (self.hasInterface(\"submit:check-empty\") && res.length === 0) {\n        alert(\"You need to label at least something!\");\n        return;\n      }\n\n      self.markLoading(true);\n\n      try {\n        const state = getSnapshot(c);\n\n        const body = JSON.stringify({\n          state: JSON.stringify(state),\n          result: JSON.stringify(res),\n        });\n\n        yield self.post(\"/api/tasks/\" + self.task.id + \"/completions/\", body);\n\n        if (hasInterface(\"submit:load\")) {\n          self.resetState();\n          return loadTask();\n        } else {\n          self.markLoading(false);\n          self.labeledSuccess = true;\n        }\n\n        delete state.history;\n      } catch (err) {\n        console.error(\"Failed to send task \", err);\n      }\n    });\n\n    function initializeStore({ completions }) {\n      // console.log(args);\n      // const { completions } = args;\n\n      // console.log(self.task);\n\n      const generatedCompletions = [];\n      const { completionStore } = self;\n\n      if (completions && completions.length) {\n        for (var i = 0; i < completions.length; i++) {\n          const c = completions[i];\n\n          if (c.was_cancelled === true) continue;\n\n          if (c.was_generated) generatedCompletions.push(c);\n        }\n      }\n\n      //         else {\n      // const comp = completionStore.addSavedCompletion(c);\n      // completionStore.selectCompletion(comp.id);\n\n      // comp.deserializeCompletion(JSON.parse(c.result));\n      // comp.reinitHistory();\n\n      // const comp = JSON.parse(c.state);\n\n      // comp.pk = c.id;\n      // comp.createdAgo = c.created_ago;\n      // comp.honeypot = c.honeypot;\n\n      // completionStore.addCompletion(comp, 'list');\n      //     }\n      // }\n\n      //     if (completionStore.completions.length)\n      //         completionStore.selectCompletion(completionStore.completions[0].id);\n      // }\n\n      if (completionStore.completions.length === 0) {\n        const c = self.completionStore.addInitialCompletion();\n        self.completionStore.selectCompletion(c.id);\n\n        if (generatedCompletions.length > 0) {\n          let data = generatedCompletions[0].result;\n\n          if (typeof generatedCompletions[0].result === \"string\") {\n            data = JSON.parse(generatedCompletions[0].result);\n          }\n\n          c.deserializeCompletion(data);\n\n          c.reinitHistory();\n        }\n      }\n    }\n\n    return {\n      afterCreate,\n      loadTask,\n      addTask,\n      hasInterface,\n      skipTask,\n      sendTask,\n      markLoading,\n      resetState,\n      openDescription,\n      closeDescription,\n      setDescription,\n      toggleSettings,\n      initializeStore,\n      addGeneratedCompletion,\n    };\n  });\n","function getData() {\n  // TODO remove, this is here because MST either takes string or a\n  // fully features typed tree\n  if (window.taskData) window.taskData.data = JSON.stringify(window.taskData.data);\n\n  const data = {\n    projectID: window.projectID,\n    isLoading: false,\n    config: window.editorAppConfig,\n    // task: window.taskData,\n    taskID: window.taskID,\n    expert: window.expertData,\n    debug: window.debugEditor,\n    interfaces: window.editorInterfaces ? window.editorInterfaces : [\"basic\", \"completions\"],\n  };\n\n  // this is here to make project_render_editor to work because it\n  // expects static config\n  if (window.preRender) {\n    data[\"task\"] = window.taskData;\n  }\n\n  // /tasks/$id/explore\n  if (window.explore) {\n    data[\"interfaces\"] = window.editorInterfaces ? window.editorInterfaces : [\"basic\", \"completions\"];\n  } else {\n    data[\"interfaces\"] = window.editorInterfaces\n      ? window.editorInterfaces\n      : [\"basic\", \"submit\", \"submit:skip\", \"submit:submit\"];\n  }\n\n  return data;\n}\n\nfunction rootElement() {\n  const el = document.createElement(\"div\");\n  var root = document.getElementById(\"root\");\n  root.innerHTML = \"\";\n  root.appendChild(el);\n\n  return el;\n}\n\nfunction getState() {\n  const c = window.taskData && window.taskData.completions ? window.taskData.completions : null;\n\n  return {\n    completions: c,\n  };\n}\n\nexport default { getData, getState, rootElement };\n","/**\n * Object with configs for test\n * TODO: sorting other configs\n */\nconst configEnv = {\n  default: {\n    config: `<View><Text name=\"txt-1\" value=\"$text\"></Text></View>`,\n    data: {\n      text: `mobx-state-tree is a state container that combines the simplicity and ease of mutable data with the traceability of immutable data and the reactiveness and performance of observable data.\n      Simply put, mobx-state-tree tries to combine the best features of both immutability (transactionality, traceability and composition) and mutability (discoverability, co-location and encapsulation) based approaches to state management; everything to provide the best developer experience possible. Unlike MobX itself, mobx-state-tree is very opinionated about how data should be structured and updated. This makes it possible to solve many common problems out of the box.\n      Central in MST (mobx-state-tree) is the concept of a living tree. The tree consists of mutable, but strictly protected objects enriched with runtime type information. In other words, each tree has a shape (type information) and state (data). From this living tree, immutable, structurally shared, snapshots are automatically generated.`,\n    },\n    task: {\n      id: 402324,\n      completions: [],\n      meta: {},\n      accuracy: 0.0,\n      created_at: \"2019-06-14T15:15:47.982764Z\",\n      updated_at: \"2019-06-14T15:15:47.982771Z\",\n      is_labeled: false,\n      exposed: true,\n      project: 139,\n    },\n  },\n  gptc: {\n    config: `<View>\n        <Text name=\"mytext\" value=\"$text\"></Text>\n        <Choices name=\"mytext_class\" toName=\"mytext\" choice=\"single\">\n          <Choice value=\"important\" alias=\"Important document\"></Choice>\n          <Choice value=\"other\" alias=\"Other\"></Choice>\n        </Choices>\n      </View>`,\n    data: {\n      text: `mobx-state-tree is a state container that combines the simplicity and ease of mutable data with the traceability of immutable data and the reactiveness and performance of observable data.\n      Simply put, mobx-state-tree tries to combine the best features of both immutability (transactionality, traceability and composition) and mutability (discoverability, co-location and encapsulation) based approaches to state management; everything to provide the best developer experience possible. Unlike MobX itself, mobx-state-tree is very opinionated about how data should be structured and updated. This makes it possible to solve many common problems out of the box.\n      Central in MST (mobx-state-tree) is the concept of a living tree. The tree consists of mutable, but strictly protected objects enriched with runtime type information. In other words, each tree has a shape (type information) and state (data). From this living tree, immutable, structurally shared, snapshots are automatically generated.`,\n    },\n    task: {\n      id: 402324,\n      completions: [],\n      meta: {},\n      accuracy: 0.0,\n      created_at: \"2019-06-14T15:15:47.982764Z\",\n      updated_at: \"2019-06-14T15:15:47.982771Z\",\n      is_labeled: false,\n      exposed: true,\n      project: 139,\n    },\n  },\n  ner: {\n    config: `<View>\n    <Labels name=\"ner\" toName=\"text\">\n      <Label value=\"Person\"></Label>\n      <Label value=\"Organization\"></Label>\n      <Label value=\"Fact\"></Label>\n      <Label value=\"Money\"></Label>\n      <Label value=\"Date\"></Label>\n      <Label value=\"Time\"></Label>\n      <Label value=\"Ordinal\"></Label>\n      <Label value=\"Percent\"></Label>\n      <Label value=\"Product\"></Label>\n      <Label value=\"Language\"></Label>\n      <Label value=\"Location\"></Label>\n    </Labels>\n    <Text name=\"text\" value=\"$text\"></Text>\n  </View>`,\n    data: {\n      text: `mobx-state-tree is a state container that combines the simplicity and ease. Apple's and 😋App Store are still broken http://t.co/gIrx8G4pcC http://t.co/fwTXH2aSvC`,\n      texta: \"To have faith is to trust yourself to the water\",\n    },\n    task: {\n      id: 402324,\n      completions: [\n        {\n          id: 137601,\n          model_version: \"2019-04-10 10:52:20.591839\",\n          result: [\n            {\n              id: \"RuJ2GrJyG8\",\n              from_name: \"ner\",\n              to_name: \"text\",\n              source: \"$text\",\n              type: \"labels\",\n              value: {\n                start: 8,\n                end: 12,\n                text: \"faith\",\n                labels: [\"Fact\"],\n              },\n            },\n          ],\n          score: 1.0,\n          created_at: \"2019-04-10T10:53:28.822843Z\",\n          updated_at: \"2019-04-10T10:53:28.822851Z\",\n          task: 71937,\n          was_generated: true,\n        },\n      ],\n      meta: {},\n      accuracy: 0.0,\n      created_at: \"2019-06-14T15:15:47.982764Z\",\n      updated_at: \"2019-06-14T15:15:47.982771Z\",\n      is_labeled: false,\n      exposed: true,\n      project: 139,\n    },\n  },\n  bbox: {\n    config: `<View>\n        <RectangleLabels name=\"tag\" toName=\"image\">\n          <Label value=\"Cat\"></Label>\n          <Label value=\"Dog\" background=\"blue\"></Label>\n        </RectangleLabels>\n        <Image name=\"image\" value=\"$image_url\"></Image>\n      </View>\n    `,\n    task: {\n      id: 402324,\n      meta: {},\n      accuracy: 0.0,\n      created_at: \"2019-06-14T15:15:47.982764Z\",\n      updated_at: \"2019-06-14T15:15:47.982771Z\",\n      is_labeled: false,\n      exposed: true,\n      project: 139,\n      completions: [],\n    },\n    data: {\n      image_url: \"https://go.heartex.net/static/samples/kittens.jpg\",\n    },\n  },\n  image: {\n    config: `<View> <Image name=\"image\" value=\"$image_url\"/> <Choices name=\"cats_or_dogs\" toName=\"image\">   <Choice value=\"Cat\"></Choice>   <Choice value=\"Dog\"></Choice> </Choices></View>`,\n    data: {\n      image_url: \"http://s3.amazonaws.com/heartex-private/cats_n_dogs/training_set/dogs/dog.887.jpg\",\n    },\n    task: {\n      id: 402324,\n      meta: {},\n      accuracy: 0.0,\n      created_at: \"2019-06-14T15:15:47.982764Z\",\n      updated_at: \"2019-06-14T15:15:47.982771Z\",\n      exposed: true,\n      project: 139,\n      completions: [\n        {\n          completed_by: null,\n          created_ago: \"2 months\",\n          created_at: \"2019-05-14T05:02:41.289000Z\",\n          created_username: \"\",\n          honeypot: true,\n          id: 1430,\n          result: '[{\"type\":\"choices\",\"value\":{\"choices\":[\"Dog\"]},\"to_name\":\"image\",\"from_name\":\"cats_or_dogs\"}]',\n          state: \"{}\",\n          task: 163260,\n          updated_at: \"2019-05-14T05:02:41.289000Z\",\n          was_cancelled: false,\n          was_generated: true,\n        },\n      ],\n    },\n  },\n  cda: {\n    config: `<View>\n    <HyperText name=\"dialog\" value=\"$dialogs\"></HyperText>\n    <Header value=\"Rate last answer:\"></Header>\n    <Choices name=\"chc-1\" choice=\"single-radio\" toName=\"dialog\">\n      <Choice value=\"Bad answer\"></Choice>\n      <Choice value=\"Neutral answer\"></Choice>\n      <Choice value=\"Good answer\"></Choice>\n    </Choices>\n    <Header value=\"Your answer:\"></Header>\n    <TextArea name=\"answer\"></TextArea>\n  </View>`,\n    task: {},\n    data: {},\n  },\n  dialog: {\n    config: `<View>\n        <Header value=\"Select choice:\"></Header>\n        <Dialog value=\"$dialoga\" name=\"dial\"></Dialog>\n        <Choices showInline=\"true\" name=\"mytext_class\" toName=\"dial\">\n          <Choice value=\"important\"></Choice>\n          <Choice value=\"other\"></Choice>\n        </Choices>\n      </View>`,\n    task: {\n      id: 402324,\n      completions: [\n        {\n          completed_by: 55,\n          created_ago: \"16 hours, 57 minutes\",\n          created_at: \"2019-07-19T17:48:15.465239Z\",\n          created_username: \"\",\n          honeypot: false,\n          id: 8440,\n          result: '[{\"type\":\"choices\",\"value\":{\"choices\":[\"important\"]},\"to_name\":\"dial\",\"from_name\":\"mytext_class\"}]',\n          task: 761928,\n          updated_at: \"2019-07-19T17:48:15.465264Z\",\n          was_cancelled: false,\n          was_generated: true,\n        },\n      ],\n      meta: {},\n      accuracy: 0.0,\n      created_at: \"2019-06-14T15:15:47.982764Z\",\n      updated_at: \"2019-06-14T15:15:47.982771Z\",\n      is_labeled: false,\n      exposed: true,\n      project: 139,\n    },\n\n    data: {\n      dialoga: [\n        {\n          name: \"Jules Winnfield\",\n          text: \"Okay, so, tell me about the hash bars\",\n          id: 100,\n        },\n        {\n          name: \"Vasya\",\n          text: \"So what you want to know?\",\n          date: \"1 August, 2019\",\n        },\n        {\n          name: \"Jules Winnfield\",\n          text: \"Well, hash is legal there, right?\",\n          selected: true,\n          date: \"1 August, 2019\",\n        },\n        {\n          name: \"Vincу\",\n          text:\n            \"Yeah, it's legal, but it ain't a hundred percent legal. I mean, you can't walk into a restaurant,\\n   roll a joint, and start puffin' away. They want you to smoke in your home or certain designated places.\",\n        },\n        {\n          name: \"Jules Winnfield\",\n          text: \"Those are hash bars?\",\n        },\n        {\n          name: \"Vincent Vega\",\n          text:\n            \"Breaks down like this, okay: it's legal to buy it,\\n   it's legal to own it, and if you're the proprietor of a hash bar, it's legal to sell it. It's illegal to carry it,\\n   but that doesn't really matter 'cause, get a load of this, all right; if you get stopped by the cops in Amsterdam,\\n   it's illegal for them to search you. I mean, that's a right the cops in Amsterdam don't have.\",\n        },\n        {\n          name: \"Vincent Vega\",\n          text:\n            \"Yeah, it's legal, but it ain't a hundred percent legal. I mean, you can't walk into a restaurant,\\n   roll a joint, and start puffin' away. They want you to smoke in your home or certain designated places.\",\n        },\n        {\n          name: \"Jules Winnfield\",\n          text: \"Those are hash bars?\",\n        },\n        {\n          name: \"Vincent Vega\",\n          text:\n            \"Breaks down like this, okay: it's legal to buy it,\\n   it's legal to own it, and if you're the proprietor of a hash bar, it's legal to sell it. It's illegal to carry it,\\n   but that doesn't really matter 'cause, get a load of this, all right; if you get stopped by the cops in Amsterdam,\\n   it's illegal for them to search you. I mean, that's a right the cops in Amsterdam don't have.\",\n        },\n        {\n          name: \"Vincent Vega\",\n          text:\n            \"Yeah, it's legal, but it ain't a hundred percent legal. I mean, you can't walk into a restaurant,\\n   roll a joint, and start puffin' away. They want you to smoke in your home or certain designated places.\",\n        },\n        {\n          name: \"Jules Winnfield\",\n          text: \"Those are hash bars?\",\n        },\n        {\n          name: \"Vincent Vega\",\n          text:\n            \"Breaks down like this, okay: it's legal to buy it,\\n   it's legal to own it, and if you're the proprietor of a hash bar, it's legal to sell it. It's illegal to carry it,\\n   but that doesn't really matter 'cause, get a load of this, all right; if you get stopped by the cops in Amsterdam,\\n   it's illegal for them to search you. I mean, that's a right the cops in Amsterdam don't have.\",\n        },\n      ],\n    },\n  },\n  audio: {\n    config: `<View>\n        <Header value=\"Select label:\"></Header>\n        <Labels name=\"label\" toName=\"audio\">\n          <Label value=\"Politics\" background=\"red\"></Label>\n          <Label value=\"Business\" background=\"blue\"></Label>\n          <Label value=\"Education\"></Label>\n        </Labels>\n        <Header value=\"Select audio region:\"></Header>\n        <AudioPlus name=\"audio\" value=\"$url\"></AudioPlus>\n      </View>`,\n\n    task: {\n      id: 402324,\n      completions: [\n        {\n          completed_by: 55,\n          created_ago: \"16 hours, 57 minutes\",\n          created_at: \"2019-07-19T17:48:15.465239Z\",\n          created_username: \"\",\n          honeypot: false,\n          id: 8440,\n          result: `[{\"id\":\"XPxpLMifV7\",\"from_name\":\"label\",\"to_name\":\"audio\",\"source\":\"$url\",\"type\":\"labels\",\"value\":{\"start\":0.7047114876227649,\"end\":2.369030107327593,\"labels\":[\"Politics\"]}},{\"id\":\"6ycG2nV3mp\",\"from_name\":\"label\",\"to_name\":\"audio\",\"source\":\"$url\",\"type\":\"labels\",\"value\":{\"start\":2.6014349596287176,\"end\":5.982550714074112,\"labels\":[\"Business\"]}}]`,\n          task: 761928,\n          updated_at: \"2019-07-19T17:48:15.465264Z\",\n          was_cancelled: false,\n        },\n      ],\n      meta: {},\n      accuracy: 0.0,\n      created_at: \"2019-06-14T15:15:47.982764Z\",\n      updated_at: \"2019-06-14T15:15:47.982771Z\",\n      is_labeled: false,\n      exposed: true,\n      project: 139,\n    },\n\n    data: {\n      url: \"https://s3-us-west-1.amazonaws.com/heartex-public/cello.mp3\",\n    },\n  },\n};\n\nexport default configEnv;\n","import configEnv from \"./config-development\";\n\n/**\n * Wrapper to generate development config\n * @param {string} config\n */\nfunction templateData(config) {\n  let task = configEnv[config].task;\n\n  window.T = task;\n\n  task = {\n    ...task,\n    data: JSON.stringify(configEnv[config].data),\n  };\n\n  return {\n    projectID: 1,\n    isLoading: false, // loading of editor\n    config: configEnv[config].config,\n    task: task,\n    taskID: 1,\n    expert: {\n      pk: 1,\n      lastName: \"Jones\",\n      firstName: \"Oliver\",\n    },\n    debug: window.location.search.indexOf(\"debug=true\") !== -1,\n    interfaces: window.editorInterfaces\n      ? window.editorInterfaces\n      : [\"basic\", \"completions\", \"submit\", \"panel\", \"side-column\"],\n  };\n}\n\n/**\n * Function to generate data\n * @member default - Default with text\n * @member gptc - General-purpose text classifier\n * @member ner - Named-entity recognition\n * @member gpic - General-purpose image classifier\n * @member gptg - General-purpose text tagging\n * @member cda - Chatbot Dialogs Analysis\n * @member bbox - Annotate And Categorize Objects In An Image Using A Bounding Box\n * @member audio - Audio Region Labeling\n * @member dialog - Dialog\n *\n */\nfunction getData() {\n  return templateData(\"ner\");\n}\n\n/**\n * Get completions for task\n */\nfunction getState() {\n  const resultCompletions = getData().task.completions ? getData().task.completions : null;\n  return {\n    completions: resultCompletions,\n  };\n}\n\n/**\n * Function to return Root element\n */\nfunction rootElement() {\n  const el = document.createElement(\"div\");\n\n  let root = document.getElementById(\"root\");\n\n  root.innerHTML = \"\";\n  root.appendChild(el);\n\n  root.style.marginTop = \"10px\";\n  root.style.marginBottom = \"10px\";\n  root.style.marginLeft = \"10px\";\n  root.style.marginRight = \"10px\";\n\n  return el;\n}\n\nexport default { getState, getData, rootElement };\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"mobx-react\";\n\nimport \"semantic-ui-css/semantic.min.css\";\nimport \"./assets/styles/global.scss\";\n\nimport App from \"./components/App/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport AppStore from \"./stores/AppStore\";\nimport Requests from \"./core/Requests\";\n\nimport ProductionEnviroment from \"./env/prod\";\nimport DevelopmentEnvironment from \"./env/dev\";\n\nlet enviroment = DevelopmentEnvironment;\n\nif (process.env.NODE_ENV === \"production\") {\n  enviroment = ProductionEnviroment;\n}\n\nconst app = AppStore.create(enviroment.getData(), {\n  fetch: Requests.fetcher,\n  patch: Requests.patch,\n  post: Requests.poster,\n  remove: Requests.remover,\n  alert: m => console.log(m), // Noop for demo: window.alert(m)\n});\n\napp.initializeStore(enviroment.getState());\n\nwindow.Htx = app;\n\nReactDOM.render(\n  <Provider store={app}>\n    <App />\n  </Provider>,\n  enviroment.rootElement(),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"Entity_block__3ckIB\",\"button\":\"Entity_button__W4DcF\",\"labels\":\"Entity_labels__1Ldoe\",\"tag\":\"Entity_tag__3VRfN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"skip\":\"Controls_skip__1Km2f\",\"task\":\"Controls_task__3a2SA\",\"container\":\"Controls_container__2OOQz\",\"block\":\"Controls_block__3VbK-\",\"wrapper\":\"Controls_wrapper__3Yptx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"Dialog_block__3oOBf\",\"block_selected\":\"Dialog_block_selected__2Do_t\",\"name\":\"Dialog_name__1MoM3\",\"tag\":\"Dialog_tag__3NOpX\",\"date\":\"Dialog_date__28pt2\"};"],"sourceRoot":""}