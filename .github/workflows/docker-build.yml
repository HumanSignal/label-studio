name: "Docker build & push"

on:
  push:
    branches:
      - master
    paths:
      - deploy/**
      - label_studio/**
      - setup.py
      - .github/workflows/docker-build.yml
    tags: [ '*' ]

env:
  # increment it in case if you need to reset cache
  CACHE_NAME_PREFIX: v1
  NODE: '14'
  DOCKER_CLI_EXPERIMENTAL: enabled
  IMAGE_NAME: heartexlabs/label-studio
  DOCKER_TAG: 'latest'

jobs:
  docker_build_and_push:
    name: "Docker build and push"
    timeout-minutes: 10
    runs-on: ubuntu-latest
    steps:
      - name: Override image tag on 'tag'
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          echo "DOCKER_TAG=$(echo ${GITHUB_REF#refs/tags/})" >> $GITHUB_ENV

      - name: Checkout
        uses: actions/checkout@v2.4.0

      - name: Setup node
        uses: actions/setup-node@v2.5.1
        with:
          node-version: "${{ env.NODE }}"


      - name: Upgrade npm
        run: npm install -g npm@7

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1.6.0

      - name: Login to DockerHub
        uses: docker/login-action@v1.14.1
        with:
          username: heartexlabs
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Get npm cache directory
        id: npm-cache-dir
        run: echo "::set-output name=dir::$(npm config get cache)"

      - uses: actions/cache@v2.1.7
        name: Configure npm cache
        id: npm-cache
        with:
          path: ${{ steps.npm-cache-dir.outputs.dir }}
          key: ${{ env.CACHE_NAME_PREFIX }}-${{ runner.os }}-node-${{ env.NODE }}-${{ hashFiles('label_studio/frontend/package.json') }}-${{ hashFiles('label_studio/frontend/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-${{ env.NODE }}-

      - name: Set up Python
        uses: actions/setup-python@v2.3.2
        with:
          python-version: '3.8'

      - uses: actions/cache@v2.1.7
        name: Configure pip cache
        id: pip-cache
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-django-${{ hashFiles('deploy/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-django-

      - name: Install MW & LS
        run: |
          pip3 install -r deploy/requirements-mw.txt
          pip3 install -e .

      - name: Install LSF & set version.py
        run: ./deploy/prebuild.sh
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v2.9.0
        id: docker_build_and_push
        with:
          context: .
          push: true
          tags: ${{ env.IMAGE_NAME }}:${{ env.DOCKER_TAG }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
