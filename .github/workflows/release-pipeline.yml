name: "Release: Pipeline"

on:
  release:
    types:
      - released

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.event.pull_request.head.ref || github.ref }}
  cancel-in-progress: true

env:
  HOMEBREW_TAP_REPO_OWNER: "heartexlabs"
  HOMEBREW_TAP_REPO: "homebrew-tap"

jobs:
  promote_docker_image:
    name: "Promote"
    permissions:
      contents: read
      checks: read
    uses: heartexlabs/label-studio/.github/workflows/docker-release-promote.yml@develop
    with:
      release_tag: ${{ github.ref_name }}
    secrets: inherit

  build_ubi_docker_image:
    name: "Build UBI docker image"
    uses: heartexlabs/label-studio/.github/workflows/docker-build-ubi.yml@develop
    with:
      sha: ${{ github.ref_name }}
      version: ${{ github.ref_name }}
    secrets: inherit

  build_hugging_face_docker_image:
    name: "Build Hugging Face docker image"
    needs:
      - promote_docker_image
    uses: heartexlabs/label-studio/.github/workflows/docker-build-ontop.yml@develop
    with:
      base_docker_image_version: ${{ github.ref_name }}
      tags: "hf-latest,hf-${{ github.ref_name }}"
      dockerfile_path: Dockerfile.hgface
      ref: ${{ github.ref_name }}
    secrets: inherit

  build-pypi:
    name: "Build"
    permissions:
      contents: write
    uses: heartexlabs/label-studio/.github/workflows/build_pypi.yml@develop
    with:
      version: ${{ github.ref_name }}
      ref: ${{ github.ref_name }}
      upload_to_pypi: true
      release-id: ${{ github.event.release.id }}
    secrets: inherit

  delete-rc-assets:
    name: "Delete Release Candidate Assets"
    runs-on: ubuntu-latest
    needs:
      - build-pypi
    steps:
      - uses: hmarr/debug-action@v2.1.0

      - name: DispatchEvent
        uses: actions/github-script@v6
        env:
          RELEASE_ID: "${{ github.event.release.id }}"
        with:
          github-token: ${{ secrets.GIT_PAT }}
          script: |
            const { repo, owner } = context.repo;
            const release_id = process.env.RELEASE_ID;
            const rc_regexp = /label-studio-\d+.\d+.\d+rc\d+/;
            const {data: release} = await github.rest.repos.getRelease({
              owner,
              repo,
              release_id,
            });
            for (let asset of release.assets) {
              const match = asset.name.match(rc_regexp)
              if (match) {
                console.log(`Deleting asset ${asset.name}`)
                await github.rest.repos.deleteReleaseAsset({
                  owner,
                  repo,
                  asset_id: asset.id,
                });
              }
            }

  update-homebrew-tap:
    name: "Update Homebrew Tap"
    runs-on: ubuntu-latest
    needs:
      - build-pypi
    steps:
      - uses: hmarr/debug-action@v2.1.0

      - name: DispatchEvent
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GIT_PAT }}
          script: |
            await github.rest.repos.createDispatchEvent({
              owner: '${{ env.HOMEBREW_TAP_REPO_OWNER }}',
              repo: '${{ env.HOMEBREW_TAP_REPO }}',
              event_type: 'upstream_formula_update',
              client_payload: {
                formula: 'label-studio',
                url: '${{ needs.build-pypi.outputs.pipy-artifact-url }}',
                sha256: '${{ needs.build-pypi.outputs.pipy-artifact-digests-sha256 }}',
              }
            });
