name: "Update Feature Flags"

on:
  workflow_call:
    inputs:
      ref:
        required: true
        type: string
  workflow_dispatch:
    inputs:
      ref:
        description: "Ref"
        required: true
        type: string

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.event.pull_request.head.ref || github.ref }}
  cancel-in-progress: true

env:
  LAUNCHDARKLY_DOWNLOAD_PATH: "label_studio/feature_flags.json"
  FEATURE_FLAGS_COMMIT_MESSAGE: "ci: Update Feature Flags"

jobs:
  commit-feature-flags:
    name: "Commit Feature Flags"

    runs-on: ubuntu-latest
    steps:
      - uses: hmarr/debug-action@v2.1.0

      - name: Get GitHub user details
        id: get-github-user
        uses: actions/github-script@v6
        env:
          ACTOR_USERNAME: ${{ github.event.sender.login }}
        with:
          github-token: ${{ secrets.GIT_PAT }}
          script: |
            const actor_username = process.env.ACTOR_USERNAME;
            
            let user_name = 'robot-ci-heartex';
            let user_email = 'robot-ci-heartex@users.noreply.github.com';
            
            try {
              const {data: user} = await github.rest.users.getByUsername({
                username: actor_username,
              });
              user_name = user.login;
              user_email = user.email;
            } catch (e) {
              console.log(e)
            }
            
            core.setOutput('user_name', user_name);
            core.setOutput('user_email', user_email);

      - name: Configure git
        shell: bash
        run: |
          set -xeuo pipefail
          git config --global user.name '${{ steps.get-github-user.outputs.user_name }}'
          git config --global user.email '${{ steps.get-github-user.outputs.user_email }}'

      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
          ref: ${{ inputs.ref }}

      - name: Download feature flags
        env:
          LAUNCHDARKLY_COMMUNITY_SDK_KEY: ${{ secrets.LAUNCHDARKLY_COMMUNITY_SDK_KEY }}
        run: |
          set -xeuo pipefail
          curl \
            --connect-timeout 30 \
            --retry 5 \
            --retry-delay 10 \
            -H "Authorization: $LAUNCHDARKLY_COMMUNITY_SDK_KEY" \
            "https://sdk.launchdarkly.com/sdk/latest-all" >"${{ env.LAUNCHDARKLY_DOWNLOAD_PATH }}"
          if [ "$(jq 'has("flags")' <<< cat ${{ env.LAUNCHDARKLY_DOWNLOAD_PATH }})" = "true" ]; then 
            echo "feature_flags.json is valid"
          else
            echo "feature_flags.json is invalid"
            cat ${{ env.LAUNCHDARKLY_DOWNLOAD_PATH }}
            exit 1
          fi

      - name: Commit and Push
        run: |
          git add "${{ env.LAUNCHDARKLY_DOWNLOAD_PATH }}"
          git status -s
          git commit -m '${{ env.FEATURE_FLAGS_COMMIT_MESSAGE }}' || true
          git push origin HEAD
