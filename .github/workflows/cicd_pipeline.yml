name: "CI/CD Pipeline"

on:
  push:
    branches:
      - develop
      - 'ls-release/**'
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
      - ready_for_review
    branches:
      - develop
      - 'ls-release/**'

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.event.pull_request.head.ref || github.ref }}
  cancel-in-progress: true

permissions: read-all

jobs:
  changed_files:
    name: "Changed files"
    runs-on: ubuntu-latest
    outputs:
      src: ${{ steps.changes.outputs.src }}
      frontend: ${{ steps.changes.outputs.frontend }}
      docker: ${{ steps.changes.outputs.docker }}
      commit-message: ${{ steps.commit-details.outputs.commit-message }}
    timeout-minutes: 5
    steps:
      - uses: hmarr/debug-action@v2.0.1

      - name: Checkout
        if: github.event_name == 'push'
        uses: actions/checkout@v3
        with:
          ref: ${{ github.ref }}

      - uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            src:
              - 'label_studio/!(frontend)/**'
              - 'deploy/requirements**'
              - 'setup.py'
            frontend:
              - 'label_studio/frontend/**'
            docker:
              - 'label_studio/**'
              - 'deploy/**'
              - 'Dockerfile**'
              - 'setup.py'
              - '.github/workflows/cicd_pipeline.yml'
              - '.github/workflows/docker-build.yml'

      - uses: actions/github-script@v6
        id: commit-details
        with:
          script: |
            const { repo, owner } = context.repo;
            const { data: commit } = await github.rest.repos.getCommit({
                owner,
                repo,
                ref: '${{ github.event.pull_request.head.sha || github.event.after }}'
            });
            core.setOutput("commit-message", commit.commit.message);

  pr_labeler:
    name: "Validate"
    if: github.event_name == 'pull_request'
    permissions:
      pull-requests: write
    uses: heartexlabs/label-studio/.github/workflows/pr-labeler.yml@develop

  validate_submodules:
    name: "Validate"
    uses: heartexlabs/label-studio/.github/workflows/submodules-validator.yml@develop
    with:
      head_sha: ${{ github.sha }}
      base_sha: ${{ github.event.pull_request.base.sha || github.event.before }}
      target_branch: ${{ github.event.pull_request.base.ref || github.event.ref }}

  gitleaks:
    name: "Linter"
    if: github.event_name == 'pull_request'
    uses: heartexlabs/label-studio/.github/workflows/gitleaks.yml@develop
    with:
      head_sha: ${{ github.sha }}
      base_sha: ${{ github.event.pull_request.base.sha || github.event.before }}

  bandit:
    name: "Linter"
    needs:
      - changed_files
    if: needs.changed_files.outputs.src == 'true'
    uses: heartexlabs/label-studio/.github/workflows/bandit.yml@develop
    with:
      head_sha: ${{ github.event.pull_request.head.sha || github.event.after }}

  frontend-build:
    name: "Build"
    needs:
      - changed_files
    if: |
      github.event_name == 'pull_request' &&
      github.event.pull_request.head.repo.fork == false &&
      needs.changed_files.outputs.frontend == 'true' &&
      needs.changed_files.outputs.commit-message != 'Build frontend'
    permissions:
      contents: write
    uses: heartexlabs/label-studio/.github/workflows/frontend-build.yml@develop
    with:
      ref: ${{ github.event.pull_request.head.ref || github.ref }}

  build:
    name: "Build"
    needs:
      - changed_files
    if: |
      github.event_name == 'push' &&
      ( ( github.ref_name == 'develop' && needs.changed_files.outputs.docker == 'true' )
        || startsWith(github.ref_name, 'ls-release/') )
    permissions:
      checks: write
    uses: heartexlabs/label-studio/.github/workflows/docker-build.yml@develop
    with:
      ref: ${{ github.ref_name }}
    secrets: inherit

  pytest:
    name: "Tests"
    needs:
      - changed_files
    if: needs.changed_files.outputs.src == 'true'
    uses: heartexlabs/label-studio/.github/workflows/tests.yml@develop
    with:
      ref: ${{ github.event.pull_request.head.ref || github.ref }}
