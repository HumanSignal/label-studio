(()=>{"use strict";class e{constructor(e){this.worker=void 0,this.worker=e}async compute(e){var t;const s=await this.sendMessage(this.worker,{data:e,type:"compute"},!0);return null==s||null==(t=s.data)||null==(t=t.result)?void 0:t.data}async precompute(e){await this.sendMessage(this.worker,{data:e,type:"precompute"})}async store(e){await this.sendMessage(this.worker,{data:e,type:"store"})}async getStorage(){var e;const t=await this.sendMessage(this.worker,{type:"getStorage"},!0);return null==t||null==(e=t.data)?void 0:e.result}destroy(){this.worker.terminate()}sendMessage(e,t,s=!1){return new Promise((a=>{const r=Math.random().toString();if(s){const t=s=>{r===s.data.eventId&&(e.removeEventListener("message",t),a(s))};e.addEventListener("message",t)}e.postMessage(Object.assign({},t,{eventId:r})),s||a(void 0)}))}}function t({value:e,channelCount:t}){const s=[];for(let a=0;a<t;a++)s[a]=new Float32Array(e.length/t);for(let a=0;a<e.length;a++){const r=a%t,n=Math.floor(a/t);s[r][n]=e[a]}return s}e.Messenger={receive({compute:e,precompute:t}){const s={};self.addEventListener("message",(a=>{if(!a.data)return;const{data:r,type:n,eventId:o}=a.data;switch(n){case"compute":((t,a)=>{e(t,s,(e=>{self.postMessage({result:e,eventId:a})}))})(r,o);break;case"precompute":(e=>{null==t||t(e,s,(e=>{Object.assign(s,e)}))})(r);break;case"store":(e=>{Object.assign(s,e.data.data)})(a);break;case"getStorage":(e=>{self.postMessage({result:s,eventId:e})})(o)}}))}},e.Messenger.receive({compute:(e,s,a)=>{a({data:t(e)})},precompute:(e,s,a)=>{a({data:t(e)})}})})();
//# sourceMappingURL=559.js.map