{"version":3,"file":"99.js","mappings":"iKAwFA,SAAiBA,QArFjB,SAAiBC,GACf,OAAIA,GAAQA,EAAKC,KACfC,OAAAC,OAAA,GACKH,EAAI,CACPC,KAAMG,KAAKC,UAAUL,EAAKC,QAIvBD,CACT,EA4E0BM,SA1E1B,SAAkBN,GAChB,MAAO,CACLO,YAAiB,MAAJP,OAAI,EAAJA,EAAMO,YACnBC,YAAiB,MAAJR,OAAI,EAAJA,EAAMQ,YACnBC,YAAiB,MAAJT,OAAI,EAAJA,EAAMS,YAEvB,EAoEoCC,YA/DpC,SAAqBC,GACnB,IAAIC,EAUJ,OAPEA,EADqB,iBAAZD,EACFE,SAASC,eAAeH,GAExBA,EAGTC,EAAKG,UAAY,GAEVH,CACT,EAmDiDI,qBA7CjD,SAA8BC,GAAQ,IAAAC,EAAAC,EAEpC,MAAMC,EAAOH,EAAOI,kBAAoBJ,EAAOK,mBACzCC,EAAON,EAAOO,kBAAoBP,EAAOQ,mBACzCC,EAAOT,EAAOU,kBAAoBV,EAAOW,mBAsC/C,MApCgB,CAQdC,SAAUZ,EAAOY,UAAY,CAAC,EAC9BC,SAAQ5B,OAAAC,OAAA,GAAO4B,EAAAA,EAAad,EAAOa,UAGnCR,mBAAoBL,EAAOK,mBAAqBF,EAAOY,EAAAA,EAASV,mBAChEG,mBAAoBR,EAAOQ,mBAAqBF,EAAOS,EAAAA,EAASP,mBAChEG,mBAAoBX,EAAOW,mBAAqBF,EAAOM,EAAAA,EAASJ,mBAChEK,WAAYhB,EAAOgB,WAAahB,EAAOgB,WAAaD,EAAAA,EAASC,WAC7DC,aAAcjB,EAAOiB,aAAejB,EAAOiB,aAAeF,EAAAA,EAASE,aACnEC,cAAelB,EAAOkB,cACtBC,uBAAwBnB,EAAOmB,uBAC/BC,WAAYpB,EAAOoB,YAAcL,EAAAA,EAASK,WAC1CC,kBAAmBrB,EAAOqB,mBAAqBN,EAAAA,EAASM,kBACxDC,eAAgBtB,EAAOsB,gBAAkBP,EAAAA,EAASO,eAClDC,eAAgBvB,EAAOuB,gBAAkBR,EAAAA,EAASQ,eAClDC,cAAexB,EAAOwB,eAAiBT,EAAAA,EAASS,cAChDC,mBAAoBzB,EAAOyB,oBAAsBV,EAAAA,EAASU,mBAC1DC,mBAAoB1B,EAAO0B,oBAAsBX,EAAAA,EAASW,mBAC1DC,mBAAoB3B,EAAO2B,oBAAsBZ,EAAAA,EAASY,mBAC1DC,qBAAsB5B,EAAO4B,sBAAwBb,EAAAA,EAASa,qBAC9DC,WAAY7B,EAAO6B,YAAcd,EAAAA,EAASc,WAC1CC,WAAY9B,EAAO8B,YAAcf,EAAAA,EAASe,WAG1CC,oBAA+C,OAA5B9B,EAAED,EAAO+B,sBAAmB9B,EAC/C+B,2BAA6D,OAAnC9B,EAAEF,EAAOgC,6BAA0B9B,EAIjE,E","sources":["webpack://labelstudio/../../libs/editor/src/env/production.js"],"sourcesContent":["import External from \"../core/External\";\nimport Messages from \"../utils/messages\";\n\nfunction getData(task) {\n  if (task && task.data) {\n    return {\n      ...task,\n      data: JSON.stringify(task.data),\n    };\n  }\n\n  return task;\n}\n\nfunction getState(task) {\n  return {\n    annotations: task?.annotations,\n    completions: task?.completions,\n    predictions: task?.predictions,\n  };\n}\n\n/**\n * LS will render in this part\n */\nfunction rootElement(element) {\n  let root;\n\n  if (typeof element === \"string\") {\n    root = document.getElementById(element);\n  } else {\n    root = element;\n  }\n\n  root.innerHTML = \"\";\n\n  return root;\n}\n\n/**\n * Function to configure application with callbacks\n * @param {object} params\n */\nfunction configureApplication(params) {\n  // callbacks for back compatibility\n  const osCB = params.submitAnnotation || params.onSubmitAnnotation;\n  const ouCB = params.updateAnnotation || params.onUpdateAnnotation;\n  const odCB = params.deleteAnnotation || params.onDeleteAnnotation;\n\n  const options = {\n    // communication with the server\n    // fetch: params.fetch || Requests.fetcher,\n    // patch: params.patch || Requests.patch,\n    // post: params.post || Requests.poster,\n    // remove: params.remove || Requests.remover,\n\n    // communication with the user\n    settings: params.settings || {},\n    messages: { ...Messages, ...params.messages },\n\n    // callbacks and event handlers\n    onSubmitAnnotation: params.onSubmitAnnotation ? osCB : External.onSubmitAnnotation,\n    onUpdateAnnotation: params.onUpdateAnnotation ? ouCB : External.onUpdateAnnotation,\n    onDeleteAnnotation: params.onDeleteAnnotation ? odCB : External.onDeleteAnnotation,\n    onSkipTask: params.onSkipTask ? params.onSkipTask : External.onSkipTask,\n    onUnskipTask: params.onUnskipTask ? params.onUnskipTask : External.onUnskipTask,\n    onSubmitDraft: params.onSubmitDraft,\n    onPresignUrlForProject: params.onPresignUrlForProject,\n    onTaskLoad: params.onTaskLoad || External.onTaskLoad,\n    onLabelStudioLoad: params.onLabelStudioLoad || External.onLabelStudioLoad,\n    onEntityCreate: params.onEntityCreate || External.onEntityCreate,\n    onEntityDelete: params.onEntityDelete || External.onEntityDelete,\n    onGroundTruth: params.onGroundTruth || External.onGroundTruth,\n    onSelectAnnotation: params.onSelectAnnotation || External.onSelectAnnotation,\n    onAcceptAnnotation: params.onAcceptAnnotation || External.onAcceptAnnotation,\n    onRejectAnnotation: params.onRejectAnnotation || External.onRejectAnnotation,\n    onStorageInitialized: params.onStorageInitialized || External.onStorageInitialized,\n    onNextTask: params.onNextTask || External.onNextTask,\n    onPrevTask: params.onPrevTask || External.onPrevTask,\n\n    // other settings aka flags\n    forceAutoAnnotation: params.forceAutoAnnotation ?? false,\n    forceAutoAcceptSuggestions: params.forceAutoAcceptSuggestions ?? false,\n  };\n\n  return options;\n}\n\nexport default { getData, getState, rootElement, configureApplication };\n"],"names":["getData","task","data","Object","assign","JSON","stringify","getState","annotations","completions","predictions","rootElement","element","root","document","getElementById","innerHTML","configureApplication","params","_params$forceAutoAnno","_params$forceAutoAcce","osCB","submitAnnotation","onSubmitAnnotation","ouCB","updateAnnotation","onUpdateAnnotation","odCB","deleteAnnotation","onDeleteAnnotation","settings","messages","Messages","External","onSkipTask","onUnskipTask","onSubmitDraft","onPresignUrlForProject","onTaskLoad","onLabelStudioLoad","onEntityCreate","onEntityDelete","onGroundTruth","onSelectAnnotation","onAcceptAnnotation","onRejectAnnotation","onStorageInitialized","onNextTask","onPrevTask","forceAutoAnnotation","forceAutoAcceptSuggestions"],"sourceRoot":""}