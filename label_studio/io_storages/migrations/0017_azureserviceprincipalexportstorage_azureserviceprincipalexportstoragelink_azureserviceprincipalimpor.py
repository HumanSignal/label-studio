# Generated by Django 3.2.25 on 2024-04-16 12:22

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('tasks', '0047_merge_20240318_2210'),
        ('projects', '0026_auto_20231103_0020'),
        ('io_storages', '0016_add_aws_sse_kms_key'),
    ]

    operations = [
        migrations.CreateModel(
            name='AzureServicePrincipalStorageMixin',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('container', models.TextField(blank=True, help_text='Azure blob container', null=True, verbose_name='container')),
                ('prefix', models.TextField(blank=True, help_text='Azure blob prefix name', null=True, verbose_name='prefix')),
                ('regex_filter', models.TextField(blank=True, help_text='Cloud storage regex for filtering objects', null=True, verbose_name='regex_filter')),
                ('use_blob_urls', models.BooleanField(default=False, help_text='Interpret objects as BLOBs and generate URLs', verbose_name='use_blob_urls')),
                ('account_name', models.TextField(blank=True, help_text='Azure Blob account name', null=True, verbose_name='account_name')),
                ('tenant_id', models.TextField(blank=True, help_text='Azure Tenant ID', null=True, verbose_name='tenant_id')),
                ('client_id', models.TextField(blank=True, help_text='Azure Blob Service Principal Client ID', null=True, verbose_name='client_id')),
                ('client_secret', models.TextField(blank=True, help_text='Azure Blob Service Principal Client Secret', null=True, verbose_name='client_secret')),
            ],
        ),
        migrations.CreateModel(
            name='AzureServicePrincipalExportStorage',
            fields=[
                ('azureserviceprincipalstoragemixin_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='io_storages.azureserviceprincipalstoragemixin')),
                ('last_sync', models.DateTimeField(blank=True, help_text='Last sync finished time', null=True, verbose_name='last sync')),
                ('last_sync_count', models.PositiveIntegerField(blank=True, help_text='Count of tasks synced last time', null=True, verbose_name='last sync count')),
                ('last_sync_job', models.CharField(blank=True, help_text='Last sync job ID', max_length=256, null=True, verbose_name='last_sync_job')),
                ('status', models.CharField(choices=[('initialized', 'Initialized'), ('queued', 'Queued'), ('in_progress', 'In progress'), ('failed', 'Failed'), ('completed', 'Completed')], default='initialized', max_length=64)),
                ('traceback', models.TextField(blank=True, help_text='Traceback report for the last failed sync', null=True)),
                ('meta', models.JSONField(default=dict, help_text='Meta and debug information about storage processes', null=True, verbose_name='meta')),
                ('title', models.CharField(blank=True, help_text='Cloud storage title', max_length=256, null=True, verbose_name='title')),
                ('description', models.TextField(blank=True, help_text='Cloud storage description', null=True, verbose_name='description')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Creation time', verbose_name='created at')),
                ('synchronizable', models.BooleanField(default=True, help_text='If storage can be synced', verbose_name='synchronizable')),
                ('can_delete_objects', models.BooleanField(blank=True, help_text='Deletion from storage enabled', null=True, verbose_name='can_delete_objects')),
                ('project', models.ForeignKey(help_text='A unique integer value identifying this project.', on_delete=django.db.models.deletion.CASCADE, related_name='io_storages_azureserviceprincipalexportstorages', to='projects.project')),
            ],
            options={
                'abstract': False,
            },
            bases=('io_storages.azureserviceprincipalstoragemixin', models.Model),
        ),
        migrations.CreateModel(
            name='AzureServicePrincipalImportStorage',
            fields=[
                ('azureserviceprincipalstoragemixin_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='io_storages.azureserviceprincipalstoragemixin')),
                ('last_sync', models.DateTimeField(blank=True, help_text='Last sync finished time', null=True, verbose_name='last sync')),
                ('last_sync_count', models.PositiveIntegerField(blank=True, help_text='Count of tasks synced last time', null=True, verbose_name='last sync count')),
                ('last_sync_job', models.CharField(blank=True, help_text='Last sync job ID', max_length=256, null=True, verbose_name='last_sync_job')),
                ('status', models.CharField(choices=[('initialized', 'Initialized'), ('queued', 'Queued'), ('in_progress', 'In progress'), ('failed', 'Failed'), ('completed', 'Completed')], default='initialized', max_length=64)),
                ('traceback', models.TextField(blank=True, help_text='Traceback report for the last failed sync', null=True)),
                ('meta', models.JSONField(default=dict, help_text='Meta and debug information about storage processes', null=True, verbose_name='meta')),
                ('title', models.CharField(blank=True, help_text='Cloud storage title', max_length=256, null=True, verbose_name='title')),
                ('description', models.TextField(blank=True, help_text='Cloud storage description', null=True, verbose_name='description')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Creation time', verbose_name='created at')),
                ('synchronizable', models.BooleanField(default=True, help_text='If storage can be synced', verbose_name='synchronizable')),
                ('presign', models.BooleanField(default=True, help_text='Generate presigned URLs', verbose_name='presign')),
                ('presign_ttl', models.PositiveSmallIntegerField(default=1, help_text='Presigned URLs TTL (in minutes)', verbose_name='presign_ttl')),
                ('project', models.ForeignKey(help_text='A unique integer value identifying this project.', on_delete=django.db.models.deletion.CASCADE, related_name='io_storages_azureserviceprincipalimportstorages', to='projects.project')),
            ],
            options={
                'abstract': False,
            },
            bases=('io_storages.azureserviceprincipalstoragemixin', models.Model),
        ),
        migrations.CreateModel(
            name='AzureServicePrincipalImportStorageLink',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.TextField(help_text='External link key', verbose_name='key')),
                ('object_exists', models.BooleanField(default=True, help_text='Whether object under external link still exists', verbose_name='object exists')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Creation time', verbose_name='created at')),
                ('task', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='io_storages_azureserviceprincipalimportstoragelink', to='tasks.task')),
                ('storage', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='links', to='io_storages.azureserviceprincipalimportstorage')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AzureServicePrincipalExportStorageLink',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_exists', models.BooleanField(default=True, help_text='Whether object under external link still exists', verbose_name='object exists')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Creation time', verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Update time', verbose_name='updated at')),
                ('annotation', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='io_storages_azureserviceprincipalexportstoragelink', to='tasks.annotation')),
                ('storage', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='links', to='io_storages.azureserviceprincipalexportstorage')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
